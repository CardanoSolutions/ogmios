name: Continuous Integration

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]
    tags: [ "*.*.*" ]

jobs:
  server:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - name: 💽 Install OS Packages
      uses: mstksg/get-package@2a4b48d55d72d43ca89ae58ec9ca1397d34a1c35
      with:
        apt-get: libgmp-dev libssl-dev libsystemd-dev libsodium-dev zlib1g-dev

    - name: 📥 Checkout repository
      uses: actions/checkout@v2.3.3

    - name: 🧰 Setup Stack
      uses: timbod7/setup-stack@1f68f27c99094a718fe60a2790550aafd042f729

    - name: 💾 Cache Dependencies
      id: cache
      uses: actions/cache@v2.1.1
      with:
        path: ~/.stack
        key: ${{ matrix.os }}-${{ hashFiles('server/resolver.yaml') }}

    - name: 📸 Build Snapshot
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd server
        stack --no-terminal build --only-snapshot --haddock --no-haddock-deps

    - name: 🔨 Build & Test
      run: |
        cd server
        stack --no-terminal test --flag ogmios:production --no-run-tests
        stack --no-terminal test --flag ogmios:production                 ogmios:unit

  docker:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]

    runs-on: ${{ matrix.os }}
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v2.3.3

    - name: 🧰 Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: 🐳 Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    - name: 🔨 Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ktorz/ogmios:cache
        target: ogmios
        cache-from: type=registry,ref=ktorz/ogmios:cache
        cache-to: type=inline

  clients_TypeScript:
    needs: [docker]
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        network: [ testnet ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v2.3.3

    - name: ⌚ Get Date
      id: date
      shell: bash
      run: |
        echo "::set-output name=value::$(/bin/date -u "+%Y%m%d")"

    - name: 🧰 Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.4

    - name: 🐳 Cache Docker Volumes
      id: cache
      uses: actions/cache@v2.1.1
      with:
        path: ./data
        key: cardano-node-${{ matrix.network }}-${{ steps.date.outputs.value }}
        restore-keys: |
          cardano-node-${{ matrix.network }}

    - name: 🩹 Overwrite docker-compose
      shell: bash
      run: |
        sed -i "s@node-db:/data@./data:/data@" docker-compose.yml
        sed -i "s@ktorz/ogmios:latest@ktorz/ogmios:cache@" docker-compose.yml

    - name: ↪ Set package version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
      with:
        path: clients/TypeScript

    - name: 🔨 Build
      working-directory: clients/TypeScript
      run: |
        yarn install --frozen-lockfile --non-interactive --logevel=error
        yarn generate-schema-types
        yarn build
        yarn lint

    - name: 🔬 Test
      if: matrix.network == 'testnet'
      working-directory: clients/TypeScript
      run: |
        docker pull ktorz/ogmios:cache
        yarn testnet:up -d
        ../../scripts/wait-for-sync.sh 1338 1
        yarn test
        yarn testnet:down

    - name: 📦 Pack
      working-directory: clients/TypeScript
      run: |
        ./scripts/pack.sh

    - name: 📤 Upload npm packages
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-clients-ts-packages
        path: |
          clients/TypeScript/cardano-ogmios-client-${{ steps.package-version.outputs.current-version}}.tgz
          clients/TypeScript/cardano-ogmios-schema-${{ steps.package-version.outputs.current-version}}.tgz
          clients/TypeScript/cardano-ogmios-repl-${{ steps.package-version.outputs.current-version}}.tgz

    - name: 📦 Package REPL
      working-directory: clients/TypeScript
      run: yarn repl:pkg

    - name: 📤 Upload REPL exe - Linux
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-repl-linux
        path: clients/TypeScript/packages/repl/build/cardano-ogmios-repl-linux

    - name: 📤 Upload REPL exe - macOS
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-repl-macos
        path: clients/TypeScript/packages/repl/build/cardano-ogmios-repl-macos

    - name: 📤 Upload REPL exe - Windows
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-repl-win
        path: clients/TypeScript/packages/repl/build/cardano-ogmios-repl-win.exe
