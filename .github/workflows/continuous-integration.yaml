name: Continuous Integration

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]
    tags: [ "*.*.*" ]

jobs:
  #  _______  _______  ______    __   __  _______  ______
  # |       ||       ||    _ |  |  | |  ||       ||    _ |
  # |  _____||    ___||   | ||  |  |_|  ||    ___||   | ||
  # | |_____ |   |___ |   |_||_ |       ||   |___ |   |_||_
  # |_____  ||    ___||    __  ||       ||    ___||    __  |
  #  _____| ||   |___ |   |  | | |     | |   |___ |   |  | |
  # |_______||_______||___|  |_|  |___|  |_______||___|  |_|
  #
  server:
    strategy:
      matrix:
        os: [ubuntu-20.04]

    runs-on: ${{ matrix.os }}
    steps:
    - name: üíΩ Install OS Packages
      uses: mstksg/get-package@2a4b48d55d72d43ca89ae58ec9ca1397d34a1c35
      with:
        apt-get: libgmp-dev libssl-dev libsystemd-dev libsodium-dev zlib1g-dev

    - name: üì• Checkout repository
      uses: actions/checkout@v2.3.3

    - name: üß∞ Setup Stack
      uses: timbod7/setup-stack@1f68f27c99094a718fe60a2790550aafd042f729

    - name: üíæ Cache Dependencies
      id: cache
      uses: actions/cache@v2.1.1
      with:
        path: ~/.stack
        key: ${{ matrix.os }}-${{ hashFiles('server/resolver.yaml') }}

    - name: üì∏ Build Snapshot
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd server
        stack --no-terminal build --only-snapshot --haddock --no-haddock-deps

    - name: üî® Build & Test
      run: |
        cd server
        stack --no-terminal test --flag ogmios:production --no-run-tests
        stack --no-terminal test --flag ogmios:production                 ogmios:unit

  #  _______  _______  ______    __   __  _______  ______            ___      ___   __    _  _______
  # |       ||       ||    _ |  |  | |  ||       ||    _ |          |   |    |   | |  |  | ||       |
  # |  _____||    ___||   | ||  |  |_|  ||    ___||   | ||          |   |    |   | |   |_| ||_     _|
  # | |_____ |   |___ |   |_||_ |       ||   |___ |   |_||_         |   |    |   | |       |  |   |
  # |_____  ||    ___||    __  ||       ||    ___||    __  |        |   |___ |   | |  _    |  |   |
  #  _____| ||   |___ |   |  | | |     | |   |___ |   |  | | _____  |       ||   | | | |   |  |   |
  # |_______||_______||___|  |_|  |___|  |_______||___|  |_||_____| |_______||___| |_|  |__|  |___|
  #
  server_lint:
    strategy:
      matrix:
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v2.3.3

    - name: üî¨ hlint
      shell: bash
      env:
        PACKAGE: hlint
        REPOSITORY: ndmitchell/hlint
        PLATFORM: x86_64-linux
        RELEASE: v3.2
        VERSION: 3.2
      run: |
        cd server
        curl -sSL https://raw.github.com/cardanosolutions/ogmios/master/scripts/exec-from-github.sh | sh -s src test app -h .hlint.yaml

    - name: üßê stylish-haskell
      shell: bash
      env:
        PACKAGE: stylish-haskell
        REPOSITORY: jaspervdj/stylish-haskell
        PLATFORM: linux-x86_64
        RELEASE: v0.11.0.0
        VERSION: v0.11.0.0
      run: |
        cd server
        curl -sSL https://raw.github.com/cardanosolutions/ogmios/master/scripts/exec-from-github.sh | sh -s $(find src test app -type f -name '*.hs' ! -path '*.stack-work*') -i -c .stylish-haskell.yaml
        if [ -z "$(git status --porcelain)" ]; then
            echo "No style errors detected."
        else
            echo "Style errors detected:"
            git diff
            exit 1
        fi

  #  _______  __    _  ______   _______  _______  _______  __    _  ______           _______  ______    _______
  # |       ||  |  | ||      | |       ||       ||       ||  |  | ||      |         |       ||    _ |  |       |
  # |    ___||   |_| ||  _    ||_     _||   _   ||    ___||   |_| ||  _    |        |    _  ||   | ||  |    ___|
  # |   |___ |       || | |   |  |   |  |  | |  ||   |___ |       || | |   |        |   |_| ||   |_||_ |   |___
  # |    ___||  _    || |_|   |  |   |  |  |_|  ||    ___||  _    || |_|   |        |    ___||    __  ||    ___|
  # |   |___ | | |   ||       |  |   |  |       ||   |___ | | |   ||       | _____  |   |    |   |  | ||   |___
  # |_______||_|  |__||______|   |___|  |_______||_______||_|  |__||______| |_____| |___|    |___|  |_||_______|
  #
  pre_endToEnd:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]

    runs-on: ${{ matrix.os }}
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v2.3.3

    - name: üß∞ Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: üê≥ Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    - name: üî® Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: cardanosolutions/ogmios:cache
        target: ogmios
        cache-from: type=registry,ref=cardanosolutions/ogmios:cache
        cache-to: type=inline

  #  _______  ___      ___   _______  __    _  _______  _______          _______  __   __  _______  _______  _______  _______  ______    ___   _______  _______
  # |       ||   |    |   | |       ||  |  | ||       ||       |        |       ||  | |  ||       ||       ||       ||       ||    _ |  |   | |       ||       |
  # |       ||   |    |   | |    ___||   |_| ||_     _||  _____|        |_     _||  |_|  ||    _  ||    ___||  _____||       ||   | ||  |   | |    _  ||_     _|
  # |       ||   |    |   | |   |___ |       |  |   |  | |_____           |   |  |       ||   |_| ||   |___ | |_____ |       ||   |_||_ |   | |   |_| |  |   |
  # |      _||   |___ |   | |    ___||  _    |  |   |  |_____  |          |   |  |_     _||    ___||    ___||_____  ||      _||    __  ||   | |    ___|  |   |
  # |     |_ |       ||   | |   |___ | | |   |  |   |   _____| | _____    |   |    |   |  |   |    |   |___  _____| ||     |_ |   |  | ||   | |   |      |   |
  # |_______||_______||___| |_______||_|  |__|  |___|  |_______||_____|   |___|    |___|  |___|    |_______||_______||_______||___|  |_||___| |___|      |___|
  #
  clients_TypeScript:
    needs: [pre_endToEnd]
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        network: [ testnet ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v2.3.3

    - name: ‚åö Get Date
      id: date
      shell: bash
      run: |
        echo "::set-output name=value::$(/bin/date -u "+%Y%m%d")"

    - name: üß∞ Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.4

    - name: üê≥ Cache Docker Volumes
      id: cache
      uses: actions/cache@v2.1.1
      with:
        path: ./data
        key: cardano-node-${{ matrix.network }}-${{ steps.date.outputs.value }}
        restore-keys: |
          cardano-node-${{ matrix.network }}

    - name: ü©π Overwrite docker-compose
      shell: bash
      run: |
        sed -i "s@node-db:/data@./data:/data@" docker-compose.yml
        sed -i "s@cardanosolutions/ogmios:latest@cardanosolutions/ogmios:cache@" docker-compose.yml

    - name: ‚Ü™ Set package version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
      with:
        path: clients/TypeScript

    - name: üî® Build
      working-directory: clients/TypeScript
      run: |
        yarn install --frozen-lockfile --non-interactive --logevel=error
        yarn generate-schema-types
        yarn build
        yarn lint

    - name: üî¨ Test
      if: matrix.network == 'testnet'
      working-directory: clients/TypeScript
      run: |
        docker pull cardanosolutions/ogmios:cache
        yarn testnet:up -d
        ../../scripts/wait-for-sync.sh 1338 1
        yarn test
        yarn testnet:down

    - name: üì¶ Pack
      working-directory: clients/TypeScript
      run: |
        ./scripts/pack.sh

    - name: üì§ Upload npm packages
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-clients-ts-packages
        path: |
          clients/TypeScript/cardano-ogmios-client-${{ steps.package-version.outputs.current-version}}.tgz
          clients/TypeScript/cardano-ogmios-schema-${{ steps.package-version.outputs.current-version}}.tgz
          clients/TypeScript/cardano-ogmios-repl-${{ steps.package-version.outputs.current-version}}.tgz

    - name: üì¶ Package REPL
      working-directory: clients/TypeScript
      run: yarn repl:pkg

    - name: üì§ Upload REPL exe - Linux
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-repl-linux
        path: clients/TypeScript/packages/repl/build/cardano-ogmios-repl-linux

    - name: üì§ Upload REPL exe - macOS
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-repl-macos
        path: clients/TypeScript/packages/repl/build/cardano-ogmios-repl-macos

    - name: üì§ Upload REPL exe - Windows
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-repl-win
        path: clients/TypeScript/packages/repl/build/cardano-ogmios-repl-win.exe
