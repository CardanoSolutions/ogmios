name: Continuous Integration

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]
    tags: [ "*.*.*" ]

jobs:
  server:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - name: 💽 Install OS Packages
      uses: mstksg/get-package@2a4b48d55d72d43ca89ae58ec9ca1397d34a1c35
      with:
        apt-get: libgmp-dev libssl-dev libsystemd-dev libsodium-dev zlib1g-dev

    - name: 📥 Checkout repository
      uses: actions/checkout@v2.3.3

    - name: 🧰 Setup Stack
      uses: timbod7/setup-stack@1f68f27c99094a718fe60a2790550aafd042f729

    - name: 💾 Cache Dependencies
      id: cache
      uses: actions/cache@v2.1.1
      with:
        path: ~/.stack
        key: ${{ matrix.os }}-${{ hashFiles('server/resolver.yaml') }}

    - name: 📸 Build Snapshot
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd server
        stack --no-terminal build --only-snapshot --haddock --no-haddock-deps

    - name: 🔨 Build & Test
      run: |
        cd server
        stack --no-terminal build                 --haddock --no-haddock-deps --flag ogmios:production
        stack --no-terminal test ogmios:unit      --haddock --no-haddock-deps --flag ogmios:production

  clients_TypeScript:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        network: [ testnet ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v2.3.3

    - name: 🧰 Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.4

    - name: 🐳 Cache Docker Volumes
      id: cache
      uses: actions/cache@v2.1.1
      with:
        path: ./data
        key: cardano-node-${{ matrix.network }}-nightly

    - name: 🩹 Overwrite docker-compose.yml
      shell: bash
      run: |
        sed -i "s@node-db:/data@./data:/data@" docker-compose.yml

    - name: ↪ Set package version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@master
      with:
        path: clients/TypeScript

    - name: 🔨 Build
      working-directory: clients/TypeScript
      run: |
        yarn install --frozen-lockfile --non-interactive --logevel=error
        yarn generate-schema-types
        yarn build
        yarn lint

    - name: 🔬 Test
      if: matrix.network == 'testnet'
      working-directory: clients/TypeScript
      run: |
        yarn testnet:up
        ./scripts/wait-for-sync.sh 1338 1
        yarn test
        yarn testnet:down

    - name: 📦 Pack
      working-directory: clients/TypeScript
      run: |
        ./scripts/pack.sh

    - name: 📤 Upload npm packages
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-clients-ts-packages
        path: |
          clients/TypeScript/cardano-ogmios-client-${{ steps.package-version.outputs.current-version}}.tgz
          clients/TypeScript/cardano-ogmios-schema-${{ steps.package-version.outputs.current-version}}.tgz
          clients/TypeScript/cardano-ogmios-repl-${{ steps.package-version.outputs.current-version}}.tgz

    - name: 📦 Package REPL
      working-directory: clients/TypeScript
      run: yarn repl:pkg

    - name: 📤 Upload REPL exe - Linux
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-repl-linux
        path: clients/TypeScript/packages/repl/build/cardano-ogmios-repl-linux

    - name: 📤 Upload REPL exe - macOS
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-repl-macos
        path: clients/TypeScript/packages/repl/build/cardano-ogmios-repl-macos

    - name: 📤 Upload REPL exe - Windows
      uses: actions/upload-artifact@v2
      with:
        name: cardano-ogmios-repl-win
        path: clients/TypeScript/packages/repl/build/cardano-ogmios-repl-win.exe
