asyncapi: '2.4.0'
info:
  title: Ogmios
  version: '5.6.0'
  description: |

    ### Protocols

    - [Local Chain-Sync](#operation-publish-/?Local-Chain-Sync)
    - [Local Tx-Submission](#operation-publish-/?Local-Tx-Submission)
    - [Local Tx-Monitor](#operation-publish-/?Local-Tx-Monitor)
    - [Local State-Query](#operation-publish-/?Local-State-Query)

    ### Schemas

    Here's a shortlist that contains a few handpicked schema definitions. Find **all definitions** at the bottom of this document.

    - [Block](#schema-Block)
    - Protocol Parameters
      - [Byron](#schema-ProtocolParameters[Byron])
      - [Shelley](#schema-ProtocolParameters[Shelley])
      - [Alonzo](#schema-ProtocolParameters[Alonzo])
      - [Babbage](#schema-ProtocolParameters[Babbage])
    - Transaction
      - [Byron](#schema-Tx[Byron])
      - [Shelley](#schema-Tx[Shelley])
      - [Allegra](#schema-Tx[Allegra])
      - [Mary](#schema-Tx[Mary])
      - [Alonzo](#schema-Tx[Alonzo])
      - [Babbage](#schema-Tx[Babbage])
    - [Transaction Submission Errors](#schema-SubmitTxError)
    - [Transaction Evaluation Failures](#schema-EvaluationFailure)
    - [Value](#schema-Value)

  license:
    name: MPL-2.0
    url: https://raw.githubusercontent.com/CardanoSolutions/ogmios/master/LICENSE

defaultContentType: application/json

tags:
  - name: Raw JSON Schema
    externalDocs:
      url: https://ogmios.dev/ogmios.json

servers:
  localhost:
    url: "127.0.0.1:{port}"
    protocol: ws
    description: |
      Default instance, when running a local server.
    variables:
      port:
        default: "1337"

  dandelion:
    url: "ogmios-api.{network}.dandelion.link"
    protocol: wss
    description: |
      Hosted Dandelion's instances, by [Gimbalabs](https://gimbalabs.com/).
    variables:
      network:
        enum:
          - mainnet
          - testnet

channels:
  /?Local-Chain-Sync:
    description: |
      Input & output messages regarding the [Local Chain-Sync](/mini-protocols/local-chain-sync) protocol.

      <p align="right"><a href="#asyncapi">Top ⬆️</a></p>
    publish:
      operationId: local-chain-sync[inputs]
      message:
        oneOf:
          - $ref: "#/components/messages/RequestNext"
          - $ref: "#/components/messages/FindIntersect"

    subscribe:
      operationId: local-chain-sync[outputs]
      message:
        oneOf:
          - $ref: "#/components/messages/RequestNextResponse"
          - $ref: "#/components/messages/FindIntersectResponse"

  /?Local-Tx-Submission:
    description: |
      Input & output messages regarding the [Local Tx-Submission](/mini-protocols/local-tx-submission) protocol.

      <p align="right"><a href="#asyncapi">Top ⬆️</a></p>
    publish:
      operationId: local-tx-submission[inputs]
      message:
        oneOf:
          - $ref: "#/components/messages/SubmitTx"
          - $ref: "#/components/messages/EvaluateTx"
    subscribe:
      operationId: local-tx-submission[outputs]
      message:
        oneOf:
          - $ref: "#/components/messages/SubmitTxResponse"
          - $ref: "#/components/messages/EvaluateTxResponse"


  /?Local-Tx-Monitor:
    description: |
      Input & output messages regarding the [Local Tx-Monitor](/mini-protocols/local-tx-monitor) protocol.

      <p align="right"><a href="#asyncapi">Top ⬆️</a></p>
    publish:
      operationId: local-tx-monitor[inputs]
      message:
        oneOf:
          - $ref: "#/components/messages/AwaitAcquire"
          - $ref: "#/components/messages/NextTx"
          - $ref: "#/components/messages/HasTx"
          - $ref: "#/components/messages/SizeAndCapacity"
          - $ref: "#/components/messages/ReleaseMempool"
    subscribe:
      operationId: local-tx-monitor[outputs]
      message:
        oneOf:
          - $ref: "#/components/messages/AwaitAcquireResponse"
          - $ref: "#/components/messages/NextTxResponse"
          - $ref: "#/components/messages/HasTxResponse"
          - $ref: "#/components/messages/SizeAndCapacityResponse"
          - $ref: "#/components/messages/ReleaseMempool"

  /?Local-State-Query:
    description: |
      Input & output messages regarding the [Local State-Query](/mini-protocols/local-state-query) protocol.

      <p align="right"><a href="#asyncapi">Top ⬆️</a></p>
    publish:
      operationId: local-state-query[inputs]
      message:
        oneOf:
          - $ref: "#/components/messages/Acquire"
          - $ref: "#/components/messages/Query"
          - $ref: "#/components/messages/Release"

    subscribe:
      operationId: local-state-query[outputs]
      message:
        oneOf:
          - $ref: "#/components/messages/AcquireResponse"
          - $ref: "#/components/messages/QueryResponse[blockHeight]"
          - $ref: "#/components/messages/QueryResponse[chainTip]"
          - $ref: "#/components/messages/QueryResponse[currentEpoch]"
          - $ref: "#/components/messages/QueryResponse[currentProtocolParameters]"
          - $ref: "#/components/messages/QueryResponse[delegationsAndRewards]"
          - $ref: "#/components/messages/QueryResponse[eraStart]"
          - $ref: "#/components/messages/QueryResponse[eraSummaries]"
          - $ref: "#/components/messages/QueryResponse[genesisConfig]"
          - $ref: "#/components/messages/QueryResponse[ledgerTip]"
          - $ref: "#/components/messages/QueryResponse[nonMyopicMemberRewards]"
          - $ref: "#/components/messages/QueryResponse[poolIds]"
          - $ref: "#/components/messages/QueryResponse[poolParameters]"
          - $ref: "#/components/messages/QueryResponse[poolsRanking]"
          - $ref: "#/components/messages/QueryResponse[proposedProtocolParameters]"
          - $ref: "#/components/messages/QueryResponse[rewardsProvenance]"
          - $ref: "#/components/messages/QueryResponse[rewardsProvenance']"
          - $ref: "#/components/messages/QueryResponse[stakeDistribution]"
          - $ref: "#/components/messages/QueryResponse[systemStart]"
          - $ref: "#/components/messages/QueryResponse[utxo]"
          - $ref: "#/components/messages/ReleaseResponse"

components:
  messages:
    RequestNext:
      title: RequestNext
      name: "since v3.0.0"
      description: |
        Request next block from the current cardano-node's cursor.
      payload:
        $ref: "/ogmios.json#/properties/RequestNext"

    RequestNextResponse:
      title: RequestNextResponse
      name: "since v3.0.0"
      description: |
        Response to a `RequestNext`.
      payload:
        $ref: "/ogmios.json#/properties/RequestNextResponse"

    FindIntersect:
      title: FindIntersect
      name: "since v3.0.0"
      description: |
        Ask for an intersection between the server's local chain and the given points.
      payload:
        $ref: "/ogmios.json#/properties/FindIntersect"

    FindIntersectResponse:
      title: FindIntersectResponse
      name: "since v3.0.0"
      description: |
        Response to a `FindIntersect`.
      payload:
        $ref: "/ogmios.json#/properties/FindIntersectResponse"

    SubmitTx:
      title: SubmitTx
      name: "since v3.0.0"
      description: |
        Submit a signed and serialized transaction to the network.
      payload:
        $ref: "/ogmios.json#/properties/SubmitTx"

    SubmitTxResponse:
      title: SubmitTxResponse
      name: "since v3.0.0"
      description: |
        Response to a `SubmitTx`.
      payload:
        $ref: "/ogmios.json#/properties/SubmitTxResponse"

    EvaluateTx:
      title: EvaluateTx
      name: "since v5.2.0"
      description: |
        Evaluate execution units of scripts in a well-formed transaction.
      payload:
        $ref: "/ogmios.json#/properties/EvaluateTx"

    EvaluateTxResponse:
      title: EvaluateTxResponse
      name: "since v5.2.0"
      description: |
        Response to a `EvaluateTx`.
      payload:
        $ref: "/ogmios.json#/properties/EvaluateTxResponse"

    AwaitAcquire:
      title: AwaitAcquire
      name: "since v5.1.0"
      description: |
        Acquire a mempool snapshot. This is blocking until a new (i.e different) snapshot is available.
      payload:
        $ref: "/ogmios.json#/properties/AwaitAcquire"

    AwaitAcquireResponse:
      title: AwaitAcquireResponse
      name: "since v5.1.0"
      description: |
        Response to a `AwaitAcquire`.
      payload:
        $ref: "/ogmios.json#/properties/AwaitAcquireResponse"

    NextTx:
      title: NextTx
      name: "since v5.1.0"
      description: |
        Request the next mempool transaction from an acquired snapshot.
      payload:
        $ref: "/ogmios.json#/properties/NextTx"

    NextTxResponse:
      title: NextTxResponse
      name: "since v5.1.0"
      description: |
        Response to a `NextTx`.
      payload:
        $ref: "/ogmios.json#/properties/NextTxResponse"

    HasTx:
      title: HasTx
      name: "since v5.1.0"
      description: |
        Ask whether a given transaction is present in the acquired mempool snapshot.
      payload:
        $ref: "/ogmios.json#/properties/HasTx"

    HasTxResponse:
      title: HasTxResponse
      name: "since v5.1.0"
      description: |
        Response to a `HasTx`.
      payload:
        $ref: "/ogmios.json#/properties/HasTxResponse"

    SizeAndCapacity:
      title: SizeAndCapacity
      name: "since v5.1.0"
      description: |
        Get size and capacities of the mempool (acquired snapshot).
      payload:
        $ref: "/ogmios.json#/properties/SizeAndCapacity"

    SizeAndCapacityResponse:
      title: SizeAndCapacityResponse
      name: "since v5.1.0"
      description: |
        Response to a `SizeAndCapacity`.
      payload:
        $ref: "/ogmios.json#/properties/SizeAndCapacityResponse"

    ReleaseMempool:
      title: ReleaseMempool
      name: "since v5.1.0"
      description: |
        Release a previously acquired mempool snapshot
      payload:
        $ref: "/ogmios.json#/properties/ReleaseMempool"

    ReleaseMempoolResponse:
      title: ReleaseMempoolResponse
      name: "since v5.1.0"
      description: |
        Response to a `ReleaseMempool`.
      payload:
        $ref: "/ogmios.json#/properties/ReleaseMempoolResponse"

    Acquire:
      title: Acquire
      name: "since v3.0.0"
      description: |
        Acquire a point on chain from which run queries.
      payload:
        $ref: "/ogmios.json#/properties/Acquire"

    AcquireResponse:
      title: AcquireResponse
      name: "since v3.0.0"
      description: |
        Response to a `Acquire`.
      payload:
        $ref: "/ogmios.json#/properties/AcquireResponse"

    Query:
      title: Query
      name: "since v3.0.0"
      description: |
        Query the ledger / node.
      payload:
        $ref: "/ogmios.json#/properties/Query"

    QueryResponse[blockHeight]:
      title: QueryResponse[blockHeight]
      name: "since v5.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[blockHeight]"
    QueryResponse[chainTip]:
      title: QueryResponse[chainTip]
      name: "since v5.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[chainTip]"
    QueryResponse[currentEpoch]:
      title: QueryResponse[currentEpoch]
      name: "since v3.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[currentEpoch]"
    QueryResponse[currentProtocolParameters]:
      title: QueryResponse[currentProtocolParameters]
      name: "since v3.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[currentProtocolParameters]"
    QueryResponse[delegationsAndRewards]:
      title: QueryResponse[delegationsAndRewards]
      name: "since v3.1.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[delegationsAndRewards]"
    QueryResponse[eraStart]:
      title: QueryResponse[eraStart]
      name: "since v3.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[eraStart]"
    QueryResponse[eraSummaries]:
      title: QueryResponse[eraSummaries]
      name: "since v5.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[eraSummaries]"
    QueryResponse[genesisConfig]:
      title: QueryResponse[genesisConfig]
      name: "since v3.1.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[genesisConfig]"
    QueryResponse[ledgerTip]:
      title: QueryResponse[ledgerTip]
      name: "since v3.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[ledgerTip]"
    QueryResponse[nonMyopicMemberRewards]:
      title: QueryResponse[nonMyopicMemberRewards]
      name: "since v3.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[nonMyopicMemberRewards]"
    QueryResponse[poolIds]:
      title: QueryResponse[poolIds]
      name: "since v4.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[poolIds]"
    QueryResponse[poolParameters]:
      title: QueryResponse[poolParameters]
      name: "since v4.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[poolParameters]"
    QueryResponse[poolsRanking]:
      title: QueryResponse[poolsRanking]
      name: "since v4.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[poolsRanking]"
    QueryResponse[proposedProtocolParameters]:
      title: QueryResponse[proposedProtocolParameters]
      name: "since v3.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[proposedProtocolParameters]"
    QueryResponse[rewardsProvenance]:
      title: QueryResponse[rewardsProvenance]
      name: "since v3.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[rewardsProvenance]"
    QueryResponse[rewardsProvenance']:
      title: QueryResponse[rewardsProvenance']
      name: "since v4.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[rewardsProvenance']"
    QueryResponse[stakeDistribution]:
      title: QueryResponse[stakeDistribution]
      name: "since v3.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[stakeDistribution]"
    QueryResponse[systemStart]:
      title: QueryResponse[systemStart]
      name: "since v5.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[systemStart]"
    QueryResponse[utxo]:
      title: QueryResponse[utxo]
      name: "since v3.0.0"
      payload:
        $ref: "/ogmios.json#/properties/QueryResponse[utxo]"

    Release:
      title: Release
      name: "since v3.0.0"
      description: |
        Release a point on chain previously acquired.
      payload:
        $ref: "/ogmios.json#/properties/Release"

    ReleaseResponse:
      title: ReleaseResponse
      name: "since v3.0.0"
      description: |
        Response to a `Release`.
      payload:
        $ref: "/ogmios.json#/properties/ReleaseResponse"

  schemas:
    AcquireFailureDetails: { "$ref": "/ogmios.json#/definitions/AcquireFailureDetails" }
    Address: { "$ref": "/ogmios.json#/definitions/Address" }
    AddressAttributes: { "$ref": "/ogmios.json#/definitions/AddressAttributes" }
    AssetQuantity: { "$ref": "/ogmios.json#/definitions/AssetQuantity" }
    AuxiliaryData: { "$ref": "/ogmios.json#/definitions/AuxiliaryData" }
    AuxiliaryDataBody: { "$ref": "/ogmios.json#/definitions/AuxiliaryDataBody" }
    Block : { "$ref": "/ogmios.json#/definitions/Block" }
    Block[Byron]: { "$ref": "/ogmios.json#/definitions/Block[Byron]" }
    Block[Shelley]: { "$ref": "/ogmios.json#/definitions/Block[Shelley]" }
    Block[Allegra]: { "$ref": "/ogmios.json#/definitions/Block[Allegra]" }
    Block[Mary]: { "$ref": "/ogmios.json#/definitions/Block[Mary]" }
    Block[Alonzo]: { "$ref": "/ogmios.json#/definitions/Block[Alonzo]" }
    Block[Babbage]: { "$ref": "/ogmios.json#/definitions/Block[Babbage]" }
    BootstrapWitness: { "$ref": "/ogmios.json#/definitions/BootstrapWitness" }
    BlockNo: { "$ref": "/ogmios.json#/definitions/BlockNo" }
    BlockNoOrOrigin: { "$ref": "/ogmios.json#/definitions/BlockNoOrOrigin" }
    BlockProof: { "$ref": "/ogmios.json#/definitions/BlockProof" }
    BlockSignature: { "$ref": "/ogmios.json#/definitions/BlockSignature" }
    BlockSize: { "$ref": "/ogmios.json#/definitions/BlockSize" }
    Bound : { "$ref": "/ogmios.json#/definitions/Bound " }
    Certificate : { "$ref": "/ogmios.json#/definitions/Certificate " }
    CertifiedVrf: { "$ref": "/ogmios.json#/definitions/CertifiedVrf" }
    ChainCode : { "$ref": "/ogmios.json#/definitions/ChainCode " }
    Genesis[Byron]: { "$ref": "/ogmios.json#/definitions/Genesis[Byron]" }
    Genesis[Shelley]: { "$ref": "/ogmios.json#/definitions/Genesis[Shelley]" }
    Genesis[Alonzo]: { "$ref": "/ogmios.json#/definitions/Genesis[Alonzo]" }
    CostModel: { "$ref": "/ogmios.json#/definitions/CostModel" }
    CostModels: { "$ref": "/ogmios.json#/definitions/CostModels" }
    Datum : { "$ref": "/ogmios.json#/definitions/Datum " }
    DelegationsAndRewards : { "$ref": "/ogmios.json#/definitions/DelegationsAndRewards " }
    Digest[Blake2b]::Block[*].body: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::Block[*].body" }
    Digest[Blake2b]::Block[*].header: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
    Digest[Blake2b]::Block[Byron].body.dlgPayload: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::Block[Byron].body.dlgPayload" }
    Digest[Blake2b]::Block[Byron].body.txPayload[].witness: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::Block[Byron].body.txPayload[].witness" }
    Digest[Blake2b]::Block[Byron].body.updatePayload: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::Block[Byron].body.updatePayload" }
    Digest[Blake2b]::Credential: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::Credential" }
    Digest[Blake2b]::Datum: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::Datum" }
    Digest[Blake2b]::MerkleRoot: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::MerkleRoot" }
    Digest[Blake2b]::Nonce: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::Nonce" }
    Digest[Blake2b]::PoolMetadata: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::PoolMetadata" }
    Digest[Blake2b]::Script: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::Script" }
    Digest[Blake2b]::ScriptIntegrity: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::ScriptIntegrity" }
    Digest[Blake2b]::VerificationKey: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
    Digest[Blake2b]::VrfVerificationKey: { "$ref": "/ogmios.json#/definitions/Digest[Blake2b]::VrfVerificationKey" }
    DlgCertificate: { "$ref": "/ogmios.json#/definitions/DlgCertificate" }
    Epoch: { "$ref": "/ogmios.json#/definitions/Epoch" }
    Era: { "$ref": "/ogmios.json#/definitions/Era" }
    EraMismatch: { "$ref": "/ogmios.json#/definitions/EraMismatch" }
    EraParameters: { "$ref": "/ogmios.json#/definitions/EraParameters" }
    EraSummary: { "$ref": "/ogmios.json#/definitions/EraSummary" }
    EvaluationFailure: { "$ref": "/ogmios.json#/definitions/EvaluationFailure" }
    EvaluationFailure[AdditionalUtxoOverlap]: { "$ref": "/ogmios.json#/definitions/EvaluationFailure[AdditionalUtxoOverlap]" }
    EvaluationFailure[CannotCreateEvaluationContext]: { "$ref": "/ogmios.json#/definitions/EvaluationFailure[CannotCreateEvaluationContext]" }
    EvaluationFailure[IncompatibleEra]: { "$ref": "/ogmios.json#/definitions/EvaluationFailure[IncompatibleEra]" }
    EvaluationFailure[NotEnoughSynced]: { "$ref": "/ogmios.json#/definitions/EvaluationFailure[NotEnoughSynced]" }
    EvaluationFailure[ScriptFailures]: { "$ref": "/ogmios.json#/definitions/EvaluationFailure[ScriptFailures]" }
    EvaluationResult: { "$ref": "/ogmios.json#/definitions/EvaluationResult" }
    ExUnits: { "$ref": "/ogmios.json#/definitions/ExUnits" }
    GenesisVerificationKey: { "$ref": "/ogmios.json#/definitions/GenesisVerificationKey" }
    IndividualPoolRewardsProvenance: { "$ref": "/ogmios.json#/definitions/IndividualPoolRewardsProvenance" }
    Int64: { "$ref": "/ogmios.json#/definitions/Int64" }
    InvalidEntity: { "$ref": "/ogmios.json#/definitions/InvalidEntity" }
    IssuerSignature: { "$ref": "/ogmios.json#/definitions/IssuerSignature" }
    IssuerVrfVerificationKey: { "$ref": "/ogmios.json#/definitions/IssuerVrfVerificationKey" }
    KesVerificationKey: { "$ref": "/ogmios.json#/definitions/KesVerificationKey" }
    Language: { "$ref": "/ogmios.json#/definitions/Language" }
    Lovelace: { "$ref": "/ogmios.json#/definitions/Lovelace" }
    LovelaceDelta: { "$ref": "/ogmios.json#/definitions/LovelaceDelta" }
    MempoolSizeAndCapacity: { "$ref": "/ogmios.json#/definitions/MempoolSizeAndCapacity" }
    Metadata: { "$ref": "/ogmios.json#/definitions/Metadata" }
    Metadatum: { "$ref": "/ogmios.json#/definitions/Metadatum" }
    MetadatumMap: { "$ref": "/ogmios.json#/definitions/MetadatumMap" }
    Network: { "$ref": "/ogmios.json#/definitions/Network" }
    NetworkMagic: { "$ref": "/ogmios.json#/definitions/NetworkMagic" }
    NonMyopicMemberRewards: { "$ref": "/ogmios.json#/definitions/NonMyopicMemberRewards" }
    Nonce: { "$ref": "/ogmios.json#/definitions/Nonce" }
    Null: { "$ref": "/ogmios.json#/definitions/Null" }
    NullableRatio: { "$ref": "/ogmios.json#/definitions/NullableRatio" }
    NullableUInt64: { "$ref": "/ogmios.json#/definitions/NullableUInt64" }
    OpCert: { "$ref": "/ogmios.json#/definitions/OpCert" }
    Origin: { "$ref": "/ogmios.json#/definitions/Origin" }
    PointOrOrigin: { "$ref": "/ogmios.json#/definitions/PointOrOrigin" }
    PolicyId: { "$ref": "/ogmios.json#/definitions/PolicyId" }
    PoolDistribution: { "$ref": "/ogmios.json#/definitions/PoolDistribution" }
    PoolId: { "$ref": "/ogmios.json#/definitions/PoolId" }
    PoolParameters: { "$ref": "/ogmios.json#/definitions/PoolParameters" }
    PoolsRanking: { "$ref": "/ogmios.json#/definitions/PoolsRanking" }
    Prices: { "$ref": "/ogmios.json#/definitions/Prices" }
    ProtocolMagicId: { "$ref": "/ogmios.json#/definitions/ProtocolMagicId" }
    ProtocolParameters[Byron]: { "$ref": "/ogmios.json#/definitions/ProtocolParameters[Byron]" }
    ProtocolParameters[Shelley]: { "$ref": "/ogmios.json#/definitions/ProtocolParameters[Shelley]" }
    ProtocolParameters[Alonzo]: { "$ref": "/ogmios.json#/definitions/ProtocolParameters[Alonzo]" }
    ProtocolParameters[Babbage]: { "$ref": "/ogmios.json#/definitions/ProtocolParameters[Babbage]" }
    ProtocolVersion: { "$ref": "/ogmios.json#/definitions/ProtocolVersion" }
    QueryUnavailableInCurrentEra: { "$ref": "/ogmios.json#/definitions/QueryUnavailableInCurrentEra" }
    Ratio: { "$ref": "/ogmios.json#/definitions/Ratio" }
    Redeemer: { "$ref": "/ogmios.json#/definitions/Redeemer" }
    RedeemerData: { "$ref": "/ogmios.json#/definitions/RedeemerData" }
    RedeemerPointer: { "$ref": "/ogmios.json#/definitions/RedeemerPointer" }
    RelativeTime: { "$ref": "/ogmios.json#/definitions/RelativeTime" }
    Relay: { "$ref": "/ogmios.json#/definitions/Relay" }
    RewardAccount: { "$ref": "/ogmios.json#/definitions/RewardAccount" }
    RewardInfoPool: { "$ref": "/ogmios.json#/definitions/RewardInfoPool" }
    RewardPot: { "$ref": "/ogmios.json#/definitions/RewardPot" }
    Rewards: { "$ref": "/ogmios.json#/definitions/Rewards" }
    RewardsProvenance': { "$ref": "/ogmios.json#/definitions/RewardsProvenance'" }
    RewardsProvenance: { "$ref": "/ogmios.json#/definitions/RewardsProvenance" }
    SafeZone: { "$ref": "/ogmios.json#/definitions/SafeZone" }
    Script: { "$ref": "/ogmios.json#/definitions/Script" }
    ScriptFailure: { "$ref": "/ogmios.json#/definitions/ScriptFailure" }
    ScriptFailure[illFormedExecutionBudget]: { "$ref": "/ogmios.json#/definitions/ScriptFailure[illFormedExecutionBudget]" }
    ScriptFailure[missingRequiredScripts]: { "$ref": "/ogmios.json#/definitions/ScriptFailure[missingRequiredScripts]" }
    ScriptFailure[noCostModelForLanguage]: { "$ref": "/ogmios.json#/definitions/ScriptFailure[noCostModelForLanguage]" }
    ScriptFailure[nonScriptInputReferencedByRedeemer]: { "$ref": "/ogmios.json#/definitions/ScriptFailure[nonScriptInputReferencedByRedeemer]" }
    ScriptFailure[unknownInputReferencedByRedeemer]: { "$ref": "/ogmios.json#/definitions/ScriptFailure[unknownInputReferencedByRedeemer]" }
    ScriptFailure[validatorFailed]: { "$ref": "/ogmios.json#/definitions/ScriptFailure[validatorFailed]" }
    ScriptPurpose: { "$ref": "/ogmios.json#/definitions/ScriptPurpose" }
    Script[Native]: { "$ref": "/ogmios.json#/definitions/Script[Native]" }
    Script[Plutus]: { "$ref": "/ogmios.json#/definitions/Script[Plutus]" }
    Signature: { "$ref": "/ogmios.json#/definitions/Signature" }
    Slot: { "$ref": "/ogmios.json#/definitions/Slot" }
    SlotLength: { "$ref": "/ogmios.json#/definitions/SlotLength" }
    SoftForkRule: { "$ref": "/ogmios.json#/definitions/SoftForkRule" }
    SoftwareVersion: { "$ref": "/ogmios.json#/definitions/SoftwareVersion" }
    SubmitTxError: { "$ref": "/ogmios.json#/definitions/SubmitTxError" }
    SubmitTxError[addressAttributesTooLarge]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[addressAttributesTooLarge]" }
    SubmitTxError[alreadyDelegating]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[alreadyDelegating]" }
    SubmitTxError[badInputs]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[badInputs]" }
    SubmitTxError[collateralHasNonAdaAssets]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[collateralHasNonAdaAssets]" }
    SubmitTxError[collateralIsScript]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[collateralIsScript]" }
    SubmitTxError[collateralTooSmall]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[collateralTooSmall]" }
    SubmitTxError[collectErrors]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[collectErrors]" }
    SubmitTxError[delegateNotRegistered]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[delegateNotRegistered]" }
    SubmitTxError[duplicateGenesisVrf]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[duplicateGenesisVrf]" }
    SubmitTxError[executionUnitsTooLarge]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[executionUnitsTooLarge]" }
    SubmitTxError[expiredUtxo]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[expiredUtxo]" }
    SubmitTxError[extraDataMismatch]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[extraDataMismatch]" }
    SubmitTxError[extraRedeemers]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[extraRedeemers]" }
    SubmitTxError[extraScriptWitnesses]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[extraScriptWitnesses]" }
    SubmitTxError[feeTooSmall]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[feeTooSmall]" }
    SubmitTxError[insufficientFundsForMir]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[insufficientFundsForMir]" }
    SubmitTxError[insufficientGenesisSignatures]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[insufficientGenesisSignatures]" }
    SubmitTxError[invalidMetadata]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[invalidMetadata]" }
    SubmitTxError[invalidWitnesses]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[invalidWitnesses]" }
    SubmitTxError[malformedReferenceScripts]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[malformedReferenceScripts]" }
    SubmitTxError[malformedScriptWitnesses]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[malformedScriptWitnesses]" }
    SubmitTxError[mirNegativeTransferNotCurrentlyAllowed]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[mirNegativeTransferNotCurrentlyAllowed]" }
    SubmitTxError[mirNegativeTransfer]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[mirNegativeTransfer]" }
    SubmitTxError[mirProducesNegativeUpdate]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[mirProducesNegativeUpdate]" }
    SubmitTxError[mirTransferNotCurrentlyAllowed]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[mirTransferNotCurrentlyAllowed]" }
    SubmitTxError[missingAtLeastOneInputUtxo]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[missingAtLeastOneInputUtxo]" }
    SubmitTxError[missingCollateralInputs]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[missingCollateralInputs]" }
    SubmitTxError[missingDatumHashesForInputs]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[missingDatumHashesForInputs]" }
    SubmitTxError[missingRequiredDatums]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[missingRequiredDatums]" }
    SubmitTxError[missingRequiredRedeemers]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[missingRequiredRedeemers]" }
    SubmitTxError[missingRequiredSignatures]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[missingRequiredSignatures]" }
    SubmitTxError[missingScriptWitnesses]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[missingScriptWitnesses]" }
    SubmitTxError[missingTxMetadataHash]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[missingTxMetadataHash]" }
    SubmitTxError[missingTxMetadata]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[missingTxMetadata]" }
    SubmitTxError[missingVkWitnesses]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[missingVkWitnesses]" }
    SubmitTxError[networkMismatch]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[networkMismatch]" }
    SubmitTxError[nonGenesisVoters]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[nonGenesisVoters]" }
    SubmitTxError[outputTooSmall]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[outputTooSmall]" }
    SubmitTxError[outsideForecast]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[outsideForecast]" }
    SubmitTxError[outsideOfValidityInterval]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[outsideOfValidityInterval]" }
    SubmitTxError[poolCostTooSmall]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[poolCostTooSmall]" }
    SubmitTxError[poolMetadataHashTooBig]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[poolMetadataHashTooBig]" }
    SubmitTxError[protocolVersionCannotFollow]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[protocolVersionCannotFollow]" }
    SubmitTxError[rewardAccountNotEmpty]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[rewardAccountNotEmpty]" }
    SubmitTxError[rewardAccountNotExisting]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[rewardAccountNotExisting]" }
    SubmitTxError[scriptWitnessNotValidating]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[scriptWitnessNotValidating]" }
    SubmitTxError[stakeKeyAlreadyRegistered]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[stakeKeyAlreadyRegistered]" }
    SubmitTxError[stakeKeyNotRegistered]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[stakeKeyNotRegistered]" }
    SubmitTxError[stakePoolNotRegistered]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[stakePoolNotRegistered]" }
    SubmitTxError[tooLateForMir]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[tooLateForMir]" }
    SubmitTxError[tooManyAssetsInOutput]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[tooManyAssetsInOutput]" }
    SubmitTxError[tooManyCollateralInputs]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[tooManyCollateralInputs]" }
    SubmitTxError[totalCollateralMismatch]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[totalCollateralMismatch]" }
    SubmitTxError[triesToForgeAda]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[triesToForgeAda]" }
    SubmitTxError[txMetadataHashMismatch]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[txMetadataHashMismatch]" }
    SubmitTxError[txTooLarge]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[txTooLarge]" }
    SubmitTxError[unknownGenesisKey]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[unknownGenesisKey]" }
    SubmitTxError[unknownOrIncompleteWithdrawals]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[unknownOrIncompleteWithdrawals]" }
    SubmitTxError[unspendableDatums]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[unspendableDatums]" }
    SubmitTxError[unspendableScriptInputs]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[unspendableScriptInputs]" }
    SubmitTxError[updateWrongEpoch]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[updateWrongEpoch]" }
    SubmitTxError[validationTagMismatch]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[validationTagMismatch]" }
    SubmitTxError[valueNotConserved]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[valueNotConserved]" }
    SubmitTxError[wrongCertificateType]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[wrongCertificateType]" }
    SubmitTxError[wrongPoolCertificate]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[wrongPoolCertificate]" }
    SubmitTxError[wrongRetirementEpoch]: { "$ref": "/ogmios.json#/definitions/SubmitTxError[wrongRetirementEpoch]" }
    TipOrOrigin: { "$ref": "/ogmios.json#/definitions/TipOrOrigin" }
    TxFeePolicy: { "$ref": "/ogmios.json#/definitions/TxFeePolicy" }
    TxId: { "$ref": "/ogmios.json#/definitions/TxId" }
    TxIn: { "$ref": "/ogmios.json#/definitions/TxIn" }
    TxOut: { "$ref": "/ogmios.json#/definitions/TxOut" }
    TxWitness: { "$ref": "/ogmios.json#/definitions/TxWitness" }
    Tx[Byron]: { "$ref": "/ogmios.json#/definitions/Tx[Byron]" }
    Tx[Shelley]: { "$ref": "/ogmios.json#/definitions/Tx[Shelley]" }
    Tx[Allegra]: { "$ref": "/ogmios.json#/definitions/Tx[Allegra]" }
    Tx[Mary]: { "$ref": "/ogmios.json#/definitions/Tx[Mary]" }
    Tx[Alonzo]: { "$ref": "/ogmios.json#/definitions/Tx[Alonzo]" }
    Tx[Babbage]: { "$ref": "/ogmios.json#/definitions/Tx[Babbage]" }
    UInt32: { "$ref": "/ogmios.json#/definitions/UInt32" }
    UInt64: { "$ref": "/ogmios.json#/definitions/UInt64" }
    UInt8: { "$ref": "/ogmios.json#/definitions/UInt8" }
    Update[Shelley]: { "$ref": "/ogmios.json#/definitions/Update[Shelley]" }
    Update[Alonzo]: { "$ref": "/ogmios.json#/definitions/Update[Alonzo]" }
    Update[Babbage]: { "$ref": "/ogmios.json#/definitions/Update[Babbage]" }
    Utxo: { "$ref": "/ogmios.json#/definitions/Utxo" }
    ValidityInterval: { "$ref": "/ogmios.json#/definitions/ValidityInterval" }
    Value: { "$ref": "/ogmios.json#/definitions/Value" }
    VerificationKey: { "$ref": "/ogmios.json#/definitions/VerificationKey" }
    Vote: { "$ref": "/ogmios.json#/definitions/Vote" }
    VotingPeriod: { "$ref": "/ogmios.json#/definitions/VotingPeriod" }
    VrfOutput: { "$ref": "/ogmios.json#/definitions/VrfOutput" }
    VrfProof: { "$ref": "/ogmios.json#/definitions/VrfProof" }
    Withdrawals: { "$ref": "/ogmios.json#/definitions/Withdrawals" }
