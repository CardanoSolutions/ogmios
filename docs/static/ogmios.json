{ "type": "object"
, "title": "ogmios"
, "$id": "ogmios.json"
, "$schema": "https://json-schema.org/draft-07/schema"
, "additionalProperties": false
, "required":
  [ "FindIntersection", "FindIntersectionResponse"
  , "NextBlock", "NextBlockResponse"

  , "SubmitTransaction", "SubmitTransactionResponse"
  , "EvaluateTransaction", "EvaluateTransactionResponse"

  , "AcquireLedgerState", "AcquireLedgerStateResponse"
  , "QueryLedgerStateEpoch", "QueryLedgerStateEpochResponse"
  , "QueryLedgerStateEraStart", "QueryLedgerStateEraStartResponse"
  , "QueryLedgerStateEraSummaries", "QueryLedgerStateEraSummariesResponse"
  , "QueryLedgerStateLiveStakeDistribution", "QueryLedgerStateLiveStakeDistributionResponse"
  , "QueryLedgerStateProjectedRewards", "QueryLedgerStateProjectedRewardsResponse"
  , "QueryLedgerStateProposedProtocolParameters", "QueryLedgerStateProposedProtocolParametersResponse"
  , "QueryLedgerStateProtocolParameters", "QueryLedgerStateProtocolParametersResponse"
  , "QueryLedgerStateRewardAccountSummaries", "QueryLedgerStateRewardAccountSummariesResponse"
  , "QueryLedgerStateRewardsProvenance", "QueryLedgerStateRewardsProvenanceResponse"
  , "QueryLedgerStateStakePoolParameters", "QueryLedgerStateStakePoolParametersResponse"
  , "QueryLedgerStateStakePools", "QueryLedgerStateStakePoolsResponse"
  , "QueryLedgerStateTip", "QueryLedgerStateTipResponse"
  , "QueryLedgerStateUtxo", "QueryLedgerStateUtxoResponse"
  , "QueryNetworkBlockHeight", "QueryNetworkBlockHeightResponse"
  , "QueryNetworkGenesisConfiguration", "QueryNetworkGenesisConfigurationResponse"
  , "QueryNetworkStartTime", "QueryNetworkStartTimeResponse"
  , "QueryNetworkTip", "QueryNetworkTipResponse"
  , "ReleaseLedgerState","ReleaseLedgerStateResponse"

  , "AcquireMempool", "AcquireMempoolResponse"
  , "NextTransaction", "NextTransactionResponse"
  , "HasTransaction", "HasTransactionResponse"
  , "SizeOfMempool", "SizeAndCapacityResponse"
  , "ReleaseMempool", "ReleaseMempoolResponse"

  , "RpcError"
  ]
, "properties":

  { "FindIntersection":
    { "title": "FindIntersection"
    , "description": "Ask cardano-node to find an intersection between its local chain and the given points."
    , "type": "object"
    , "required": [ "jsonrpc", "method", "params" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "findIntersection" ]
        }
      , "params":
        { "type": "object"
        , "additionalProperties": false
        , "properties":
          { "points":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/PointOrOrigin" }
            }
          }
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "FindIntersectionResponse":
    { "oneOf":
      [ { "title": "IntersectionFound"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "additionalProperties": false
            , "required": [ "intersection", "tip" ]
            , "properties":
              { "intersection": { "$ref": "ogmios.json#/definitions/PointOrOrigin" }
              , "tip": { "$ref": "ogmios.json#/definitions/TipOrOrigin" }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "title": "IntersectionNotFound"
        , "type": "object"
        , "required": [ "jsonrpc", "error" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "error":
            { "type": "object"
            , "required": [ "code", "message", "data" ]
            , "additionalProperties": false
            , "properties":
              { "code": { "type": "integer", "enum": [ 1000 ] }
              , "message": { "type": "string" }
              , "data":
                { "type": "object"
                , "additionalProperties": false
                , "required": [ "tip" ]
                , "properties":
                  { "tip": { "$ref": "ogmios.json#/definitions/TipOrOrigin" }
                  }
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      ]
    }

  , "NextBlock":
    { "title": "NextBlock"
    , "description": "Request next block from the current cardano-node's cursor."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "nextBlock" ]
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "NextBlockResponse":
    { "title": "NextBlockResponse"
    , "type": "object"
    , "description": "Response to a 'nextBlock' request."
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "oneOf":
          [ { "title": "RollForward"
            , "required": [ "direction", "tip", "block" ]
            , "type": "object"
            , "additionalProperties": false
            , "properties":
              { "direction":
                { "type": "string"
                , "enum": [ "forward" ]
                }
              , "tip": { "$ref": "ogmios.json#/definitions/Tip" }
              , "block": { "$ref": "ogmios.json#/definitions/Block" }
              }
            }
          , { "title": "RollBackward"
            , "required": [ "direction", "tip", "point" ]
            , "type": "object"
            , "additionalProperties": false
            , "properties":
              { "direction":
                { "type": "string"
                , "enum": [ "backward" ]
                }
              , "tip": { "$ref": "ogmios.json#/definitions/TipOrOrigin" }
              , "point": { "$ref": "ogmios.json#/definitions/PointOrOrigin" }
              }
            }
          ]
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "SubmitTransaction":
    { "title": "SubmitTransaction"
    , "description": "Submit a signed and serialized transaction to the network."
    , "type": "object"
    , "required": [ "jsonrpc", "method", "params" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "submitTransaction" ]
        }
      , "params":
        { "type": "object"
        , "additionalProperties": false
        , "required": ["transaction"]
        , "properties":
          { "transaction":
            { "type": "string"
            , "description": "CBOR-serialized signed transaction (base16)"
            , "contentEncoding": "base16"
            , "pattern": "^[0-9a-f]+$"
            }
          }
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "SubmitTransactionResponse":
    { "oneOf":
      [ { "title": "SubmitTransactionSuccess"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "additionalProperties": false
            , "required": [ "transaction" ]
            , "properties":
              { "transaction":
                { "type": "object"
                , "additionalProperties": false
                , "required": [ "id" ]
                , "properties":
                  { "id": { "$ref": "ogmios.json#/definitions/TxId" }
                  }
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "title": "SubmitTransactionFailure"
        , "type": "object"
        , "required": [ "jsonrpc", "error" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "error":
            { "type": "object"
            , "required": [ "code", "message", "data" ]
            , "additionalProperties": false
            , "properties":
              { "code": { "type": "integer", "enum": [ 3005 ] }
              , "message": { "type": "string" }
              , "data": { "$ref": "ogmios.json#/definitions/SubmitTransactionErrors" }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      ]
    }

  , "EvaluateTransaction":
    { "title": "EvaluateTransaction"
    , "description": "Evaluate execution units for which redeemers's budget hasn't yet been set."
    , "type": "object"
    , "required": [ "jsonrpc", "method", "params" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "evaluateTransaction" ]
        }
      , "params":
        { "type": "object"
        , "additionalProperties": false
        , "required": ["transaction"]
        , "properties":
          { "transaction":
            { "type": "string"
            , "description": "CBOR-serialized signed transaction (base16)"
            , "contentEncoding": "base16"
            , "pattern": "^[0-9a-f]+$"
            }
          , "additionalUtxoSet":
            { "$ref": "ogmios.json#/definitions/Utxo"
            }
          }
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "EvaluateTransactionResponse":
    { "oneOf":
      [ { "title": "EvaluateTransactionSuccess"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "additionalProperties": false
            , "required": [ "budgets" ]
            , "properties":
              { "budgets":
                { "type": "object"
                , "propertyNames": { "$ref": "ogmios.json#/definitions/RedeemerPointer" }
                , "additionalProperties": { "$ref": "ogmios.json#/definitions/ExUnits" }
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        , "examples":
          [ { "jsonrpc": "2.0"
            , "result":
              { "budgets":
                { "spend:1":
                  { "memory": 5236222
                  , "cpu": 1212353
                  }
                , "mint:0":
                  { "memory": 5000
                  , "cpu": 42
                  }
                }
              }
            }
          ]
        }
      , { "title": "EvaluateTransactionFailure"
        , "description": "Happens when attempting to evaluate execution units on a node that isn't enough synchronized."
        , "type": "object"
        , "required": [ "jsonrpc", "error" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "error":
            { "oneOf":
              [ { "title": "EvaluateTransactionFailure[IncompatibleEra]"
                , "description": "Returned when trying to evaluate execution units of a pre-Alonzo transaction. Note that this isn't possible with Ogmios because transactions are always de-serialized as Alonzo transactions."
                , "type": "object"
                , "required": [ "code", "message", "data" ]
                , "additionalProperties": false
                , "properties":
                  { "code": { "type": "integer", "enum": [ 3000 ] }
                  , "message": { "type": "string" }
                  , "data": { "$ref": "ogmios.json#/definitions/EvaluateTransactionFailure[IncompatibleEra]" }
                  }
                }

              , { "title": "EvaluateTransactionFailure[OverlappingAdditionalUtxo]"
                , "description": "Happens when providing an additional UTXO set which overlaps with the UTXO on-chain."
                , "type": "object"
                , "required": [ "code", "message", "data" ]
                , "additionalProperties": false
                , "properties":
                  { "code": { "type": "integer", "enum": [ 3001 ] }
                  , "message": { "type": "string" }
                  , "data": { "$ref": "ogmios.json#/definitions/EvaluateTransactionFailure[OverlappingAdditionalUtxo]" }
                  }
                }
              , { "title": "EvaluateTransactionFailure[NodeTipTooOld]"
                , "description": "Happens when attempting to evaluate execution units on a node that isn't enough synchronized."
                , "type": "object"
                , "required": [ "code", "message", "data" ]
                , "additionalProperties": false
                , "properties":
                  { "code": { "type": "integer", "enum": [ 3002 ] }
                  , "message": { "type": "string" }
                  , "data": { "$ref": "ogmios.json#/definitions/EvaluateTransactionFailure[NodeTipTooOld]" }
                  }
                }
              , { "title": "EvaluateTransactionFailure[CannotCreateEvaluationContext]"
                , "description": "The transaction is malformed or missing information; making evaluation impossible."
                , "type": "object"
                , "required": [ "code", "message", "data" ]
                , "additionalProperties": false
                , "properties":
                  { "code": { "type": "integer", "enum": [ 3003 ] }
                  , "message": { "type": "string" }
                  , "data": { "$ref": "ogmios.json#/definitions/EvaluateTransactionFailure[CannotCreateEvaluationContext]" }
                  }
                }
              , { "title": "EvaluateTransactionFailure[ScriptExecutionFailure]"
                , "description": "One or more script execution terminated with an error."
                , "type": "object"
                , "required": [ "code", "message", "data" ]
                , "additionalProperties": false
                , "properties":
                  { "code": { "type": "integer", "enum": [ 3004 ] }
                  , "message": { "type": "string" }
                  , "data": { "$ref": "ogmios.json#/definitions/EvaluateTransactionFailure[ScriptExecutionFailure]" }
                  }
                }
              ]
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      ]
    }

  , "AcquireLedgerState":
    { "title": "AcquireLedgerState"
    , "type": "object"
    , "description": "Acquire a point on chain from which to run ledger-state queries."
    , "required": [ "jsonrpc", "method", "params" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "acquireLedgerState" ]
        }
      , "params":
        { "type": "object"
        , "additionalProperties": false
        , "required": ["point"]
        , "properties":
          { "point": { "$ref": "ogmios.json#/definitions/PointOrOrigin" }
          }
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "AcquireLedgerStateResponse":
    { "oneOf":
      [ { "title": "AcquireLedgerStateSuccess"
        , "type": "object"
        , "description": "Response to an 'acquireLedgerState' request."
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "title": "AcquireLedgerStateSuccess"
            , "type": "object"
            , "additionalProperties": false
            , "required": [ "acquired", "point" ]
            , "properties":
              { "acquired":
                { "type": "string"
                , "enum": [ "ledgerState" ]
                }
              , "point":
                { "$ref": "ogmios.json#/definitions/PointOrOrigin" }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "title": "AcquireLedgerStateFailure"
        , "type": "object"
        , "description": "Unable to acquire the ledger state at the request point."
        , "required": [ "jsonrpc", "error" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "error":
            { "title": "AcquireLedgerStateFailure"
            , "type": "object"
            , "additionalProperties": false
            , "required": [ "code", "message", "data" ]
            , "properties":
              { "code":
                { "type": "integer"
                , "enum": [ 2000 ]
                }
              , "message":
                { "type": "string"
                }
              , "data":
                { "type": "string"
                , "description": "A reason for the failure."
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      ]
    }

  , "ReleaseLedgerState":
    { "title": "ReleaseLedgerState"
    , "type": "object"
    , "description": "Release a previously acquired ledger state."
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "releaseLedgerState" ]
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "ReleaseLedgerStateResponse":
    { "title": "ReleaseLedgerStateResponse"
    , "type": "object"
    , "description": "Response to a 'releaseLedgerState' request."
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "type": "object"
        , "required": [ "released" ]
        , "additionalProperties": false
        , "properties":
          { "released":
            { "type": "string"
            , "enum": ["ledgerState"]
            }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "QueryLedgerStateEraMismatch":
    { "title": "QueryLedgerStateEraMismatch"
    , "type": "object"
    , "description": "An era mismatch between a client request and the era the ledger is in. This may occur when running queries on a syncing node and/or when the node is crossing an era."
    , "required": [ "jsonrpc", "error" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "error":
        { "type": "object"
        , "required": [ "code", "message", "data" ]
        , "additionalProperties": false
        , "properties":
          { "code": { "type": "integer", "enum": [ 2001 ] }
          , "message": { "type": "string" }
          , "data": { "$ref": "ogmios.json#/definitions/EraMismatch" }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "QueryLedgerStateUnavailableInCurrentEra":
    { "title": "QueryLedgerStateUnavailableInCurrentEra"
    , "type": "object"
    , "description": "Some query is not available for the requested ledger era."
    , "required": [ "jsonrpc", "error" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "error":
        { "type": "object"
        , "required": [ "code", "message" ]
        , "additionalProperties": false
        , "properties":
          { "code": { "type": "integer", "enum": [ 2002 ] }
          , "message": { "type": "string" }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "QueryLedgerStateAcquiredExpire" :
    { "title": "QueryLedgerStateAcquiredExpired"
    , "type": "object"
    , "description": "Previously acquired ledger state is no longer available."
    , "required": [ "jsonrpc", "error" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "error":
        { "type": "object"
        , "required": [ "code", "message", "data" ]
        , "additionalProperties": false
        , "properties":
          { "code": { "type": "integer", "enum": [ 2003 ] }
          , "message": { "type": "string" }
          , "data": { "type": "string", "description": "A reason for the failure." }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "QueryLedgerStateEpoch":
    { "title": "QueryLedgerStateEpoch"
    , "description": "Query the current epoch number the ledger is at."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/epoch" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateEpochResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateEpochResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "epoch" ]
            , "additionalProperties": false
            , "properties":
              { "epoch":
                { "$ref": "ogmios.json#/definitions/Epoch"
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateEraStart":
    { "title": "QueryLedgerStateEraStart"
    , "description": "Query the start of the current ledger era."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/eraStart" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateEraStartResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateEraStartResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "eraStart" ]
            , "additionalProperties": false
            , "properties":
              { "eraStart":
                { "$ref": "ogmios.json#/definitions/Bound"
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateEraSummaries":
    { "title": "QueryLedgerStateEraSummaries"
    , "description": "Query a summary of the slotting parameters and boundaries for each known era. Useful for doing slot-arithmetic and time conversions."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/eraSummaries" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateEraSummariesResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateEraSummariesResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "eraSummaries" ]
            , "additionalProperties": false
            , "properties":
              { "eraSummaries":
                { "type": "array"
                , "items": { "$ref": "ogmios.json#/definitions/EraSummary" }
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateLiveStakeDistribution":
    { "title": "QueryLedgerStateLiveStakeDistribution"
    , "description": "Query the current distribution of the stake across all known stake pools, relative to the TOTAL stake in the network."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/liveStakeDistribution" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateLiveStakeDistributionResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateLiveStakeDistributionResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "liveStakeDistribution" ]
            , "additionalProperties": false
            , "properties":
              { "liveStakeDistribution":
                { "$ref": "ogmios.json#/definitions/LiveStakeDistribution"
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateProjectedRewards":
    { "title": "QueryLedgerStateProjectedRewards"
    , "description": "Query the projected rewards of an account in a context where the top stake pools are fully saturated. This projection gives, in principle, a ranking of stake pools that maximizes delegator rewards."
    , "type": "object"
    , "required": [ "jsonrpc", "method", "params" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/projectedRewards" ]
        }
      , "params":
        { "type": "object"
        , "additionalProperties": false
        , "properties":
          { "stake":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Lovelace" }
            }
          , "scripts":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/StakeCredential" }
            }
          , "keys":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/StakeCredential" }
            }
          }
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateProjectedRewardsResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateProjectedRewardsResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "projectedRewards" ]
            , "additionalProperties": false
            , "properties":
              { "projectedRewards":
                { "$ref": "ogmios.json#/definitions/ProjectedRewards"
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateProposedProtocolParameters":
    { "title": "QueryLedgerStateProposedProtocolParameters"
    , "description": "Query the last update proposal w.r.t. protocol parameters, if any."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/proposedProtocolParameters" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateProposedProtocolParametersResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateProposedProtocolParametersResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "proposedProtocolParameters" ]
            , "additionalProperties": false
            , "properties":
              { "proposedProtocolParameters":
                { "anyOf":
                  [ { "type": "object"
                    , "title": "ProposedProtocolParameters[Shelley]"
                    , "propertyNames": { "contentEncoding": "base16" , "pattern": "^[0-9a-f]+$" }
                    , "additionalProperties": { "$ref": "ogmios.json#/definitions/ProtocolParameters[Shelley]" }
                    }
                  , { "type": "object"
                    , "title": "ProposedProtocolParameters[Alonzo]"
                    , "propertyNames": { "contentEncoding": "base16" , "pattern": "^[0-9a-f]+$" }
                    , "additionalProperties": { "$ref": "ogmios.json#/definitions/ProtocolParameters[Alonzo]" }
                    }
                  , { "type": "object"
                    , "title": "ProposedProtocolParameters[Babbage]"
                    , "propertyNames": { "contentEncoding": "base16" , "pattern": "^[0-9a-f]+$" }
                    , "additionalProperties": { "$ref": "ogmios.json#/definitions/ProtocolParameters[Babbage]" }
                    }
                  ]
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateProtocolParameters":
    { "title": "QueryLedgerStateProtocolParameters"
    , "description": "Query the current protocol parameters."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/protocolParameters" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateProtocolParametersResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateProtocolParametersResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "protocolParameters" ]
            , "additionalProperties": false
            , "properties":
              { "protocolParameters":
                { "anyOf":
                  [ { "$ref": "ogmios.json#/definitions/ProtocolParameters[Shelley]" }
                  , { "$ref": "ogmios.json#/definitions/ProtocolParameters[Alonzo]" }
                  , { "$ref": "ogmios.json#/definitions/ProtocolParameters[Babbage]" }
                  ]
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateRewardAccountSummaries":
    { "title": "QueryLedgerStateRewardAccountSummaries"
    , "description": "Query current delegation settings and rewards of some given reward accounts."
    , "type": "object"
    , "required": [ "jsonrpc", "method", "params" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/rewardAccountSummaries" ]
        }
      , "params":
        { "type": "object"
        , "additionalProperties": false
        , "properties":
          { "scripts":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/StakeCredential" }
            }
          , "keys":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/StakeCredential" }
            }
          }
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateRewardAccountSummariesResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateRewardAccountSummariesResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "rewardAccountSummaries" ]
            , "additionalProperties": false
            , "properties":
              { "rewardAccountSummaries":
                { "title": "RewardAccountSummaries"
                , "type": "object"
                , "additionalProperties": { "$ref": "ogmios.json#/definitions/RewardAccountSummary" }
                , "propertyNames": { "pattern": "^[0-9]+|[0-9a-f]+$" }
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateRewardsProvenance":
    { "title": "QueryLedgerStateRewardsProvenance"
    , "description": "Query details about rewards calculation for the ongoing epoch."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/rewardsProvenance" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateRewardsProvenanceResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateRewardsProvenanceResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "rewardsProvenance" ]
            , "additionalProperties": false
            , "properties":
              { "rewardsProvenance":
                { "$ref": "ogmios.json#/definitions/RewardsProvenance"
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateStakePools":
    { "title": "QueryLedgerStateStakePools"
    , "description": "Query the list of all stake pool identifiers currently registered and active."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/stakePools" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateStakePoolsResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateStakePoolsResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "stakePools" ]
            , "additionalProperties": false
            , "properties":
              { "stakePools":
                { "type": "array"
                , "items":
                  { "type": "object"
                  , "required": [ "id" ]
                  , "additionalProperties": false
                  , "properties":
                    { "id": { "$ref": "ogmios.json#/definitions/StakePoolId" }
                    }
                  }
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateStakePoolParameters":
    { "title": "QueryLedgerStateStakePoolParameters"
    , "description": "Query registered parameters for given stake pools."
    , "type": "object"
    , "required": [ "jsonrpc", "method", "params" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/stakePoolParameters" ]
        }
      , "params":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "stakePools" ]
        , "properties":
          { "stakePools":
            { "type": "array"
            , "items":
              { "oneOf":
                [ { "$ref": "ogmios.json#/definitions/StakePoolId" }
                , { "type": "string", "contentEncoding": "base16", "pattern": "^[0-9a-f]{56}$" }
                ]
              }
            }
          }
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateStakePoolParametersResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateStakePoolParametersResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "stakePoolParameters" ]
            , "additionalProperties": false
            , "properties":
              { "stakePoolParameters":
                { "type": "object"
                , "propertyNames": { "$ref": "ogmios.json#/definitions/StakePoolId" }
                , "additionalProperties": { "$ref": "ogmios.json#/definitions/StakePoolParameters" }
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateTip":
    { "title": "QueryLedgerStateTip"
    , "description": "Query the current tip the ledger is at. Said differently, the slot number and header hash of the last block that has been processed by the ledger."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/tip" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateTipResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateTipResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "tip" ]
            , "additionalProperties": false
            , "properties":
              { "tip":
                { "$ref": "ogmios.json#/definitions/PointOrOrigin"
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryLedgerStateUtxo":
    { "title": "QueryLedgerStateUtxo"
    , "description": "Query the current Utxo set, restricted to some output references or addresses."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryLedgerState/utxo" ]
        }
      , "params":
        { "oneOf":
          [ { "title": "UtxoByOutputReferences"
            , "type": "object"
            , "required": ["outputReferences"]
            , "additionalProperties": false
            , "properties":
              { "outputReferences":
                { "type": "array"
                , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
                }
              }
            }
          , { "title": "UtxoByAddresses"
            , "type": "object"
            , "required": [ "addresses" ]
            , "additionalProperties": false
            , "properties":
              { "addresses":
                { "type": "array"
                , "items": { "$ref": "ogmios.json#/definitions/Address" }
                }
              }
            }
          , { "title": "WholeUtxo"
            , "type": "object"
            , "additionalProperties": false
            }
          ]
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryLedgerStateUtxoResponse":
    { "oneOf":
      [ { "title": "QueryLedgerStateUtxoResponse"
        , "type": "object"
        , "required": [ "jsonrpc", "result" ]
        , "additionalProperties": false
        , "properties":
          { "jsonrpc":
            { "type": "string"
            , "enum": [ "2.0" ]
            }
          , "result":
            { "type": "object"
            , "required": [ "utxo" ]
            , "additionalProperties": false
            , "properties":
              { "utxo":
                { "$ref": "ogmios.json#/definitions/Utxo"
                }
              }
            }
          , "id":
            { "description": "Any value that was set by a client request in the 'id' field."
            }
          }
        }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateEraMismatch" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateUnavailableInCurrentEra" }
      , { "$ref": "ogmios.json#/properties/QueryLedgerStateAcquiredExpire" }
      ]
    }

  , "QueryNetworkBlockHeight":
    { "title": "QueryNetworkBlockHeight"
    , "description": "Query the network’s highest block number."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryNetwork/blockHeight" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryNetworkBlockHeightResponse":
    { "title": "QueryNetworkBlockHeightResponse"
    , "type": "object"
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "type": "object"
        , "required": [ "blockHeight" ]
        , "additionalProperties": false
        , "properties":
          { "blockHeight":
            { "$ref": "ogmios.json#/definitions/BlockNoOrOrigin"
            }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "QueryNetworkGenesisConfiguration":
    { "title": "QueryNetworkGenesisConfiguration"
    , "description": "Query the genesis configuration of a given era."
    , "type": "object"
    , "required": [ "jsonrpc", "method", "params" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryNetwork/genesisConfiguration" ]
        }
      , "params":
        { "type": "object"
        , "required": [ "era" ]
        , "additionalProperties": false
        , "properties":
          { "era":
            { "type": "string"
            , "enum": ["byron", "shelley", "alonzo"]
            }
          }
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryNetworkGenesisConfigurationResponse":
    { "title": "QueryNetworkGenesisConfigurationResponse"
    , "type": "object"
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "type": "object"
        , "required": [ "genesisConfiguration" ]
        , "additionalProperties": false
        , "properties":
          { "genesisConfiguration":
            { "oneOf":
              [ { "type": "object"
                , "required": ["byron"]
                , "additionalProperties": false
                , "properties":
                  { "byron": { "$ref": "ogmios.json#/definitions/Genesis[Byron]" }
                  }
                }
              , { "type": "object"
                , "required": ["shelley"]
                , "additionalProperties": false
                , "properties":
                  { "shelley": { "$ref": "ogmios.json#/definitions/Genesis[Shelley]" }
                  }
                }
              , { "type": "object"
                , "required": ["alonzo"]
                , "additionalProperties": false
                , "properties":
                  { "alonzo": { "$ref": "ogmios.json#/definitions/Genesis[Alonzo]" }
                  }
                }
              ]
            }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "QueryNetworkStartTime":
    { "title": "QueryNetworkStartTime"
    , "description": "Query the network start time."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryNetwork/startTime" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryNetworkStartTimeResponse":
    { "title": "QueryNetworkStartTimeResponse"
    , "type": "object"
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "type": "object"
        , "required": [ "startTime" ]
        , "additionalProperties": false
        , "properties":
          { "startTime":
            { "$ref": "ogmios.json#/definitions/UtcTime"
            }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "QueryNetworkTip":
    { "title": "QueryNetworkTip"
    , "description": "Get the current network tip. Said differently, this is the most recent slot and block header hash that the node it aware of."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "queryNetwork/tip" ]
        }
      , "params": {}
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "QueryNetworkTipResponse":
    { "title": "QueryNetworkTipResponse"
    , "type": "object"
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "type": "object"
        , "required": [ "tip" ]
        , "additionalProperties": false
        , "properties":
          { "tip":
            { "$ref": "ogmios.json#/definitions/PointOrOrigin"
            }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "AcquireMempool":
    { "title": "AcquireMempool"
    , "description": "Acquire a mempool snapshot. This is blocking until a new (i.e different) snapshot is available."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "acquireMempool" ]
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "AcquireMempoolResponse":
    { "title": "AcquireMempoolResponse"
    , "description": "Response to a 'acquireMempool' request."
    , "type": "object"
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "acquired", "slot" ]
        , "properties":
          { "acquired": { "type": "string", "enum": [ "mempool" ] }
          , "slot": { "$ref": "ogmios.json#/definitions/Slot" }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "NextTransaction":
    { "title": "NextTransaction"
    , "description": "Request the next transaction from an acquired mempools napshot."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "nextTransaction" ]
        }
      , "params":
        { "type": "object"
        , "additionalProperties": false
        , "properties":
          { "fields":
            { "type": "string"
            , "enum": [ "all" ]
            }
          }
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "NextTransactionResponse":
    { "title": "NextTransactionResponse"
    , "description": "Response to a 'nextTransaction' request."
    , "type": "object"
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "type": "object"
        , "description": "A transaction (or id) or an empty object if there's no more transactions."
        , "additionalProperties": false
        , "required": ["transaction"]
        , "properties":
          { "transaction":
            { "anyOf":
              [ { "type": "object"
                , "additionalProperties": false
                , "required": [ "id" ]
                , "properties":
                  { "id": { "$ref": "ogmios.json#/definitions/TxId" }
                  }
                }
              , { "$ref": "ogmios.json#/definitions/Tx[Alonzo]" }
              , { "$ref": "ogmios.json#/definitions/Tx[Babbage]" }
              , { "type": "null" }
              ]
            }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "HasTransaction":
    { "title": "HasTransaction"
    , "description": "Ask whether a given transaction is present in the acquired mempool snapshot."
    , "type": "object"
    , "required": [ "jsonrpc", "method", "params" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "hasTransaction" ]
        }
      , "params":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "id" ]
        , "properties":
          { "id": { "$ref": "ogmios.json#/definitions/TxId" }
          }
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "HasTransactionResponse":
    { "title": "HasTransactionResponse"
    , "description": "Response to a 'HasTransaction' request."
    , "type": "object"
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "hasTransaction" ]
        , "properties":
          { "hasTransaction":
            { "type": "boolean"
            }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "SizeOfMempool":
    { "title": "SizeOfMempool"
    , "description": "Get size and capacities of the mempool (acquired snapshot)."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "sizeOfMempool" ]
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "SizeOfMempoolResponse":
    { "title": "SizeOfMempoolResponse"
    , "description": "Response to a 'sizeOfMempool' request."
    , "type": "object"
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "mempool" ]
        , "properties":
          { "mempool":
            { "$ref": "ogmios.json#/definitions/MempoolSizeAndCapacity"
            }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "ReleaseMempool":
    { "title": "ReleaseMempool"
    , "description": "Release a previously acquired mempool snapshot."
    , "type": "object"
    , "required": [ "jsonrpc", "method" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "method":
        { "type": "string"
        , "enum": [ "releaseMempool" ]
        }
      , "id":
        { "description": "An arbitrary JSON value that will be mirrored back in the response."
        }
      }
    }

  , "ReleaseMempoolResponse":
    { "title": "ReleaseMempoolResponse"
    , "description": "Response to a 'releaseMempool' request."
    , "type": "object"
    , "required": [ "jsonrpc", "result" ]
    , "additionalProperties": false
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "result":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "released" ]
        , "properties":
          { "released":
            { "type": "string"
            , "enum": ["mempool"]
            }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }

  , "RpcError":
    { "title": "RpcError"
    , "description": "A generic error in the JSON-RPC protocol. This is returned by the server when a request from clients is deemed invalid or, when the server was unable to reply to a well-formed request."
    , "type": "object"
    , "required": [ "jsonrpc", "error" ]
    , "additionalProperties": false
    , "examples":
      [ { "jsonrpc": "2.0"
        , "error":
          { "message": "Invalid request: invalid query."
          , "code": "-32601"
          }
        }
      ]
    , "properties":
      { "jsonrpc":
        { "type": "string"
        , "enum": [ "2.0" ]
        }
      , "error":
        { "type": "object"
        , "required": [ "code", "string" ]
        , "additionalProperties": false
        , "properties":
          { "code":
            { "type": "integer"
            , "description": "An error code telling about the nature of the error."
            , "minimum": -32700
            , "maximum": -32000
            }
          , "message":
            { "type": "string"
            , "description": "A descriptive error message giving hints about the error."
            }
          , "data":
            { "description": "Some optional data / context about the error. The exact type of this (optional) field depends on the error."
            }
          }
        }
      , "id":
        { "description": "Any value that was set by a client request in the 'id' field."
        }
      }
    }
  }

, "definitions":
  { "Address":
    { "type": "string"
    , "description": "A Cardano address (either legacy format or new format)."
    , "contentEncoding": "bech32|base58"
    , "pattern": "[1-9A-HJ-NP-Za-km-z]*"
    , "examples":
      [ "addr1q9d34spgg2kdy47n82e7x9pdd6vql6d2engxmpj20jmhuc2047yqd4xnh7u6u5jp4t0q3fkxzckph4tgnzvamlu7k5psuahzcp"
      , "DdzFFzCqrht8mbSTZHqpM2u4HeND2mdspsaBhdQ1BowPJBMzbDeBMeKgqdoKqo1D4sdPusEdZJVrFJRBBxX1jUEofNDYCJSZLg8MkyCE"
      ]
    }

  , "AddressAttributes":
    { "type": "string"
    , "description": "Extra attributes carried by Byron addresses (network magic and/or HD payload)."
    , "contentEncoding": "base16"
    }

  , "AssetQuantity":
    { "type": "integer"
    , "description": "A number of asset, can be negative went burning assets."
    }

  , "AuxiliaryData":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "hash", "body" ]
    , "properties":
      { "hash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::AuxiliaryDataBody" }
      , "body": { "$ref": "ogmios.json#/definitions/AuxiliaryDataBody" }
      }
    }

  , "AuxiliaryDataBody":
    { "type": "object"
    , "additionalProperties": false
    , "properties":
      { "blob": { "$ref": "ogmios.json#/definitions/Metadata" }
      , "scripts":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Script" }
        }
      }
    }

  , "Block":
    { "description": "A Cardano Block, which can take different forms depending on the era."
    , "oneOf":
      [ { "type": "object"
        , "required": [ "babbage" ]
        , "title": "babbage"
        , "additionalProperties": false
        , "properties":
          { "babbage": { "$ref": "ogmios.json#/definitions/Block[Babbage]" }
          }
        }
      , { "type": "object"
        , "required": [ "alonzo" ]
        , "title": "alonzo"
        , "additionalProperties": false
        , "properties":
          { "alonzo": { "$ref": "ogmios.json#/definitions/Block[Alonzo]" }
          }
        }
      , { "type": "object"
        , "required": [ "mary" ]
        , "title": "mary"
        , "additionalProperties": false
        , "properties":
          { "mary": { "$ref": "ogmios.json#/definitions/Block[Mary]" }
          }
        }
      , { "type": "object"
        , "required": [ "allegra" ]
        , "title": "allegra"
        , "additionalProperties": false
        , "properties":
          { "allegra": { "$ref": "ogmios.json#/definitions/Block[Allegra]" }
          }
        }
      , { "type": "object"
        , "required": [ "shelley" ]
        , "title": "shelley"
        , "additionalProperties": false
        , "properties":
          { "shelley": { "$ref": "ogmios.json#/definitions/Block[Shelley]" }
          }
        }
      , { "type": "object"
        , "required": [ "byron" ]
        , "title": "byron"
        , "additionalProperties": false
        , "properties":
          { "byron": { "$ref": "ogmios.json#/definitions/Block[Byron]" }
          }
        }
      ]
    }

  , "Block[Byron]":
    { "description": "A block in the Byron era. Most blocks are stanard blocks, but once at the beginning of each era is an additional epoch boundary block (a.k.a. EBB)"
    , "oneOf":
      [ { "title": "standard block"
        , "additionalProperties": false
        , "required": [ "hash", "header", "body" ]
        , "properties":
          { "hash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
          , "header":
            { "type": "object"
            , "additionalProperties": false
            , "required": [ "blockHeight", "genesisKey", "prevHash", "proof", "protocolMagicId", "protocolVersion", "signature", "slot", "softwareVersion" ]
            , "properties":
              { "blockHeight": { "$ref": "ogmios.json#/definitions/BlockNo" }
              , "genesisKey": { "$ref": "ogmios.json#/definitions/GenesisVerificationKey" }
              , "prevHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
              , "proof": { "$ref": "ogmios.json#/definitions/BlockProof" }
              , "protocolMagicId": { "$ref": "ogmios.json#/definitions/ProtocolMagicId" }
              , "protocolVersion": { "$ref": "ogmios.json#/definitions/ProtocolVersion" }
              , "signature": { "$ref": "ogmios.json#/definitions/BlockSignature" }
              , "slot": { "$ref": "ogmios.json#/definitions/Slot" }
              , "softwareVersion": { "$ref": "ogmios.json#/definitions/SoftwareVersion" }
              }
            }
          , "body":
            { "type": "object"
            , "additionalProperties": false
            , "required": [ "txPayload", "dlgPayload", "updatePayload" ]
            , "properties":
              { "txPayload":
                { "type": "array"
                , "items": { "$ref": "ogmios.json#/definitions/Tx[Byron]" }
                }
              , "dlgPayload":
                { "type": "array"
                , "items": { "$ref": "ogmios.json#/definitions/DlgCertificate"}
                }
              , "updatePayload":
                { "type": "object"
                , "additionalProperties": false
                , "required": [ "votes" ]
                , "properties":
                  { "proposal":
                    { "type": "object"
                    , "title": "UpdateProposal[Byron]"
                    , "additionalProperties": false
                    , "required": [ "body", "issuer", "signature" ]
                    , "properties":
                      { "body":
                        { "type": "object"
                        , "additionalProperties": false
                        , "required": [ "protocolVersion", "parametersUpdate", "softwareVersion", "metadata" ]
                        , "properties":
                          { "protocolVersion": { "$ref": "ogmios.json#/definitions/ProtocolVersion" }
                          , "softwareVersion": { "$ref": "ogmios.json#/definitions/SoftwareVersion" }
                          , "metadata":
                            { "type": "object"
                            , "additionalProperties": { "type": "string" }
                            }
                          , "parametersUpdate": { "$ref": "ogmios.json#/definitions/ProtocolParameters[Byron]" }
                          }
                        }
                      , "issuer": { "$ref": "ogmios.json#/definitions/IssuerVrfVerificationKey" }
                      , "signature": { "$ref": "ogmios.json#/definitions/IssuerSignature" }
                      }
                    }
                  , "votes":
                    { "type": "array"
                    , "items": { "$ref": "ogmios.json#/definitions/Vote" }
                    }
                  }
                }
              }
            }
          }
        }
      , { "required": [ "hash", "header" ]
        , "title": "epoch boundary block"
        , "additionalProperties": false
        , "properties":
          { "hash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
          , "header":
            { "type": "object"
            , "additionalProperties": false
            , "required": [ "blockHeight", "epoch", "prevHash" ]
            , "properties":
              { "blockHeight": { "$ref": "ogmios.json#/definitions/BlockNo" }
              , "epoch": { "$ref": "ogmios.json#/definitions/Epoch" }
              , "prevHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
              }
            }
          }
        }
      ]
    }

  , "Block[Shelley]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "header", "headerHash", "body" ]
    , "properties":
      { "body":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Tx[Shelley]" }
        }
      , "headerHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
      , "header":
        { "type": "object"
        , "additionalProperties": false
        , "required":
          [ "blockHeight","slot","prevHash","issuerVk","issuerVrf","leaderValue"
          , "blockSize", "blockHash","opCert","protocolVersion","signature"
          ]
        , "properties":
          { "blockHeight": { "$ref": "ogmios.json#/definitions/BlockNo" }
          , "slot": { "$ref": "ogmios.json#/definitions/Slot" }
          , "prevHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
          , "issuerVk": { "$ref": "ogmios.json#/definitions/VerificationKey" }
          , "issuerVrf": { "$ref": "ogmios.json#/definitions/IssuerVrfVerificationKey" }
          , "nonce": { "$ref": "ogmios.json#/definitions/CertifiedVrf" }
          , "leaderValue": { "$ref": "ogmios.json#/definitions/CertifiedVrf" }
          , "blockSize": { "$ref": "ogmios.json#/definitions/BlockSize" }
          , "blockHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].body" }
          , "opCert": { "$ref": "ogmios.json#/definitions/OpCert" }
          , "protocolVersion": { "$ref": "ogmios.json#/definitions/ProtocolVersion" }
          , "signature": { "$ref": "ogmios.json#/definitions/IssuerSignature" }
          }
        }
      }
    }

  , "Block[Allegra]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "header", "headerHash", "body" ]
    , "properties":
      { "body":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Tx[Allegra]" }
        }
      , "headerHash": { "$ref": "ogmios.json#/definitions/Block[Shelley]/properties/headerHash" }
      , "header": { "$ref": "ogmios.json#/definitions/Block[Shelley]/properties/header" }
      }
    }

  , "Block[Mary]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "header", "headerHash", "body" ]
    , "properties":
      { "body":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Tx[Mary]" }
        }
      , "headerHash": { "$ref": "ogmios.json#/definitions/Block[Shelley]/properties/headerHash" }
      , "header": { "$ref": "ogmios.json#/definitions/Block[Shelley]/properties/header" }
      }
    }

  , "Block[Alonzo]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "header", "headerHash", "body" ]
    , "properties":
      { "body":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Tx[Alonzo]" }
        }
      , "headerHash": { "$ref": "ogmios.json#/definitions/Block[Shelley]/properties/headerHash" }
      , "header": { "$ref": "ogmios.json#/definitions/Block[Shelley]/properties/header" }
      }
    }

  , "Block[Babbage]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "header", "headerHash", "body" ]
    , "properties":
      { "body":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Tx[Babbage]" }
        }
      , "headerHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
      , "header":
        { "type": "object"
        , "additionalProperties": false
        , "required":
          [ "blockHeight","slot","prevHash","issuerVk","issuerVrf","vrfInput"
          , "blockSize", "blockHash","opCert","protocolVersion","signature"
          ]
        , "properties":
          { "blockHeight": { "$ref": "ogmios.json#/definitions/BlockNo" }
          , "slot": { "$ref": "ogmios.json#/definitions/Slot" }
          , "prevHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
          , "issuerVk": { "$ref": "ogmios.json#/definitions/VerificationKey" }
          , "issuerVrf": { "$ref": "ogmios.json#/definitions/IssuerVrfVerificationKey" }
          , "blockSize": { "$ref": "ogmios.json#/definitions/BlockSize" }
          , "blockHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].body" }
          , "opCert": { "$ref": "ogmios.json#/definitions/OpCert" }
          , "protocolVersion": { "$ref": "ogmios.json#/definitions/ProtocolVersion" }
          , "signature": { "$ref": "ogmios.json#/definitions/IssuerSignature" }
          , "vrfInput": { "$ref": "ogmios.json#/definitions/CertifiedVrf" }
          }
        }
      }
    }

  , "BlockNo":
    { "type": "integer"
    , "description": "A block number, the i-th block to be minted is number i."
    , "minimum": 0
    , "maximum": 18446744073709552999
    }

  , "BlockNoOrOrigin":
    { "oneOf":
      [ { "$ref": "ogmios.json#/definitions/BlockNo" }
      , { "$ref": "ogmios.json#/definitions/Origin" }
      ]
    }

  , "BlockProof":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "utxo", "delegation", "update" ]
    , "properties":
      { "utxo":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "number", "root", "witnessesHash" ]
        , "properties":
          { "number": { "$ref": "ogmios.json#/definitions/UInt32" }
          , "root": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::MerkleRoot" }
          , "witnessesHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[Byron].body.txPayload[].witness" }
          }
        }
      , "delegation": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[Byron].body.dlgPayload" }
      , "update": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[Byron].body.updatePayload" }
      }
    }

  , "BlockSignature":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "dlgCertificate", "signature" ]
    , "properties":
      { "dlgCertificate": { "$ref": "ogmios.json#/definitions/DlgCertificate" }
      , "signature": { "$ref": "ogmios.json#/definitions/IssuerSignature" }
      }
    }

  , "BlockSize":
    { "type": "integer"
    , "description": "The size of the block in bytes."
    , "minimum": 0
    , "maximum": 18446744073709552999
    }

  , "BootstrapWitness":
    { "type": "object"
    , "examples":
      [ { "signature": "ZGdic3hnZ3RvZ2hkanB0ZXR2dGtjb2N2eWZpZHFxZ2d1cmpocmhxYWlpc3BxcnVlbGh2eXBxeGVld3ByeWZ2dw=="
        , "key": "deeb8f82f2af5836ebbc1b450b6dbf0b03c93afe5696f10d49e8a8304ebfac01"
        , "addressAttributes": "cA=="
        , "chainCode": "b6dbf0b03c93afe5696f10d49e8a8304ebfac01deeb8f82f2af5836ebbc1b450"
        }
      , { "signature": "KYCDveFX76KYEg6Axad/RG5+b5QbJdtYQSNA6kPjqsHh5cIwYPQyqquLJcwo9uDDfqUNmu7n2NUG+o7t2a1Hjg=="
        , "key": "0c02af01eaacc939b3d0d817f4eb57d323ea5686cb1fecb8de821df1296b84a7"
        }
      ]
    , "additionalProperties": false
    , "required": [ "signature", "key" ]
    , "properties":
      { "key": { "$ref": "ogmios.json#/definitions/VerificationKey" }
      , "signature": { "$ref": "ogmios.json#/definitions/Signature" }
      , "chainCode": { "$ref": "ogmios.json#/definitions/ChainCode" }
      , "addressAttributes": { "$ref": "ogmios.json#/definitions/AddressAttributes" }
      }
    }

  , "Bound":
    { "type": "object"
    , "description": "An era bound which captures the time, slot and epoch at which the era start. The time is relative to the start time of the network."
    , "additionalProperties": false
    , "required": ["time", "slot", "epoch"]
    , "properties":
      { "time": { "$ref": "ogmios.json#/definitions/RelativeTime" }
      , "slot": { "$ref": "ogmios.json#/definitions/Slot" }
      , "epoch": { "$ref": "ogmios.json#/definitions/Epoch" }
      }
    }

  , "Certificate":
    { "oneOf":
      [ { "type": "object"
        , "description": "A stake delegation certificate, from a delegator to a stake pool."
        , "title": "stakeDelegation"
        , "additionalProperties": false
        , "required": ["stakeDelegation"]
        , "properties":
          { "stakeDelegation":
            { "type": "object"
            , "additionalProperties": false
            , "required": ["delegator", "delegatee"]
            , "properties":
              { "delegator": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Credential" }
              , "delegatee": { "$ref": "ogmios.json#/definitions/StakePoolId" }
              }
            }
          }
        , "examples":
          [ { "stakeDelegation":
              { "delegator": "6d06fe0a5a8cb6d2bcc352581dea626bb5b2f66edf85678b2f2fa7b5"
              , "delegatee": "pool1pshqcksxywy68lt04lw6uf35f4yssekh5dx2mxqmyrukke2z5y3"
              }
            }
          ]
        }
      , { "type": "object"
        , "description": "A stake key registration certificate."
        , "title": "stakeKeyRegistration"
        , "additionalProperties": false
        , "required": ["stakeKeyRegistration"]
        , "properties":
          { "stakeKeyRegistration": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Credential" }
          }
        , "examples":
          [ { "stakeKeyRegistration": "6d06fe0a5a8cb6d2bcc352581dea626bb5b2f66edf85678b2f2fa7b5"
            }
          ]
        }
      , { "type": "object"
        , "description": "A stake key de-registration certificate."
        , "title": "stakeKeyDeregistration"
        , "additionalProperties": false
        , "required": ["stakeKeyDeregistration"]
        , "properties":
          { "stakeKeyDeregistration": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Credential" }
          }
        , "examples":
          [ { "stakeKeyDeregistration": "6d06fe0a5a8cb6d2bcc352581dea626bb5b2f66edf85678b2f2fa7b5"
            }
          ]
        }
      , { "type": "object"
        , "description": "A pool registration certificate."
        , "title": "poolRegistration"
        , "additionalProperties": false
        , "required": ["poolRegistration"]
        , "properties":
          { "poolRegistration": { "$ref": "ogmios.json#/definitions/StakePoolParameters" }
          }
        , "examples":
          [ { "poolRegistration":
              { "id": "pool1agk62kg0s9606v78exurl53mqsdu44d6qeuzypur5e7ku6gpgzp"
              , "vrf": "c91697932cef010ced94eae6854436f8f30a18dbcd16e9176514f9612816023e"
              , "pledge": 458907757199
              , "cost": 340000000
              , "margin": "499/10000"
              , "rewardAccount": "stake1uy3kcacyk50twxlzluarxwy0wv0nzyt42ecruehek9k5m8g08gvjy"
              , "owners":
                [ "236c7704b51eb71be2ff3a33388f731f31117556703e66f9b16d4d9d"
                ]
              , "relays":
                [ { "port": 3001
                  , "ipv4": "54.163.147.116"
                  , "ipv6": null
                  }
                ]
              , "metadata":
                { "url": "https://www.sophias-pool.com/poolInfo"
                , "hash": "abb6c63334b2c5d107802f932479fc146454a632e886f2b4276d6d00c1d023a2"
                }
              }
            }
          ]
        }
      , { "type": "object"
        , "description": "A pool retirement certificate."
        , "additionalProperties": false
        , "title": "poolRetirement"
        , "required": ["poolRetirement"]
        , "properties":
          { "poolRetirement":
            { "type": "object"
            , "additionalProperties": false
            , "required": ["poolId", "retirementEpoch"]
            , "properties":
              { "retirementEpoch": { "$ref": "ogmios.json#/definitions/Epoch" }
              , "poolId": { "$ref": "ogmios.json#/definitions/StakePoolId" }
              }
            }
          }
        , "examples":
          [ { "poolRetirement":
              { "poolId": "pool14cq225dlh7qy7tcc35fgrkr9yyprlk4cppytjmdv7e0gwm4w9q6"
              , "retirementEpoch": 237
              }
            }
          ]
        }
      , { "type": "object"
        , "title": "genesisDelegation"
        , "additionalProperties": false
        , "required": ["genesisDelegation"]
        , "properties":
          { "genesisDelegation":
            { "type": "object"
            , "additionalProperties": false
            , "required": ["delegateKeyHash","verificationKeyHash","vrfVerificationKeyHash"]
            , "properties":
              { "delegateKeyHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
              , "verificationKeyHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
              , "vrfVerificationKeyHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VrfVerificationKey" }
              }
            }
          }
        }
      , { "type": "object"
        , "title": "moveInstantaneousRewards"
        , "description": "Either `value` or `rewards` will be present, but never both."
        , "additionalProperties": false
        , "required": ["moveInstantaneousRewards"]
        , "properties":
          { "moveInstantaneousRewards":
            { "type": "object"
            , "additionalProperties": false
            , "required": ["pot"]
            , "properties":
              { "rewards": { "$ref": "ogmios.json#/definitions/RewardTransfer" }
              , "value":  { "$ref": "ogmios.json#/definitions/Lovelace" }
              , "pot": { "$ref": "ogmios.json#/definitions/RewardPot" }
              }
            }
          }
        }
      ]
    }

  , "CertifiedVrf":
    { "type": "object"
    , "additionalProperties": false
    , "properties":
      { "proof": { "$ref": "ogmios.json#/definitions/VrfProof" }
      , "output": { "$ref": "ogmios.json#/definitions/VrfOutput" }
      }
    }

  , "ChainCode":
    { "type": "string"
    , "description": "An Ed25519-BIP32 chain-code for key deriviation."
    , "contentEncoding": "base16"
    }

  , "CostModels":
    { "type": "object"
    , "additionalProperties": { "$ref": "ogmios.json#/definitions/CostModel" }
    , "propertyNames": { "$ref": "ogmios.json#/definitions/Language" }
    , "examples":
      [ { "plutus:v1":
          { "k": 14
          , "a": 123
          }
        }
      ]
    }

  , "CostModel":
    { "type": "object"
    , "additionalProperties": { "$ref": "ogmios.json#/definitions/Int64" }
    }

  , "Datum":
    { "type": "string"
    , "contentEncoding": "base16"
    }

  , "Digest[Blake2b]::AuxiliaryDataBody":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of an 'AuxiliaryDataBody', serialised as CBOR."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Digest[Blake2b]::Block[*].body":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of an era-independent block body."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Digest[Blake2b]::Block[*].header":
    { "oneOf":
      [ { "type": "string"
        , "description": "A Blake2b 32-byte digest of an era-independent block header, serialised as CBOR."
        , "contentEncoding": "base16"
        , "minLength": 64
        , "maxLength": 64
        , "examples":
          [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
          ]
        }
      , { "type": "string"
        , "enum": [ "genesis" ]
        }
      ]
    }

  , "Digest[Blake2b]::Block[Byron].body.dlgPayload":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of a Byron delegation payload, CBOR-encoded."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Digest[Blake2b]::Block[Byron].body.txPayload[].witness":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of a Byron transaction witness set, CBOR-encoded."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Digest[Blake2b]::Block[Byron].body.updatePayload":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of a Byron update payload, CBOR-encoded."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Digest[Blake2b]::Credential":
    { "type": "string"
    , "description": "A Blake2b 28-byte digest of a verification key or a script."
    , "contentEncoding": "base16"
    , "minLength": 56
    , "maxLength": 56
    , "examples":
      [ "90181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d3"
      ]
    }

  , "Digest[Blake2b]::Datum":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of a serialized datum, CBOR-encoded."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Digest[Blake2b]::MerkleRoot":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of a Merkle tree (or all block's transactions) root hash."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Digest[Blake2b]::Nonce":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of some arbitrary to make a nonce."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Digest[Blake2b]::PoolMetadata":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of stake pool (canonical) JSON metadata."
    , "contentEncoding": "base16"
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Digest[Blake2b]::Script":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of a phase-1 or phase-2 script, CBOR-encoded."
    , "contentEncoding": "base16"
    , "minLength": 56
    , "maxLength": 56
    , "examples":
      [ "90181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d3"
      ]
    }

  , "Digest[Blake2b]::ScriptIntegrity":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of a script-integrity hash (i.e redeemers, datums and cost model, CBOR-encoded)."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Digest[Blake2b]::VerificationKey":
    { "type": "string"
    , "description": "A Blake2b 28-byte digest of an Ed25519 verification key."
    , "contentEncoding": "base16"
    , "minLength": 56
    , "maxLength": 56
    , "examples":
      [ "90181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d3"
      ]
    }

  , "Digest[Blake2b]::VrfVerificationKey":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of a VRF verification key."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "DlgCertificate":
    { "type": "object"
    , "description": "A (Byron) delegation certificate."
    , "additionalProperties": false
    , "required": [ "epoch", "issuerVk", "delegateVk", "signature" ]
    , "properties":
      { "epoch": { "$ref": "ogmios.json#/definitions/Epoch" }
      , "issuerVk": { "$ref": "ogmios.json#/definitions/GenesisVerificationKey" }
      , "delegateVk": { "$ref": "ogmios.json#/definitions/GenesisVerificationKey" }
      , "signature": { "$ref": "ogmios.json#/definitions/IssuerSignature" }
      }
    }

  , "Epoch":
    { "type": "integer"
    , "description": "An epoch number or length."
    , "minimum": 0
    , "maximum": 18446744073709552000
    }

  , "Era":
    { "type": "string"
    , "enum": ["Byron", "Shelley", "Allegra", "Mary", "Alonzo", "Babbage"]
    }

  , "EraMismatch":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "queryEra", "ledgerEra" ]
    , "properties":
      { "queryEra": { "$ref": "ogmios.json#/definitions/Era" }
      , "ledgerEra": { "$ref": "ogmios.json#/definitions/Era" }
      }
    }

  , "EraParameters":
    { "type": "object"
    , "description": "Parameters that can vary across hard forks."
    , "additionalProperties": false
    , "required": [ "epochLength", "slotLength", "safeZone" ]
    , "properties":
      { "epochLength": { "$ref": "ogmios.json#/definitions/Epoch" }
      , "slotLength": { "$ref": "ogmios.json#/definitions/SlotLength" }
      , "safeZone":
        { "oneOf":
          [ { "$ref": "ogmios.json#/definitions/SafeZone" }
          , { "type": "null" }
          ]
        }
      }
    }

  , "EraSummary":
    { "type": "object"
    , "description": "Summary of the confirmed parts of the ledger."
    , "additionalProperties": false
    , "required": [ "start", "end", "parameters" ]
    , "properties":
      { "start": { "$ref": "ogmios.json#/definitions/Bound" }
      , "end":
        { "oneOf":
          [ { "$ref": "ogmios.json#/definitions/Bound" }
          , { "type": "null" }
          ]
        }
      , "parameters": { "$ref": "ogmios.json#/definitions/EraParameters" }
      }
    }

  , "EvaluateTransactionFailure[ScriptExecutionFailure]":
    { "title": "ScriptExecutionFailure"
    , "description": "Some script in the transaction terminated with an error."
    , "type": "object"
    , "propertyNames": { "$ref": "ogmios.json#/definitions/RedeemerPointer" }
    , "additionalProperties":
      { "type": "array"
      , "items":
        { "oneOf":
          [ { "$ref": "ogmios.json#/definitions/SubmitTransactionError[extraRedeemers]" }
          , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingRequiredDatums]" }
          , { "$ref": "ogmios.json#/definitions/ScriptFailure[missingRequiredScripts]" }
          , { "$ref": "ogmios.json#/definitions/ScriptFailure[validatorFailed]" }
          , { "$ref": "ogmios.json#/definitions/ScriptFailure[unknownInputReferencedByRedeemer]" }
          , { "$ref": "ogmios.json#/definitions/ScriptFailure[nonScriptInputReferencedByRedeemer]" }
          , { "$ref": "ogmios.json#/definitions/ScriptFailure[illFormedExecutionBudget]" }
          , { "$ref": "ogmios.json#/definitions/ScriptFailure[noCostModelForLanguage]" }
          ]
        }
      }
    }

  , "EvaluateTransactionFailure[IncompatibleEra]":
    { "title": "IncompatibleEra"
    , "description": "The era in which the transaction has been identified."
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "incompatibleEra" ]
    , "properties":
      { "incompatibleEra":
        { "type": "string"
        , "enum": [ "Byron", "Shelley", "Allegra", "Mary" ]
        }
      }
    }

  , "EvaluateTransactionFailure[OverlappingAdditionalUtxo]":
    { "title": "OverlappingAdditionalUtxo"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "overlappingOutputReferences" ]
    , "properties":
      { "overlappingOutputReferences":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
        }
      }
    }

  , "EvaluateTransactionFailure[NodeTipTooOld]":
    { "title": "NodeTipTooOld"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "currentNodeEra", "minimumRequiredEra" ]
    , "properties":
      { "minimumRequiredEra": { "$ref": "ogmios.json#/definitions/Era" }
      , "currentNodeEra": { "$ref": "ogmios.json#/definitions/Era" }
      }
    }

  , "EvaluateTransactionFailure[CannotCreateEvaluationContext]":
    { "title": "CannotCreateEvaluationContext"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "reason" ]
    , "properties":
      { "reason": { "type": "string" }
      }
    }

  , "ExUnits":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "memory", "steps" ]
    , "properties":
      { "memory": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "steps": { "$ref": "ogmios.json#/definitions/UInt64" }
      }
    }

  , "Genesis[Byron]":
    { "type": "object"
    , "description": "A Byron genesis configuration, with information used to bootstrap the era. Some parameters are also updatable across the era."
    , "additionalProperties": false
    , "required":
      [ "genesisKeyHashes"
      , "genesisDelegations"
      , "systemStart"
      , "initialFunds"
      , "initialCoinOffering"
      , "securityParameter"
      , "networkMagic"
      , "protocolParameters"
      ]
    , "properties":
      { "genesisKeyHashes":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
        }
      , "genesisDelegations":
        { "type": "object"
        , "propertyNames": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/DlgCertificate" }
        }
      , "systemStart": { "$ref": "ogmios.json#/definitions/UtcTime" }
      , "initialFunds":
        { "type": "object"
        , "propertyNames": { "$ref": "ogmios.json#/definitions/Address" }
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/Lovelace" }
        }
      , "initialCoinOffering":
        { "type": "object"
        , "propertyNames": { "$ref": "ogmios.json#/definitions/VerificationKey" }
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/Lovelace" }
        }
      , "securityParameter": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "networkMagic": { "$ref": "ogmios.json#/definitions/NetworkMagic" }
      , "protocolParameters": { "$ref": "ogmios.json#/definitions/ProtocolParameters[Byron]" }
      }
    }

  , "Genesis[Shelley]":
    { "type": "object"
    , "description": "A Shelley genesis configuration, with information used to bootstrap the era. Some parameters are also updatable across the era."
    , "additionalProperties": false
    , "required":
      [ "systemStart"
      , "networkMagic"
      , "network"
      , "activeSlotsCoefficient"
      , "securityParameter"
      , "epochLength"
      , "slotsPerKesPeriod"
      , "maxKesEvolutions"
      , "slotLength"
      , "updateQuorum"
      , "maxLovelaceSupply"
      , "protocolParameters"
      , "initialDelegates"
      , "initialFunds"
      , "initialPools"
      ]
    , "properties":
      { "systemStart": { "$ref": "ogmios.json#/definitions/UtcTime" }
      , "networkMagic": { "$ref": "ogmios.json#/definitions/NetworkMagic" }
      , "network": { "$ref": "ogmios.json#/definitions/Network" }
      , "activeSlotsCoefficient": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "securityParameter": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "epochLength": { "$ref": "ogmios.json#/definitions/Epoch" }
      , "slotsPerKesPeriod": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxKesEvolutions": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "slotLength": { "$ref": "ogmios.json#/definitions/SlotLength" }
      , "updateQuorum": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxLovelaceSupply": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "protocolParameters": { "$ref": "ogmios.json#/definitions/ProtocolParameters[Shelley]" }
      , "initialDelegates":
        { "type": "object"
        , "title": "InitialDelegates"
        , "propertyNames": { "ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/GenesisDelegate" }
        }
      , "initialFunds":
        { "type": "object"
        , "title": "InitialFunds"
        , "propertyNames": { "$ref": "ogmios.json#/definitions/Address" }
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/Lovelace" }
        }
      , "initialPools": { "$ref": "ogmios.json#/definitions/GenesisPools" }
      }
    }

  , "Genesis[Alonzo]":
    { "type": "object"
    , "description": "An Alonzo genesis configuration, with information used to bootstrap the era. Some parameters are also updatable across the era."
    , "additionalProperties": false
    , "required":
      [ "coinsPerUtxoWord"
      , "collateralPercentage"
      , "costModels"
      , "maxCollateralInputs"
      , "maxExecutionUnitsPerBlock"
      , "maxExecutionUnitsPerTransaction"
      , "maxValueSize"
      , "prices"
      ]
    , "properties":
      { "coinsPerUtxoWord": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "collateralPercentage": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "costModels": { "$ref": "ogmios.json#/definitions/CostModels" }
      , "maxCollateralInputs": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxExecutionUnitsPerBlock": { "$ref": "ogmios.json#/definitions/ExUnits" }
      , "maxExecutionUnitsPerTransaction": { "$ref": "ogmios.json#/definitions/ExUnits" }
      , "maxValueSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "prices": { "$ref": "ogmios.json#/definitions/Prices" }
      }
    }

  , "GenesisDelegate":
    { "type": "object"
    , "description": "A Genesis delegate, in charge of Cardano's governance."
    , "additionalProperties": false
    , "required":
      [ "delegate"
      , "vrf"
      ]
    , "properties":
      { "delegate": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
      , "vrf": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VrfVerificationKey" }
      }
    }

  , "GenesisPools":
    { "type": "object"
    , "description": "A Genesis stake pools configuration; primarily used for bootstrapping test networks."
    , "additionalProperties": false
    , "required":
      [ "pools"
      , "delegators"
      ]
    , "properties":
      { "pools":
        { "type": "object"
        , "propertyNames": { "$ref": "ogmios.json#/definitions/StakePoolId" }
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/StakePoolParameters" }
        }
      , "delegators":
        { "type": "object"
        , "propertyNames": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/StakePoolId" }
        }
      }
    }

  , "GenesisVerificationKey":
    { "type": "string"
    , "description": "An Ed25519-BIP32 Byron genesis delegate verification key with chain-code."
    , "contentEncoding": "base16"
    , "minLength": 128
    , "maxLength": 128
    }

  , "Int64":
    { "type": "integer"
    , "minimum": -9223372036854775808
    , "maximum": 9223372036854775807
    }

  , "InvalidEntity":
    { "oneOf":
      [ { "type": "object"
        , "additionalProperties": false
        , "required": [ "type", "entity" ]
        , "properties":
          { "type":
            { "type": "string"
            , "enum": [ "address" ]
            }
          , "entity": { "$ref": "ogmios.json#/definitions/Address" }
          }
        }
      , { "type": "object"
        , "additionalProperties": false
        , "required": [ "type", "entity" ]
        , "properties":
          { "type":
            { "type": "string"
            , "enum": [ "poolRegistration" ]
            }
          , "entity": { "$ref": "ogmios.json#/definitions/StakePoolId" }
          }
        }
      , { "type": "object"
        , "additionalProperties": false
        , "required": [ "type", "entity" ]
        , "properties":
          { "type":
            { "type": "string"
            , "enum": [ "rewardAccount" ]
            }
          , "entity": { "$ref": "ogmios.json#/definitions/RewardAccount" }
          }
        }
      ]
    }

  , "IssuerVrfVerificationKey":
    { "type": "string"
    , "description": "A key identifying a block issuer."
    , "contentEncoding": "base16"
    }

  , "IssuerSignature":
    { "type": "string"
    , "description": "Signature proving a block was issued by a given issuer VRF key."
    , "contentEncoding": "base16"
    }

  , "Language":
    { "type": "string"
    , "enum": [ "plutus:v1", "plutus:v2" ]
    }

  , "LiveStakeDistribution":
    { "type": "object"
    , "description": "Distribution of stake across registered stake pools. Each key in the map corresponds to a pool id."
    , "propertyNames": { "$ref": "ogmios.json#/definitions/StakePoolId" }
    , "additionalProperties":
      { "type": "object"
      , "additionalProperties": false
      , "required": ["stake", "vrf"]
      , "properties":
        { "stake": { "$ref": "ogmios.json#/definitions/Ratio" }
        , "vrf": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VrfVerificationKey" }
        }
      }
    , "examples":
      [ { "pool1qqqqqdk4zhsjuxxd8jyvwncf5eucfskz0xjjj64fdmlgj735lr9":
          { "stake": "64666784451745/32381463809418351"
          , "vrf": "6de7605b2afd7e205318fc8b4329d26439b5b179b4746fea12f1ce50395f5d9e"
          }
        , "pool1qqqqpanw9zc0rzh0yp247nzf2s35uvnsm7aaesfl2nnejaev0uc":
          { "stake": "7072561631906/10793821269806117"
          , "vrf": "bb862fcc397de6c06dea9a9ad8442a3d17826e01799a79b861fc083341eaed3d"
          }
        }
      ]
    }

  , "Lovelace":
    { "type": "integer"
    , "description": "A number of lovelace, possibly large when summed up."
    }

  , "LovelaceDelta":
    { "type": "integer"
    , "description": "An amount, possibly negative, in Lovelace (1e6 Lovelace = 1 Ada)."
    , "minimum": -9223372036854775808
    , "maximum": 9223372036854775807
    }

  , "KesVerificationKey":
    { "type": "string"
    , "contentEncoding": "base16"
    }

  , "MempoolSizeAndCapacity":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "maxCapacity", "currentSize", "transactions" ]
    , "properties":
      { "maxCapacity":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "bytes" ]
        , "properties":
          { "bytes": { "$ref": "ogmios.json#/definitions/UInt32" }
          }
        }
      , "currentSize":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "bytes" ]
        , "properties":
          { "bytes": { "$ref": "ogmios.json#/definitions/UInt32" }
          }
        }
      , "transactions":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "count" ]
        , "properties":
          { "count": { "$ref": "ogmios.json#/definitions/UInt32" }
          }
        }
      }
    }

  , "Metadata":
    { "type": "object"
    , "propertyNames": { "pattern": "^-?[0-9]+$" }
    , "examples":
      [ { "42":
          { "int": 14
          }
        }
      , { "42":
          { "string": "Some Text"
          }
        }
      , { "1337":
          { "list":
            [ { "string": "foo" }
            , { "map": [ { "k": { "string": "bar" }, "v": { "int": 3 } } ] }
            ]
          }
        }
      ]
    , "additionalProperties": { "$ref": "ogmios.json#/definitions/Metadatum" }
    }

  , "Metadatum":
    { "oneOf":
      [ { "type": "object"
        , "title": "int"
        , "additionalProperties": false
        , "required": ["int"]
        , "properties":
          { "int":
              { "type": "integer"
              }
          }
        }
      , { "type": "object"
        , "title": "string"
        , "additionalProperties": false
        , "required": ["string"]
        , "properties":
          { "string":
              { "type": "string"
              }
          }
        }
      , { "type": "object"
        , "title": "bytes"
        , "additionalProperties": false
        , "required": ["bytes"]
        , "properties":
          { "bytes":
            { "type": "string"
            , "contentEncoding": "base16"
            , "pattern": "^[0-9a-f]*$"
            }
          }
        }
      , { "type": "object"
        , "title": "list"
        , "additionalProperties": false
        , "required": ["list"]
        , "properties":
          { "list":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Metadatum" }
            }
          }
        }
      , { "type": "object"
        , "title": "map"
        , "additionalProperties": false
        , "required": ["map"]
        , "properties":
          { "map":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/MetadatumMap" }
            }
          }
        }
      ]
    }

  , "MetadatumMap":
    { "type": "object"
    , "additionalProperties": false
    , "required": ["k", "v"]
    , "properties":
      { "k": { "$ref": "ogmios.json#/definitions/Metadatum" }
      , "v": { "$ref": "ogmios.json#/definitions/Metadatum" }
      }
    }

  , "Network":
    { "type": "string"
    , "description": "A network target, as defined since the Shelley era."
    , "enum": [ "mainnet", "testnet" ]
    }

  , "NetworkMagic":
    { "type": "integer"
    , "description": "A magic number for telling networks apart. (e.g. 764824073)"
    , "minimum": 0
    , "maximum": 4294967296
    , "examples":
      [ 764824073
      ]
    }

  , "Nonce":
    { "oneOf":
      [ { "type": "string"
        , "enum": ["neutral"]
        , "title": "neutral"
        }
      , { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Nonce" }
      ]
    }

  , "Null":
    { "type": "null"
    }

  , "OpCert":
    { "type": "object"
    , "description": "Certificate identifying a stake pool operator."
    , "additionalProperties": false
    , "properties":
      { "count": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "sigma": { "$ref": "ogmios.json#/definitions/Signature" }
      , "kesPeriod": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "hotVk": { "$ref": "ogmios.json#/definitions/KesVerificationKey" }
      }
    }

  , "Origin":
    { "type": "string"
    , "description": "The origin of the blockchain. This point is special in the sense that it doesn't point to any existing slots, but is preceding any existing other point."
    , "title": "Origin"
    , "name": "Oirigin"
    , "enum": [ "origin" ]
    }

  , "PointOrOrigin":
    { "oneOf":
      [ { "type": "object"
        , "description": "A point on the chain, identified by a slot and a block header hash."
        , "title": "Point"
        , "name": "Point"
        , "additionalProperties": false
        , "required": [ "slot", "hash" ]
        , "properties":
          { "slot": { "$ref": "ogmios.json#/definitions/Slot" }
          , "hash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
          }
        }
      , { "$ref": "ogmios.json#/definitions/Origin" }
      ]
    }

  , "PolicyId":
    { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Script"
    }

  , "ProjectedRewards":
    { "type": "object"
    , "description": "Rewards that can be expected assuming a pool is fully saturated. Such rewards are said non-myopic, in opposition to short-sighted rewards looking at immediate benefits. Keys of the map can be either Lovelace amounts or account credentials depending on the query."
    , "propertyNames": { "pattern": "^[0-9]+|[0-9a-f]+$" }
    , "additionalProperties":
      { "type": "object"
      , "propertyNames": { "contentEncoding": "bech32", "pattern": "^[0-9a-f]+$" }
      , "additionalProperties":
        { "type": "number"
        , "minimum": 0
        }
      }
    , "examples":
      [ { "1000000":
          { "pool1qqqqqdk4zhsjuxxd8jyvwncf5eucfskz0xjjj64fdmlgj735lr9": 688
          , "pool1qqqqpanw9zc0rzh0yp247nzf2s35uvnsm7aaesfl2nnejaev0uc": 676
          , "pool1qqqqzyqf8mlm70883zht60n4q6uqxg4a8x266sewv8ad2grkztl": 0
          }
        , "bc1597ad71c55d2d009a9274b3831ded155118dd769f5376decc1369":
          { "pool1qfzjwrtupyvzx0atp5pa3m82v7s8z2eqyqffa0grpyf4j349h6r": 0
          , "pool1qfxukshs4fkcrflzdnxa2fdza5lfvew3y6echg8ckaa4q8m5hyf": 103181546
          }
        }
      ]
    }

  , "StakePoolId":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of a pool's verification key."
    , "contentEncoding": "bech32"
    , "pattern": "^pool1[0-9a-z]*$"
    , "examples":
      [ "pool1qqqqpanw9zc0rzh0yp247nzf2s35uvnsm7aaesfl2nnejaev0uc"
      , "pool1qqqqqdk4zhsjuxxd8jyvwncf5eucfskz0xjjj64fdmlgj735lr9"
      ]
    }

  , "StakePoolParameters":
    { "type": "object"
    , "additionalProperties": false
    , "required": ["owners", "cost", "margin", "pledge", "vrf", "id", "relays", "rewardAccount"]
    , "properties":
      { "id": { "$ref": "ogmios.json#/definitions/StakePoolId" }
      , "owners":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
        }
      , "cost": { "$ref": "ogmios.json#/definitions/Lovelace" }
      , "margin": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "pledge": { "$ref": "ogmios.json#/definitions/Lovelace" }
      , "vrf": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VrfVerificationKey" }
      , "metadata":
        { "type": "object"
        , "title": "poolMetadata"
        , "additionalProperties": false
        , "required": ["hash","url"]
        , "properties":
          { "hash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::PoolMetadata" }
          , "url":
            { "type": "string"
            , "format": "uri"
            }
          }
        }
      , "relays":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Relay" }
        }
      , "rewardAccount": { "$ref": "ogmios.json#/definitions/RewardAccount" }
      }
    }

  , "StakePoolSummary":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "stake", "ownerStake", "approximatePerformance", "poolParameters" ]
    , "properties":
      { "stake": { "$ref": "ogmios.json#/definitions/Lovelace" }
      , "ownerStake":
        { "$ref": "ogmios.json#/definitions/Lovelace"
        , "description": "The number of Lovelace owned by the stake pool owners. If this value is not at least as large as the 'pledgeRatio', the stake pool will not earn any rewards for the given epoch."
        }
      , "approximatePerformance":
        { "type": "number"
        , "description": "Number of blocks produced divided by expected number of blocks (based on stake and epoch progress). Can be larger than 1.0 for pools that get lucky."
        , "minimum": 0
        }
      , "poolParameters":
        { "type": "object"
        , "description": "Some of the pool parameters relevant for the reward calculation."
        , "additionalProperties": false
        , "required": [ "cost", "margin", "pledge" ]
        , "properties":
          { "cost": { "$ref": "ogmios.json#/definitions/Lovelace" }
          , "margin": { "$ref": "ogmios.json#/definitions/Ratio" }
          , "pledge": { "$ref": "ogmios.json#/definitions/Lovelace" }
          }
        }
      }
    }

  , "Prices":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "memory", "steps" ]
    , "properties":
      { "memory": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "steps": { "$ref": "ogmios.json#/definitions/Ratio" }
      }
    }

  , "ProtocolMagicId":
    { "type": "integer"
    , "minimum": 0
    , "maximum": 4294967295
    , "examples":
      [ 764824073
      ]
    }

  , "ProtocolParameters[Byron]":
    { "type": "object"
    , "additionalProperties": false
    , "properties":
      { "heavyDlgThreshold": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "maxBlockSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxHeaderSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxProposalSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxTxSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "mpcThreshold": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "scriptVersion": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "slotDuration": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "unlockStakeEpoch": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "updateProposalThreshold": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "updateProposalTimeToLive": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "updateVoteThreshold": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "txFeePolicy": { "$ref": "ogmios.json#/definitions/TxFeePolicy" }
      , "softforkRule": { "$ref": "ogmios.json#/definitions/SoftForkRule" }
      }
    }

  , "ProtocolParameters[Shelley]":
    { "type": "object"
    , "additionalProperties": false
    , "properties":
      { "minFeeCoefficient": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "minFeeConstant": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxBlockBodySize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxBlockHeaderSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxTxSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "stakeKeyDeposit": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "poolDeposit": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "poolRetirementEpochBound": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "desiredNumberOfPools": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "poolInfluence": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "monetaryExpansion": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "treasuryExpansion": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "decentralizationParameter": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "minUtxoValue": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "minPoolCost": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "extraEntropy": { "$ref": "ogmios.json#/definitions/Nonce" }
      , "protocolVersion": { "$ref": "ogmios.json#/definitions/ProtocolVersion" }
      }
    }

  , "ProtocolParameters[Alonzo]":
    { "type": "object"
    , "additionalProperties": false
    , "properties":
      { "minFeeCoefficient": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "minFeeConstant": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxBlockBodySize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxBlockHeaderSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxTxSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "stakeKeyDeposit": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "poolDeposit": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "poolRetirementEpochBound": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "desiredNumberOfPools": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "poolInfluence": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "monetaryExpansion": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "treasuryExpansion": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "decentralizationParameter": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "minPoolCost": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "coinsPerUtxoWord": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxValueSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "collateralPercentage": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxCollateralInputs": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "extraEntropy": { "$ref": "ogmios.json#/definitions/Nonce" }
      , "protocolVersion": { "$ref": "ogmios.json#/definitions/ProtocolVersion" }
      , "costModels": { "$ref": "ogmios.json#/definitions/CostModels" }
      , "prices": { "$ref": "ogmios.json#/definitions/Prices" }
      , "maxExecutionUnitsPerTransaction": { "$ref": "ogmios.json#/definitions/ExUnits" }
      , "maxExecutionUnitsPerBlock": { "$ref": "ogmios.json#/definitions/ExUnits" }
      }
    }

  , "ProtocolParameters[Babbage]":
    { "type": "object"
    , "additionalProperties": false
    , "properties":
      { "minFeeCoefficient": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "minFeeConstant": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxBlockBodySize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxBlockHeaderSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxTxSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "stakeKeyDeposit": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "poolDeposit": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "poolRetirementEpochBound": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "desiredNumberOfPools": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "poolInfluence": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "monetaryExpansion": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "treasuryExpansion": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "minPoolCost": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "coinsPerUtxoByte": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxValueSize": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "collateralPercentage": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "maxCollateralInputs": { "$ref": "ogmios.json#/definitions/UInt64" }
      , "protocolVersion": { "$ref": "ogmios.json#/definitions/ProtocolVersion" }
      , "costModels": { "$ref": "ogmios.json#/definitions/CostModels" }
      , "prices": { "$ref": "ogmios.json#/definitions/Prices" }
      , "maxExecutionUnitsPerTransaction": { "$ref": "ogmios.json#/definitions/ExUnits" }
      , "maxExecutionUnitsPerBlock": { "$ref": "ogmios.json#/definitions/ExUnits" }
      }
    }

  , "ProtocolVersion":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "major", "minor" ]
    , "properties":
      { "major": { "$ref": "ogmios.json#/definitions/UInt32" }
      , "minor": { "$ref": "ogmios.json#/definitions/UInt32" }
      , "patch": { "$ref": "ogmios.json#/definitions/UInt32" }
      }
    }

  , "Ratio":
    { "type": "string"
    , "description": "A ratio of two integers, to express exact fractions."
    , "pattern": "^-?[0-9]+/[0-9]+$"
    , "examples":
      [ "2/3"
      , "7/8"
      ]
    }

  , "Redeemer":
    { "type": "object"
    , "examples":
      [ { "executionUnits":
          { "memory": 2
          , "steps": 2
          }
        , "redeemer": "ggRCqSQ="
        }
      ]
    , "additionalProperties": false
    , "required": [ "redeemer", "executionUnits" ]
    , "properties":
      { "redeemer": { "$ref": "ogmios.json#/definitions/RedeemerData" }
      , "executionUnits": { "$ref": "ogmios.json#/definitions/ExUnits" }
      }
    }

  , "RedeemerData":
    { "type": "string"
    , "contentEncoding": "base16"
    , "description": "Plutus data, CBOR-serialised."
    }

  , "RedeemerPointer":
    { "type": "string"
    , "pattern": "^(spend|mint|certificate|withdrawal):[0-9]+$"
    }

  , "RelativeTime":
    { "type": "number"
    , "description": "A time in seconds relative to another one (typically, system start or era start). Starting from v5.5.4, this can be a floating number. Before v5.5.4, the floating value would be rounded to the nearest second."
    , "minimum": 0
    }

  , "Relay":
    { "oneOf":
      [ { "type": "object"
        , "title": "by address"
        , "additionalProperties": false
        , "properties":
          { "ipv4":
            { "type": "string"
            }
          , "ipv6":
            { "type": "string"
            }
          , "port":
            { "type": "integer"
            , "minimum": 0
            , "maximum": 65535
            }
          }
        }
      , { "type": "object"
        , "title": "by name"
        , "additionalProperties": false
        , "required": ["hostname"]
        , "properties":
          { "hostname": { "type": "string" }
          , "port":
            { "type": "integer"
            , "minimum": 0
            , "maximum": 65535
            }
          }
        }
      ]
    }

  , "RewardAccountSummary":
    { "type": "object"
    , "additionalProperties": false
    , "properties":
      { "delegate": { "$ref": "ogmios.json#/definitions/StakePoolId" }
      , "rewards": { "$ref": "ogmios.json#/definitions/Lovelace" }
      }
    , "examples":
      [ { "bc1597ad71c55d2d009a9274b3831ded155118dd769f5376decc1369":
          { "delegate": "pool1kchver88u3kygsak8wgll7htr8uxn5v35lfrsyy842nkscrzyvj"
          , "rewards": 219558722
          }
        }
      ]
    }

  , "RewardAccount":
    { "type": "string"
    , "description": "A reward account, also known as 'stake address'."
    , "contentEncoding": "bech32"
    , "pattern": "^stake(_test)?1[0-9a-z]+$"
    , "examples":
      [ "stake1ux7pt9adw8z46tgqn2f8fvurrhk325gcm4mf75mkmmxpx6gae9mzv"
      ]
    }

  , "RewardPot":
    { "type": "string"
    , "description": "Source of rewards as defined by the protocol parameters."
    , "enum": ["reserves", "treasury"]
    }

  , "RewardTransfer":
    { "type": "object"
    , "additionalProperties": { "$ref": "ogmios.json#/definitions/LovelaceDelta" }
    , "propertyNames": { "pattern": "[0-9a-f]{56}$" }
    , "examples":
      [ { "6d06fe0a5a8cb6d2bcc352581dea626bb5b2f66edf85678b2f2fa7b5": 123456789
        }
      ]
    }

  , "RewardsProvenance":
    { "type": "object"
    , "description": "Details about how rewards are calculated for the ongoing epoch."
    , "additionalProperties": false
    , "required": [ "desiredNumberOfPools", "poolInfluence", "totalRewards", "activeStake", "pools" ]
    , "properties":
      { "desiredNumberOfPools":
        { "type": "integer"
        , "description": "Desired number of stake pools."
        , "minimum": 0
        , "maximum": 18446744073709552999
        }
      , "poolInfluence":
        { "type": "string"
        , "description": "Influence of the pool owner's pledge on rewards, as a ratio of two integers."
        , "pattern": "^-?[0-9]+/[0-9]+$"
        , "examples":
          [ "2/3"
          , "7/8"
          ]
        }
      , "totalRewards":
        { "type": "integer"
        , "description": "Total rewards available for the given epoch."
        }
      , "activeStake":
        { "type": "integer"
        , "description": "The total amount of staked Lovelace during this epoch."
        }
      , "pools":
        { "type": "object"
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/StakePoolSummary" }
        , "propertyNames": { "$ref": "ogmios.json#/definitions/StakePoolId" }
        }
      }
    }

  , "SafeZone":
    { "type": "integer"
    , "description": "Number of slots from the tip of the ledger in which it is guaranteed that no hard fork can take place. This should be (at least) the number of slots in which we are guaranteed to have k blocks."
    , "minimum": 0
    , "maximum": 18446744073709552999
    }

  , "Script":
    { "oneOf":
      [ { "type": "object"
        , "title": "Native"
        , "additionalProperties": false
        , "required": [ "native" ]
        , "properties":
          { "native": { "$ref": "ogmios.json#/definitions/Script[Native]" }
          }
        }
      , { "type": "object"
        , "title": "PlutusV1"
        , "additionalProperties": false
        , "required": [ "plutus:v1" ]
        , "properties":
          { "plutus:v1": { "$ref": "ogmios.json#/definitions/Script[Plutus]" }
          }
        }
      , { "type": "object"
        , "title": "PlutusV2"
        , "additionalProperties": false
        , "required": [ "plutus:v2" ]
        , "properties":
          { "plutus:v2": { "$ref": "ogmios.json#/definitions/Script[Plutus]" }
          }
        }
      ]
    }

  , "Script[Native]":
    { "description": "A phase-1 monetary script. Timelocks constraints are only supported since Allegra."
    , "examples":
        [ "3c07030e36bfff7cd2f004356ef320f3fe3c07030e7cd2f004356437"
        , { "all":
            [ "ec09e5293d384637cd2f004356ef320f3fe3c07030e36bfffe67e2e2"
            , "3c07030e36bfff7cd2f004356ef320f3fe3c07030e7cd2f004356437"
            ]
          }
        ]
    , "anyOf":
      [ { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
      , { "type": "object"
        , "title": "any"
        , "additionalProperties": false
        , "required": ["any"]
        , "properties":
          { "any":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Script[Native]" }
            }
          }
        }
      , { "type": "object"
        , "title": "all"
        , "additionalProperties": false
        , "required": ["all"]
        , "properties":
          { "all":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Script[Native]" }
            }
          }
        }
      , { "type": "object"
        , "title": "NOf"
        , "propertyNames": { "pattern": "^[0-9]+$" }
        , "additionalProperties":
          { "type": "array"
          , "items": { "$ref": "ogmios.json#/definitions/Script[Native]" }
          }
        }
      , { "type": "object"
        , "title": "expiresAt"
        , "additionalProperties": false
        , "required": [ "expiresAt" ]
        , "properties":
          { "expiresAt": { "$ref": "ogmios.json#/definitions/Slot" }
          }
        }
      , { "type": "object"
        , "title": "startsAt"
        , "additionalProperties": false
        , "required": [ "startsAt" ]
        , "properties":
          { "startsAt": { "$ref": "ogmios.json#/definitions/Slot" }
          }
        }
      ]
    }

  , "Script[Plutus]":
    { "type": "string"
    , "description": "A phase-2 Plutus script; or said differently, a serialized Plutus-core program."
    , "contentEncoding": "base16"
    }

  , "ScriptFailure[missingRequiredScripts]":
    { "title": "missingRequiredScripts"
    , "description": "Missing scripts required for validating script inputs."
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "missingRequiredScripts" ]
    , "properties":
      { "missingRequiredScripts":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "missing", "resolved" ]
        , "properties":
          { "missing":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/RedeemerPointer" }
            }
          , "resolved":
            { "type": "object"
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Script" }
            , "propertyNames": { "$ref": "ogmios.json#/definitions/RedeemerPointer" }
            }
          }
        }
      }
    }

  , "ScriptFailure[validatorFailed]":
    { "title": "validatorFailed"
    , "description": "Plutus interpreter error. Returns additional traces produced by the validator."
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "validatorFailed" ]
    , "properties":
      { "validatorFailed":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "error", "traces" ]
        , "properties":
          { "error": { "type": "string" }
          , "traces":
            { "type": "array"
            , "items": { "type": "string" }
            }
          }
        }
      }
    }

  , "ScriptFailure[unknownInputReferencedByRedeemer]":
    { "title": "unknownInputReferencedByRedeemer"
    , "description": "Non-existing input referenced by a redeemer pointer."
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "unknownInputReferencedByRedeemer" ]
    , "properties":
      { "unknownInputReferencedByRedeemer": { "$ref": "ogmios.json#/definitions/TxIn" }
      }
    }

  , "ScriptFailure[nonScriptInputReferencedByRedeemer]":
    { "title": "nonScriptInputReferencedByRedeemer"
    , "description": "Input not locked by a Plutus referenced by a redeemer pointer."
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "nonScriptInputReferencedByRedeemer" ]
    , "properties":
      { "nonScriptInputReferencedByRedeemer": { "$ref": "ogmios.json#/definitions/TxIn" }
      }
    }

  , "ScriptFailure[illFormedExecutionBudget]":
    { "title": "illFormedExecutionBudget"
    , "description": "Invalid execution budget set for a redeemer. In principle, cannot happen in the context of Ogmios."
    , "type": "object"
    , "additionalProperties": false
    , "properties":
      { "illFormedExecutionBudget": { "$ref": "ogmios.json#/definitions/ExUnits" }
      }
    }

  , "ScriptFailure[noCostModelForLanguage]":
    { "title": "noCostModelForLanguage"
    , "description": "Input locked by a script which language has no cost model in current protocol parameters. In principle, cannot happen in the context of Ogmios."
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "noCostModelForLanguage" ]
    , "properties":
      { "noCostModelForLanguage": { "$ref": "ogmios.json#/definitions/Language" }
      }
    }

  , "ScriptPurpose":
    { "oneOf":
      [ { "title": "spend"
        , "type": "object"
        , "additionalProperties": false
        , "required": [ "spend" ]
        , "properties":
          { "spend": { "$ref": "ogmios.json#/definitions/TxIn" }
          }
        }
      , { "title": "mint"
        , "type": "object"
        , "additionalProperties": false
        , "required": [ "mint" ]
        , "properties":
          { "mint": { "$ref": "ogmios.json#/definitions/PolicyId" }
          }
        }
      , { "title": "certificate"
        , "type": "object"
        , "additionalProperties": false
        , "required": [ "certificate" ]
        , "properties":
          { "certificate": { "$ref": "ogmios.json#/definitions/Certificate" }
          }
        }
      , { "title": "withdrawal"
        , "type": "object"
        , "additionalProperties": false
        , "required": [ "withdrawal" ]
        , "properties":
          { "withdrawal": { "$ref": "ogmios.json#/definitions/RewardAccount" }
          }
        }
      ]
    }

  , "Signature":
    { "type": "string"
    , "description": "A signature coming from an Ed25519 or Ed25519-BIP32 signing key."
    , "contentEncoding": "base16"
    }

  , "Slot":
    { "type": "integer"
    , "description": "An absolute slot number."
    , "minimum": 0
    , "maximum": 18446744073709552000
    }

  , "SlotLength":
    { "type": "number"
    , "description": "A slot length, in seconds. Starting from v5.5.4, this can be a floating number. Before v5.5.4, the floating value would be rounded to the nearest second."
    }

  , "SoftwareVersion":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "appName", "number" ]
    , "properties":
      { "appName": { "type": "string" }
      , "number": { "$ref": "ogmios.json#/definitions/UInt32" }
      }
    }

  , "SoftForkRule":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "initThreshold", "minThreshold", "decrementThreshold" ]
    , "properties":
      { "initThreshold": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "minThreshold": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "decrementThreshold": { "$ref": "ogmios.json#/definitions/Ratio" }
      }
    }

  , "StakeAddress":
    { "type": "string"
    , "description": "A stake address (a.k.a reward account)"
    , "contentEncoding": "bech32"
    , "pattern": "^(stake|stake_test)1[0-9a-z]*$"
    , "examples":
      [ "stake179kzq4qulejydh045yzxwk4ksx780khkl4gdve9kzwd9vjcek9u8h"
      ]
    }

  , "StakeCredential":
    { "oneOf":
      [ { "title": "Base16"
        , "description": "A stake key or script hash in base16."
        , "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Credential"
        }
      , { "title": "Bech32"
        , "type": "string"
        , "description": "A Blake2b 28-byte digest of a verification key or script."
        , "contentEncoding": "bech32"
        , "pattern": "^(stake_vkh|script)1[0-9a-z]*$"
        , "examples":
          [ "script1dss9g887v3rdmadpq3n44d5ph3ma4aha2rtxfdsnnftykaau8x7"
          , "stake_vkh1dss9g887v3rdmadpq3n44d5ph3ma4aha2rtxfdsnnftyklueu8u"
          ]
        }
      , { "title": "Stake Address"
        , "$ref": "ogmios.json#/definitions/StakeAddress"
        }
      ]
    }

  , "SubmitTransactionErrors":
    { "type": "array"
    , "items":
      { "oneOf":
        [ { "$ref": "ogmios.json#/definitions/EraMismatch" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[invalidWitnesses]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingVkWitnesses]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingScriptWitnesses]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[scriptWitnessNotValidating]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[insufficientGenesisSignatures]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingTxMetadata]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingTxMetadataHash]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[txMetadataHashMismatch]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[badInputs]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[expiredUtxo]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[outsideOfValidityInterval]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[txTooLarge]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingAtLeastOneInputUtxo]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[invalidMetadata]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[feeTooSmall]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[valueNotConserved]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[networkMismatch]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[outputTooSmall]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[tooManyAssetsInOutput]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[addressAttributesTooLarge]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[triesToForgeAda]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[delegateNotRegistered]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[unknownOrIncompleteWithdrawals]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[stakePoolNotRegistered]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[wrongRetirementEpoch]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[wrongPoolCertificate]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[stakeKeyAlreadyRegistered]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[poolCostTooSmall]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[poolMetadataHashTooBig]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[stakeKeyNotRegistered]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[rewardAccountNotExisting]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[rewardAccountNotEmpty]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[wrongCertificateType]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[unknownGenesisKey]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[alreadyDelegating]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[insufficientFundsForMir]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[tooLateForMir]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[mirTransferNotCurrentlyAllowed]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[mirNegativeTransferNotCurrentlyAllowed]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[mirProducesNegativeUpdate]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[duplicateGenesisVrf]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[nonGenesisVoters]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[updateWrongEpoch]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[protocolVersionCannotFollow]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingRequiredRedeemers]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingRequiredDatums]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[unspendableDatums]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[extraDataMismatch]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingRequiredSignatures]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[unspendableScriptInputs]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[extraRedeemers]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingDatumHashesForInputs]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[missingCollateralInputs]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[collateralTooSmall]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[collateralIsScript]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[collateralHasNonAdaAssets]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[tooManyCollateralInputs]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[executionUnitsTooLarge]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[outsideForecast]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[validationTagMismatch]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[collectErrors]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[extraScriptWitnesses]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[mirNegativeTransfer]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[totalCollateralMismatch]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[malformedReferenceScripts]" }
        , { "$ref": "ogmios.json#/definitions/SubmitTransactionError[malformedScriptWitnesses]" }
        ]
      }
    }

  , "SubmitTransactionError[invalidWitnesses]":
    { "type": "object"
    , "title": "invalidWitnesses"
    , "additionalProperties": false
    , "required": ["invalidWitnesses"]
    , "properties":
      { "invalidWitnesses":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/VerificationKey" }
        }
      }
    }

  , "SubmitTransactionError[missingVkWitnesses]":
    { "type": "object"
    , "title": "missingVkWitnesses"
    , "additionalProperties": false
    , "required": [ "missingVkWitnesses" ]
    , "properties":
      { "missingVkWitnesses":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
        }
      }
    }

  , "SubmitTransactionError[missingScriptWitnesses]":
    { "type": "object"
    , "title": "missingScriptWitnesses"
    , "additionalProperties": false
    , "required": [ "missingScriptWitnesses" ]
    , "properties":
      { "missingScriptWitnesses":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Script" }
        }
      }
    }

  , "SubmitTransactionError[scriptWitnessNotValidating]":
    { "type": "object"
    , "title": "scriptWitnessNotValidating"
    , "additionalProperties": false
    , "required": [ "scriptWitnessNotValidating" ]
    , "properties":
      { "scriptWitnessNotValidating":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Script" }
        }
      }
    }

  , "SubmitTransactionError[insufficientGenesisSignatures]":
    { "type": "object"
    , "title": "insufficientGenesisSignatures"
    , "additionalProperties": false
    , "required": [ "insufficientGenesisSignatures" ]
    , "properties":
      { "insufficientGenesisSignatures":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
        }
      }
    }

  , "SubmitTransactionError[missingTxMetadata]":
    { "type": "object"
    , "title": "missingTxMetadata"
    , "additionalProperties": false
    , "required": [ "missingTxMetadata" ]
    , "properties":
      { "missingTxMetadata": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::AuxiliaryDataBody" }
      }
    }

  , "SubmitTransactionError[missingTxMetadataHash]":
    { "type": "object"
    , "title": "missingTxMetadataHash"
    , "additionalProperties": false
    , "required": [ "missingTxMetadataHash" ]
    , "properties":
      { "missingTxMetadataHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::AuxiliaryDataBody" }
      }
    }

  , "SubmitTransactionError[txMetadataHashMismatch]":
    { "type": "object"
    , "title": "txMetadataHashMismatch"
    , "additionalProperties": false
    , "required": [ "txMetadataHashMismatch" ]
    , "properties":
      { "txMetadataHashMismatch":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "includedHash", "expectedHash" ]
        , "properties":
          { "includedHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::AuxiliaryDataBody" }
          , "expectedHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::AuxiliaryDataBody" }
          }
        }
      }
    }

  , "SubmitTransactionError[badInputs]":
    { "type": "object"
    , "title": "badInputs"
    , "additionalProperties": false
    , "required": [ "badInputs" ]
    , "properties":
      { "badInputs":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
        }
      }
    }

  , "SubmitTransactionError[expiredUtxo]":
    { "type": "object"
    , "title": "expiredUtxo"
    , "description": "Only in Shelley. Replaced with 'outsideOfValidityInterval' since Allegra."
    , "additionalProperties": false
    , "required": [ "expiredUtxo" ]
    , "properties":
      { "expiredUtxo":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "currentSlot", "transactionTimeToLive" ]
        , "properties":
          { "currentSlot": { "$ref": "ogmios.json#/definitions/Slot" }
          , "transactionTimeToLive": { "$ref": "ogmios.json#/definitions/Slot" }
          }
        }
      }
    }

  , "SubmitTransactionError[outsideOfValidityInterval]":
    { "type": "object"
    , "title": "outsideOfValidityInterval"
    , "description": "Since Allegra. Replaces 'expiredUtxo'."
    , "additionalProperties": false
    , "required": [ "outsideOfValidityInterval" ]
    , "properties":
      { "outsideOfValidityInterval":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "currentSlot", "interval" ]
        , "properties":
          { "currentSlot": { "$ref": "ogmios.json#/definitions/Slot" }
          , "interval": { "$ref": "ogmios.json#/definitions/ValidityInterval" }
          }
        }
      }
    }

  , "SubmitTransactionError[txTooLarge]":
    { "type": "object"
    , "title": "txTooLarge"
    , "additionalProperties": false
    , "required": [ "txTooLarge" ]
    , "properties":
      { "txTooLarge":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "maximumSize", "actualSize" ]
        , "properties":
          { "maximumSize": { "$ref": "ogmios.json#/definitions/Int64" }
          , "actualSize": { "$ref": "ogmios.json#/definitions/Int64" }
          }
        }
      }
    }

  , "SubmitTransactionError[missingAtLeastOneInputUtxo]":
    { "type": "object"
    , "title": "missingAtLeastOneInputUtxo"
    , "additionalProperties": false
    , "required": [ "missingAtLeastOneInputUtxo" ]
    , "properties":
      { "missingAtLeastOneInputUtxo":
        { "type": "null"
        }
      }
    }

  , "SubmitTransactionError[invalidMetadata]":
    { "type": "object"
    , "title": "invalidMetadata"
    , "additionalProperties": false
    , "required": [ "invalidMetadata" ]
    , "properties":
      { "invalidMetadata":
        { "type": "null"
        }
      }
    }

  , "SubmitTransactionError[feeTooSmall]":
    { "type": "object"
    , "title": "feeTooSmall"
    , "additionalProperties": false
    , "required": [ "feeTooSmall" ]
    , "properties":
      { "feeTooSmall":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "requiredFee", "actualFee" ]
        , "properties":
          { "requiredFee": { "$ref": "ogmios.json#/definitions/Lovelace" }
          , "actualFee": { "$ref": "ogmios.json#/definitions/Lovelace" }
          }
        }
      }
    }

  , "SubmitTransactionError[valueNotConserved]":
    { "type": "object"
    , "title": "valueNotConserved"
    , "description": "Returns 'Value' since Mary, and 'LovelaceDelta' before."
    , "additionalProperties": false
    , "required": [ "valueNotConserved" ]
    , "properties":
      { "valueNotConserved":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "consumed", "produced" ]
        , "properties":
          { "consumed":
            { "oneOf":
                [ { "$ref": "ogmios.json#/definitions/LovelaceDelta" }
                , { "$ref": "ogmios.json#/definitions/Value" }
                ]
            }
          , "produced":
            { "oneOf":
                [ { "$ref": "ogmios.json#/definitions/LovelaceDelta" }
                , { "$ref": "ogmios.json#/definitions/Value" }
                ]
            }
          }
        }
      }
    }

  , "SubmitTransactionError[networkMismatch]":
    { "type": "object"
    , "title": "networkMismatch"
    , "additionalProperties": false
    , "required": [ "networkMismatch" ]
    , "properties":
      { "networkMismatch":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "expectedNetwork", "invalidEntities" ]
        , "properties":
          { "expectedNetwork": { "$ref": "ogmios.json#/definitions/Network" }
          , "invalidEntities":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/InvalidEntity" }
            }
          }
        }
      }
    }

  , "SubmitTransactionError[outputTooSmall]":
    { "type": "object"
    , "title": "outputTooSmall"
    , "additionalProperties": false
    , "required": [ "outputTooSmall" ]
    , "properties":
      { "outputTooSmall":
        { "type": "array"
        , "items":
          { "oneOf":
            [ { "$ref": "ogmios.json#/definitions/TxOut" }
            , { "type": "object"
              , "additionalProperties": false
              , "required": [ "output", "minimumRequiredValue" ]
              , "properties":
                { "output": { "$ref": "ogmios.json#/definitions/TxOut" }
                , "minimumRequiredValue": { "$ref": "ogmios.json#/definitions/Lovelace" }
                }
              }
            ]
          }
        }
      }
    }

  , "SubmitTransactionError[tooManyAssetsInOutput]":
    { "type": "object"
    , "title": "tooManyAssetsInOutput"
    , "description": "Only since Mary."
    , "additionalProperties": false
    , "required": [ "tooManyAssetsInOutput" ]
    , "properties":
      { "tooManyAssetsInOutput":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/TxOut" }
        }
      }
    }

  , "SubmitTransactionError[addressAttributesTooLarge]":
    { "type": "object"
    , "title": "addressAttributesTooLarge"
    , "additionalProperties": false
    , "required": [ "addressAttributesTooLarge" ]
    , "properties":
      { "addressAttributesTooLarge":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Address" }
        }
      }
    }

  , "SubmitTransactionError[triesToForgeAda]":
    { "type": "object"
    , "title": "triesToForgeAda"
    , "additionalProperties": false
    , "required": [ "triesToForgeAda" ]
    , "properties":
      { "triesToForgeAda":
        { "type": "null"
        }
      }
    , "description": "Only since Mary."
    }

  , "SubmitTransactionError[delegateNotRegistered]":
    { "type": "object"
    , "title": "delegateNotRegistered"
    , "additionalProperties": false
    , "required": [ "delegateNotRegistered" ]
    , "properties":
      { "delegateNotRegistered": { "$ref": "ogmios.json#/definitions/StakePoolId" }
      }
    }

  , "SubmitTransactionError[unknownOrIncompleteWithdrawals]":
    { "type": "object"
    , "title": "unknownOrIncompleteWithdrawals"
    , "additionalProperties": false
    , "required": [ "unknownOrIncompleteWithdrawals" ]
    , "properties":
      { "unknownOrIncompleteWithdrawals": { "$ref": "ogmios.json#/definitions/Withdrawals" }
      }
    }

  , "SubmitTransactionError[stakePoolNotRegistered]":
    { "type": "object"
    , "title": "stakePoolNotRegistered"
    , "additionalProperties": false
    , "required": [ "stakePoolNotRegistered" ]
    , "properties":
      { "stakePoolNotRegistered": { "$ref": "ogmios.json#/definitions/StakePoolId" }
      }
    }

  , "SubmitTransactionError[wrongRetirementEpoch]":
    { "type": "object"
    , "title": "wrongRetirementEpoch"
    , "additionalProperties": false
    , "required": [ "wrongRetirementEpoch" ]
    , "properties":
      { "wrongRetirementEpoch":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "currentEpoch", "requestedEpoch", "firstUnreachableEpoch" ]
        , "properties":
          { "currentEpoch": { "$ref": "ogmios.json#/definitions/Epoch" }
          , "requestedEpoch": { "$ref": "ogmios.json#/definitions/Epoch" }
          , "firstUnreachableEpoch": { "$ref": "ogmios.json#/definitions/Epoch" }
          }
        }
      }
    }

  , "SubmitTransactionError[wrongPoolCertificate]":
    { "type": "object"
    , "title": "wrongPoolCertificate"
    , "additionalProperties": false
    , "required": ["wrongPoolCertificate"]
    , "properties":
      { "wrongPoolCertificate": { "$ref": "ogmios.json#/definitions/UInt8" }
      }
    }

  , "SubmitTransactionError[stakeKeyAlreadyRegistered]":
    { "type": "object"
    , "title": "stakeKeyAlreadyRegistered"
    , "additionalProperties": false
    , "required": [ "stakeKeyAlreadyRegistered" ]
    , "properties":
      { "stakeKeyAlreadyRegistered": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
      }
    }

  , "SubmitTransactionError[poolCostTooSmall]":
    { "type": "object"
    , "title": "poolCostTooSmall"
    , "additionalProperties": false
    , "required": [ "poolCostTooSmall" ]
    , "properties":
      { "poolCostTooSmall":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "minimumCost" ]
        , "properties":
          { "minimumCost": { "$ref": "ogmios.json#/definitions/Lovelace" }
          }
        }
      }
    }

  , "SubmitTransactionError[poolMetadataHashTooBig]":
    { "type": "object"
    , "title": "poolMetadataHashTooBig"
    , "additionalProperties": false
    , "required": [ "poolMetadataHashTooBig" ]
    , "properties":
      { "poolMetadataHashTooBig":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "poolId", "measuredSize" ]
        , "properties":
          { "poolId": { "$ref": "ogmios.json#/definitions/StakePoolId" }
          , "measuredSize": { "$ref": "ogmios.json#/definitions/Int64" }
          }
        }
      }
    }

  , "SubmitTransactionError[stakeKeyNotRegistered]":
    { "type": "object"
    , "title": "stakeKeyNotRegistered"
    , "additionalProperties": false
    , "required": [ "stakeKeyNotRegistered" ]
    , "properties":
      { "stakeKeyNotRegistered": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
      }
    }

  , "SubmitTransactionError[rewardAccountNotExisting]":
    { "type": "object"
    , "title": "rewardAccountNotExisting"
    , "additionalProperties": false
    , "required": [ "rewardAccountNotExisting" ]
    , "properties":
      { "rewardAccountNotExisting":
        { "type": "null"
        }
      }
    }

  , "SubmitTransactionError[rewardAccountNotEmpty]":
    { "type": "object"
    , "title": "rewardAccountNotEmpty"
    , "additionalProperties": false
    , "required": [ "rewardAccountNotEmpty" ]
    , "properties":
      { "rewardAccountNotEmpty":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "balance" ]
        , "properties":
          { "balance": { "$ref": "ogmios.json#/definitions/Lovelace" }
          }
        }
      }
    }

  , "SubmitTransactionError[wrongCertificateType]":
    { "type": "object"
    , "title": "wrongCertificateType"
    , "additionalProperties": false
    , "required": [ "wrongCertificateType" ]
    , "properties":
      { "wrongCertificateType":
        { "type": "null"
        }
      }
    }

  , "SubmitTransactionError[unknownGenesisKey]":
    { "type": "object"
    , "title": "unknownGenesisKey"
    , "additionalProperties": false
    , "required": [ "unknownGenesisKey" ]
    , "properties":
      { "unknownGenesisKey": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
      }
    }

  , "SubmitTransactionError[alreadyDelegating]":
    { "type": "object"
    , "title": "alreadyDelegating"
    , "additionalProperties": false
    , "required": [ "alreadyDelegating" ]
    , "properties":
      { "alreadyDelegating": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
      }
    }

  , "SubmitTransactionError[insufficientFundsForMir]":
    { "type": "object"
    , "title": "insufficientFundsForMir"
    , "additionalProperties": false
    , "required": [ "insufficientFundsForMir" ]
    , "properties":
      { "insufficientFundsForMir":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "rewardSource", "sourceSize", "requestedAmount" ]
        , "properties":
          { "rewardSource": { "$ref": "ogmios.json#/definitions/RewardPot" }
          , "sourceSize": { "$ref": "ogmios.json#/definitions/Lovelace" }
          , "requestedAmount": { "$ref": "ogmios.json#/definitions/Lovelace" }
          }
        }
      }
    }

  , "SubmitTransactionError[tooLateForMir]":
    { "type": "object"
    , "title": "tooLateForMir"
    , "additionalProperties": false
    , "required": [ "tooLateForMir" ]
    , "properties":
      { "tooLateForMir":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "currentSlot", "lastAllowedSlot" ]
        , "properties":
          { "currentSlot": { "$ref": "ogmios.json#/definitions/Slot" }
          , "lastAllowedSlot": { "$ref": "ogmios.json#/definitions/Slot" }
          }
        }
      }
    }

  , "SubmitTransactionError[mirTransferNotCurrentlyAllowed]":
    { "type": "object"
    , "title": "mirTransferNotCurrentlyAllowed"
    , "additionalProperties": false
    , "required": [ "mirTransferNotCurrentlyAllowed" ]
    , "properties":
      { "mirTransferNotCurrentlyAllowed":
        { "type": "null"
        }
      }
    }

  , "SubmitTransactionError[mirNegativeTransferNotCurrentlyAllowed]":
    { "type": "object"
    , "title": "mirNegativeTransferNotCurrentlyAllowed"
    , "additionalProperties": false
    , "required": [ "mirNegativeTransferNotCurrentlyAllowed" ]
    , "properties":
      { "mirNegativeTransferNotCurrentlyAllowed":
        { "type": "null"
        }
      }
    }

  , "SubmitTransactionError[mirProducesNegativeUpdate]":
    { "type": "object"
    , "title": "mirProducesNegativeUpdate"
    , "additionalProperties": false
    , "required": [ "mirProducesNegativeUpdate" ]
    , "properties":
      { "mirProducesNegativeUpdate":
        { "type": "null"
        }
      }
    }

  , "SubmitTransactionError[mirNegativeTransfer]":
    { "type": "object"
    , "title": "mirNegativeTransfer"
    , "additionalProperties": false
    , "required": [ "mirNegativeTransfer" ]
    , "properties":
      { "mirNegativeTransfer":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "rewardSource", "attemptedTransfer" ]
        , "properties":
          { "rewardSource": { "$ref": "ogmios.json#/definitions/RewardPot" }
          , "attemptedTransfer": { "$ref": "ogmios.json#/definitions/Lovelace" }
          }
        }
      }
    }

  , "SubmitTransactionError[duplicateGenesisVrf]":
    { "type": "object"
    , "title": "duplicateGenesisVrf"
    , "additionalProperties": false
    , "required": [ "duplicateGenesisVrf" ]
    , "properties":
      { "duplicateGenesisVrf": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VrfVerificationKey" }
      }
    }

  , "SubmitTransactionError[nonGenesisVoters]":
    { "type": "object"
    , "title": "nonGenesisVoters"
    , "additionalProperties": false
    , "required": [ "nonGenesisVoters" ]
    , "properties":
      { "nonGenesisVoters":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "currentlyVoting", "shouldBeVoting" ]
        , "properties":
          { "currentlyVoting":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
            }
          , "shouldBeVoting":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
            }
          }
        }
      }
    }

  , "SubmitTransactionError[updateWrongEpoch]":
    { "type": "object"
    , "title": "updateWrongEpoch"
    , "additionalProperties": false
    , "required": [ "updateWrongEpoch" ]
    , "properties":
      { "updateWrongEpoch":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "currentEpoch", "requestedEpoch", "votingPeriod" ]
        , "properties":
          { "currentEpoch": { "$ref": "ogmios.json#/definitions/Epoch" }
          , "requestedEpoch": { "$ref": "ogmios.json#/definitions/Epoch" }
          , "votingPeriod": { "$ref": "ogmios.json#/definitions/VotingPeriod" }
          }
        }
      }
    }

  , "SubmitTransactionError[protocolVersionCannotFollow]":
    { "type": "object"
    , "title": "protocolVersionCannotFollow"
    , "additionalProperties": false
    , "required": [ "protocolVersionCannotFollow" ]
    , "properties":
      { "protocolVersionCannotFollow": { "$ref": "ogmios.json#/definitions/ProtocolVersion" }
      }
    }

  , "SubmitTransactionError[missingRequiredRedeemers]":
    { "type": "object"
    , "title": "missingRequiredRedeemers"
    , "additionalProperties": false
    , "required": [ "missingRequiredRedeemers" ]
    , "properties":
      { "missingRequiredRedeemers":
        { "type": "object"
        , "additionalProperties": false
        , "required": ["missing"]
        , "properties":
          { "missing":
            { "type": "array"
            , "items":
              { "type": "object"
              , "additionalProperties": { "$ref": "ogmios.json#/definitions/ScriptPurpose" }
              , "propertyNames": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Script" }
              }
            }
          }
        }
      }
    }

  , "SubmitTransactionError[missingRequiredDatums]":
    { "type": "object"
    , "title": "missingRequiredDatums"
    , "additionalProperties": false
    , "required": [ "missingRequiredDatums" ]
    , "properties":
      { "missingRequiredDatums":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "missing" ]
        , "properties":
          { "provided":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Datum" }
            }
          , "missing":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Datum" }
            }
          }
        }
      }
    }

  , "SubmitTransactionError[unspendableDatums]":
    { "type": "object"
    , "title": "unspendableDatums"
    , "additionalProperties": false
    , "required": [ "unspendableDatums" ]
    , "properties":
      { "unspendableDatums":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "nonSpendable", "acceptable" ]
        , "properties":
          { "nonSpendable":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Datum" }
            }
          , "acceptable":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Datum" }
            }
          }
        }
      }
    }

  , "SubmitTransactionError[extraDataMismatch]":
    { "type": "object"
    , "title": "extraDataMismatch"
    , "additionalProperties": false
    , "required": [ "extraDataMismatch" ]
    , "properties":
      { "extraDataMismatch":
        { "type": "object"
        , "additionalProperties": false
        , "properties":
          { "provided":
            { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::ScriptIntegrity"
            }
          , "inferredFromParameters":
            { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::ScriptIntegrity"
            }
          }
        }
      }
    }

  , "SubmitTransactionError[missingRequiredSignatures]":
    { "type": "object"
    , "title": "missingRequiredSignatures"
    , "additionalProperties": false
    , "required": [ "missingRequiredSignatures" ]
    , "properties":
      { "missingRequiredSignatures":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
        }
      }
    }

  , "SubmitTransactionError[unspendableScriptInputs]":
    { "type": "object"
    , "title": "unspendableScriptInputs"
    , "additionalProperties": false
    , "required": [ "unspendableScriptInputs" ]
    , "properties":
      { "unspendableScriptInputs":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
        }
      }
    }

  , "SubmitTransactionError[extraRedeemers]":
    { "type": "object"
    , "title": "extraRedeemers"
    , "additionalProperties": false
    , "required": [ "extraRedeemers" ]
    , "properties":
      { "extraRedeemers":
        { "type": "array"
        , "items": { "type": "string" }
        }
      }
    }

  , "SubmitTransactionError[missingDatumHashesForInputs]":
    { "type": "object"
    , "title": "missingDatumHashesForInputs"
    , "additionalProperties": false
    , "required": [ "missingDatumHashesForInputs" ]
    , "properties":
      { "missingDatumHashesForInputs":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
        }
      }
    }

  , "SubmitTransactionError[missingCollateralInputs]":
    { "type": "object"
    , "title": "missingCollateralInputs"
    , "additionalProperties": false
    , "required": [ "missingCollateralInputs" ]
    , "properties":
      { "missingCollateralInputs":
        { "type": "null"
        }
      }
    , "description": "Only since Alonzo."
    }

  , "SubmitTransactionError[collateralTooSmall]":
    { "type": "object"
    , "title": "collateralTooSmall"
    , "additionalProperties": false
    , "required": [ "collateralTooSmall" ]
    , "properties":
      { "collateralTooSmall":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "requiredCollateral", "actualCollateral" ]
        , "properties":
          { "requiredCollateral": { "$ref": "ogmios.json#/definitions/Lovelace" }
          , "actualCollateral": { "$ref": "ogmios.json#/definitions/Lovelace" }
          }
        }
      }
    }

  , "SubmitTransactionError[collateralIsScript]":
    { "type": "object"
    , "title": "collateralIsScript"
    , "additionalProperties": false
    , "required": [ "collateralIsScript" ]
    , "properties":
      { "collateralIsScript": { "$ref": "ogmios.json#/definitions/Utxo" }
      }
    }

  , "SubmitTransactionError[collateralHasNonAdaAssets]":
    { "type": "object"
    , "title": "collateralHasNonAdaAssets"
    , "additionalProperties": false
    , "required": [ "collateralHasNonAdaAssets" ]
    , "properties":
      { "collateralHasNonAdaAssets": { "$ref": "ogmios.json#/definitions/Value" }
      }
    }

  , "SubmitTransactionError[tooManyCollateralInputs]":
    { "type": "object"
    , "title": "tooManyCollateralInputs"
    , "additionalProperties": false
    , "required": [ "tooManyCollateralInputs" ]
    , "properties":
      { "tooManyCollateralInputs":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "maximumCollateralInputs", "actualCollateralInputs" ]
        , "properties":
          { "maximumCollateralInputs": { "$ref": "ogmios.json#/definitions/UInt64" }
          , "actualCollateralInputs": { "$ref": "ogmios.json#/definitions/UInt64" }
          }
        }
      }
    }

  , "SubmitTransactionError[executionUnitsTooLarge]":
    { "type": "object"
    , "title": "executionUnitsTooLarge"
    , "additionalProperties": false
    , "required": [ "executionUnitsTooLarge" ]
    , "properties":
      { "executionUnitsTooLarge":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "maximumExecutionUnits", "actualExecutionUnits" ]
        , "properties":
          { "maximumExecutionUnits": { "$ref": "ogmios.json#/definitions/ExUnits" }
          , "actualExecutionUnits": { "$ref": "ogmios.json#/definitions/ExUnits" }
          }
        }
      }
    }

  , "SubmitTransactionError[outsideForecast]":
    { "type": "object"
    , "title": "outsideForecast"
    , "additionalProperties": false
    , "required": [ "outsideForecast" ]
    , "properties":
      { "outsideForecast": { "$ref": "ogmios.json#/definitions/Slot" }
      }
    }

  , "SubmitTransactionError[validationTagMismatch]":
    { "type": "object"
    , "title": "validationTagMismatch"
    , "additionalProperties": false
    , "required": [ "validationTagMismatch" ]
    , "properties":
      { "validationTagMismatch":
        { "type": "null"
        }
      }
    , "description": "Only since Alonzo."
    }

  , "SubmitTransactionError[collectErrors]":
    { "type": "object"
    , "title": "collectErrors"
    , "additionalProperties": false
    , "required": [ "collectErrors" ]
    , "properties":
      { "collectErrors":
        { "type": "array"
        , "items":
          { "oneOf":
            [ { "type": "object"
              , "title": "noRedeemer"
              , "additionalProperties": false
              , "required": [ "noRedeemer" ]
              , "properties":
                { "noRedeemer": { "$ref": "ogmios.json#/definitions/ScriptPurpose" }
                }
              }
            , { "type": "object"
              , "title": "noWitness"
              , "additionalProperties": false
              , "required": [ "noWitness" ]
              , "properties":
                { "noWitness": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Script" }
                }
              }
            , { "type": "object"
              , "title": "noCostModel"
              , "additionalProperties": false
              , "required": [ "noCostModel" ]
              , "properties":
                { "noCostModel": { "$ref": "ogmios.json#/definitions/Language" }
                }
              }
            , { "type": "object"
              , "title": "badTranslation"
              , "additionalProperties": false
              , "required": [ "badTranslation" ]
              , "properties":
                { "badTranslation":
                  { "type": "string"
                  , "description": "An (hopefully) informative error about the transaction execution failure."
                  }
                }
              }
            ]
          }
        }
      }
    }

  , "SubmitTransactionError[extraScriptWitnesses]":
    { "type": "object"
    , "title": "extraScriptWitnesses"
    , "additionalProperties": false
    , "required": ["extraScriptWitnesses"]
    , "properties":
      { "extraScriptWitnesses":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Script" }
        }
      }
    }

  , "SubmitTransactionError[totalCollateralMismatch]":
    { "type": "object"
    , "title": "totalCollateralMismatch"
    , "additionalProperties": false
    , "required": ["totalCollateralMismatch"]
    , "properties":
      { "totalCollateralMismatch":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "computedFromDelta", "declaredInField" ]
        , "properties":
          { "computedFromDelta": { "$ref": "ogmios.json#/definitions/Lovelace" }
          , "declaredInField": { "$ref": "ogmios.json#/definitions/Lovelace" }
          }
        }
      }
    }

  , "SubmitTransactionError[malformedReferenceScripts]":
    { "type": "object"
    , "title": "malformedReferenceScripts"
    , "additionalProperties": false
    , "required": ["malformedReferenceScripts"]
    , "properties":
      { "malformedReferenceScripts":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Script" }
        }
      }
    }

  , "SubmitTransactionError[malformedScriptWitnesses]":
    { "type": "object"
    , "title": "malformedScriptWitnesses"
    , "additionalProperties": false
    , "required": ["malformedScriptWitnesses"]
    , "properties":
      { "malformedScriptWitnesses":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Script" }
        }
      }
    }

  , "Tip":
    { "type": "object"
    , "title": "tip"
    , "additionalProperties": false
    , "required": [ "slot", "hash", "blockNo" ]
    , "properties":
      { "slot": { "$ref": "ogmios.json#/definitions/Slot" }
      , "hash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].header" }
      , "blockNo": { "$ref": "ogmios.json#/definitions/BlockNo" }
      }
    }

  , "TipOrOrigin":
    { "oneOf":
      [ { "$ref": "ogmios.json#/definitions/Tip" }
      , { "$ref": "ogmios.json#/definitions/Origin" }
      ]
    }

  , "Tx[Byron]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "id", "body", "witness", "raw" ]
    , "properties":
      { "id": { "$ref": "ogmios.json#/definitions/TxId" }
      , "body":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "inputs", "outputs" ]
        , "properties":
          { "inputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
            }
          , "outputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxOut" }
            }
          }
        }
      , "witness":
        { "type": "array"
        , "items": { "$ref": "ogmios.json#/definitions/TxWitness" }
        }
      , "raw":
        { "type": "string"
        , "contentEncoding": "base16"
        , "description": "The raw serialized transaction, as found on-chain."
        }
      }
    }

  , "Tx[Shelley]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "id", "body", "witness", "raw" ]
    , "properties":
      { "id": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].body" }
      , "body":
        { "type": "object"
        , "additionalProperties": false
        , "required": ["inputs", "outputs", "fee", "timeToLive"]
        , "properties":
          { "inputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
            }
          , "outputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxOut" }
            }
          , "certificates":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Certificate" }
            }
          , "withdrawals": { "$ref": "ogmios.json#/definitions/Withdrawals" }
          , "fee": { "$ref": "ogmios.json#/definitions/Lovelace" }
          , "timeToLive": { "$ref": "ogmios.json#/definitions/Slot" }
          , "update": { "$ref": "ogmios.json#/definitions/Update[Shelley]" }
          }
        }
      , "witness":
        { "type": "object"
        , "additionalProperties": false
        , "properties":
          { "signatures":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Signature" }
            }
          , "scripts":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Script" }
            }
          , "bootstrap":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/BootstrapWitness" }
            }
          }
        }
      , "metadata": { "$ref": "ogmios.json#/definitions/AuxiliaryData" }
      , "raw":
        { "type": "string"
        , "contentEncoding": "base16"
        , "description": "The raw serialized transaction, as found on-chain."
        }
      }
    }

  , "Tx[Allegra]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "id", "body", "witness", "raw" ]
    , "properties":
      { "id": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].body" }
      , "body":
        { "type": "object"
        , "additionalProperties": false
        , "required": ["inputs", "outputs", "fee", "validityInterval"]
        , "properties":
          { "inputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
            }
          , "outputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxOut" }
            }
          , "certificates":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Certificate" }
            }
          , "withdrawals": { "$ref": "ogmios.json#/definitions/Withdrawals" }
          , "fee": { "$ref": "ogmios.json#/definitions/Lovelace" }
          , "validityInterval": { "$ref": "ogmios.json#/definitions/ValidityInterval" }
          , "update": { "$ref": "ogmios.json#/definitions/Update[Shelley]" }
          }
        }
      , "witness":
        { "type": "object"
        , "additionalProperties": false
        , "properties":
          { "signatures":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Signature" }
            }
          , "scripts":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Script" }
            }
          , "bootstrap":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/BootstrapWitness" }
            }
          }
        }
      , "metadata":
        { "$ref": "ogmios.json#/definitions/AuxiliaryData" }
      , "raw":
        { "type": "string"
        , "contentEncoding": "base16"
        , "description": "The raw serialized transaction, as found on-chain."
        }
      }
    }

  , "Tx[Mary]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "id", "body", "witness", "raw" ]
    , "properties":
      { "id": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].body" }
      , "body":
        { "type": "object"
        , "additionalProperties": false
        , "required": ["inputs", "outputs", "fee", "validityInterval"]
        , "properties":
          { "inputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
            }
          , "outputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxOut" }
            }
          , "certificates":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Certificate" }
            }
          , "withdrawals": { "$ref": "ogmios.json#/definitions/Withdrawals" }
          , "fee": { "$ref": "ogmios.json#/definitions/Lovelace" }
          , "validityInterval": { "$ref": "ogmios.json#/definitions/ValidityInterval" }
          , "update": { "$ref": "ogmios.json#/definitions/Update[Shelley]" }
          , "mint": { "$ref": "ogmios.json#/definitions/Value" }
          }
        }
      , "witness":
        { "type": "object"
        , "additionalProperties": false
        , "properties":
          { "signatures":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Signature" }
            }
          , "scripts":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Script" }
            }
          , "bootstrap":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/BootstrapWitness" }
            }
          }
        }
      , "metadata": { "$ref": "ogmios.json#/definitions/AuxiliaryData" }
      , "raw":
        { "type": "string"
        , "contentEncoding": "base16"
        , "description": "The raw serialized transaction, as found on-chain."
        }
      }
    }

  , "Tx[Alonzo]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "id", "body", "witness", "inputSource", "raw" ]
    , "properties":
      { "id": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].body" }
      , "inputSource":
        { "type": "string"
        , "enum":
          [ "inputs"
          , "collaterals"
          ]
        }
      , "body":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "inputs", "outputs", "fee", "validityInterval" ]
        , "properties":
          { "inputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
            }
          , "collaterals":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
            }
          , "outputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxOut" }
            }
          , "certificates":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Certificate" }
            }
          , "withdrawals":
            { "$ref": "ogmios.json#/definitions/Withdrawals"
            }
          , "fee":
            { "$ref": "ogmios.json#/definitions/Lovelace"
            }
          , "validityInterval":
            { "$ref": "ogmios.json#/definitions/ValidityInterval"
            }
          , "update":
            { "$ref": "ogmios.json#/definitions/Update[Alonzo]"
            }
          , "mint":
            { "$ref": "ogmios.json#/definitions/Value"
            }
          , "network":
            { "$ref": "ogmios.json#/definitions/Network"
            }
          , "scriptIntegrityHash":
            { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::ScriptIntegrity"
            }
          , "requiredExtraSignatures":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
            }
          }
        }
      , "witness":
        { "type": "object"
        , "additionalProperties": false
        , "properties":
          { "signatures":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Signature" }
            }
          , "scripts":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Script" }
            }
          , "bootstrap":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/BootstrapWitness" }
            }
          , "datums":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Datum" }
            }
          , "redeemers":
            { "type": "object"
            , "propertyNames": { "$ref": "ogmios.json#/definitions/RedeemerPointer" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Redeemer" }
            }
          }
        }
      , "metadata":
        { "$ref": "ogmios.json#/definitions/AuxiliaryData"
        }
      , "raw":
        { "type": "string"
        , "contentEncoding": "base16"
        , "description": "The raw serialized transaction, as found on-chain."
        }
      }
    }

  , "Tx[Babbage]":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "id", "body", "witness", "inputSource", "raw" ]
    , "properties":
      { "id": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Block[*].body" }
      , "inputSource":
        { "type": "string"
        , "enum":
          [ "inputs"
          , "collaterals"
          ]
        }
      , "body":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "inputs", "outputs", "fee", "validityInterval" ]
        , "properties":
          { "inputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
            }
          , "references":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
            }
          , "collaterals":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxIn" }
            }
          , "collateralReturn":
            { "$ref": "ogmios.json#/definitions/TxOut"
            }
          , "totalCollateral":
            { "$ref": "ogmios.json#/definitions/Lovelace"
            }
          , "outputs":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/TxOut" }
            }
          , "certificates":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Certificate" }
            }
          , "withdrawals":
            { "$ref": "ogmios.json#/definitions/Withdrawals"
            }
          , "fee":
            { "$ref": "ogmios.json#/definitions/Lovelace"
            }
          , "validityInterval":
            { "$ref": "ogmios.json#/definitions/ValidityInterval"
            }
          , "update":
            { "$ref": "ogmios.json#/definitions/Update[Babbage]"
            }
          , "mint":
            { "$ref": "ogmios.json#/definitions/Value"
            }
          , "network":
            { "$ref": "ogmios.json#/definitions/Network"
            }
          , "scriptIntegrityHash":
            { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::ScriptIntegrity"
            }
          , "requiredExtraSignatures":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
            }
          }
        }
      , "witness":
        { "type": "object"
        , "additionalProperties": false
        , "properties":
          { "signatures":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Signature" }
            }
          , "scripts":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Script" }
            }
          , "bootstrap":
            { "type": "array"
            , "items": { "$ref": "ogmios.json#/definitions/BootstrapWitness" }
            }
          , "datums":
            { "type": "object"
            , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Datum" }
            }
          , "redeemers":
            { "type": "object"
            , "propertyNames": { "$ref": "ogmios.json#/definitions/RedeemerPointer" }
            , "additionalProperties": { "$ref": "ogmios.json#/definitions/Redeemer" }
            }
          }
        }
      , "metadata":
        { "$ref": "ogmios.json#/definitions/AuxiliaryData"
        }
      , "raw":
        { "type": "string"
        , "contentEncoding": "base16"
        , "description": "The raw serialized transaction, as found on-chain."
        }
      }
    }

  , "TxFeePolicy":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "coefficient", "constant" ]
    , "properties":
      { "coefficient": { "$ref": "ogmios.json#/definitions/Ratio" }
      , "constant": { "type": "number" }
      }
    }

  , "TxId":
    { "type": "string"
    , "description": "A Blake2b 32-byte digest of a transaction body, CBOR-encoded."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    }

  , "TxIn":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "txId", "index" ]
    , "properties":
      { "txId": { "$ref": "ogmios.json#/definitions/TxId" }
      , "index":
        { "$ref": "ogmios.json#/definitions/UInt32"
        , "minimum": 0
        }
      }
    }

  , "TxOut":
    { "type": "object"
    , "description": "A transaction output. Since Mary, 'value' always return a multi-asset value. Since Alonzo, 'datumHash' is always present (albeit sometimes 'null'). Since Babbage, 'datum' & 'script' are always present (albeit sometimes 'null')."
    , "examples":
      [ { "address": "addr_test1qz66ue36465w2qq40005h2hadad6pnjht8mu6sgplsfj74qdjnshguewlx4ww0eet26y2pal4xpav5prcydf28cvxtjqx46x7f"
        , "value":
          { "coins": 2
          , "assets":
            { "3542acb3a64d80c29302260d62c3b87a742ad14abf855ebc6733081e": 42
            , "b5ae663aaea8e500157bdf4baafd6f5ba0ce5759f7cd4101fc132f54.706174617465": 1337
            }
          }
        , "datumHash": null
        , "datum": null
        , "script": null
        }
      ]
    , "additionalProperties": false
    , "required": [ "address", "value" ]
    , "properties":
      { "address": { "$ref": "ogmios.json#/definitions/Address" }
      , "value": { "$ref": "ogmios.json#/definitions/Value" }
      , "datumHash": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::Datum" }
      , "datum": { "$ref": "ogmios.json#/definitions/Datum" }
      , "script": { "$ref": "ogmios.json#/definitions/Script" }
      }
    }

  , "TxWitness":
    { "type": "object"
    , "oneOf":
      [ { "additionalProperties": false
        , "title": "witnessVk"
        , "required": [ "witnessVk" ]
        , "properties":
          { "witnessVk":
            { "type": "object"
            , "additionalProperties": false
            , "required": [ "key", "signature" ]
            , "properties":
              { "key": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
              , "signature": { "$ref": "ogmios.json#/definitions/Signature" }
              }
            }
          }
        }
      , { "additionalProperties": false
        , "title": "redeemWitness"
        , "required": [ "redeemWitness" ]
        , "properties":
          { "redeemWitness":
            { "type": "object"
            , "additionalProperties": false
            , "required": [ "key", "signature" ]
            , "properties":
              { "key": { "$ref": "ogmios.json#/definitions/VerificationKey" }
              , "signature": { "$ref": "ogmios.json#/definitions/Signature" }
              }
            }
          }
        }
      ]
    }

  , "UInt8":
    { "type": "integer"
    , "minimum": 0
    , "maximum": 255
    }

  , "UInt32":
    { "type": "integer"
    , "minimum": 0
    , "maximum": 4294967295
    }

  , "UInt64":
    { "type": "integer"
    , "minimum": 0
    , "maximum": 18446744073709552999
    }

  , "Update[Shelley]":
    { "type": "object"
    , "title": "UpdateProposal[Shelley]"
    , "additionalProperties": false
    , "required": ["proposal", "epoch"]
    , "properties":
      { "epoch": { "$ref": "ogmios.json#/definitions/Epoch" }
      , "proposal":
        { "type": "object"
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/ProtocolParameters[Shelley]" }
        }
      }
    }

  , "Update[Alonzo]":
    { "type": "object"
    , "title": "UpdateProposal[Alonzo]"
    , "additionalProperties": false
    , "required": ["proposal", "epoch"]
    , "properties":
      { "epoch": { "$ref": "ogmios.json#/definitions/Epoch" }
      , "proposal":
        { "type": "object"
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/ProtocolParameters[Alonzo]" }
        }
      }
    }

  , "Update[Babbage]":
    { "type": "object"
    , "title": "UpdateProposal[Babbage]"
    , "additionalProperties": false
    , "required": ["proposal", "epoch"]
    , "properties":
      { "epoch": { "$ref": "ogmios.json#/definitions/Epoch" }
      , "proposal":
        { "type": "object"
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/ProtocolParameters[Babbage]" }
        }
      }
    }

  , "UtcTime":
    { "type": "string"
    , "format": "date-time"
    , "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.?[0-9]*Z?"
    }

  , "Utxo":
    { "type": "array"
    , "additionalItems": false
    , "items":
      { "type": "array"
      , "additionalItems": false
      , "minItems": 2
      , "maxItems": 2
      , "items":
        [ { "$ref": "ogmios.json#/definitions/TxIn" }
        , { "$ref": "ogmios.json#/definitions/TxOut" }
        ]
      }
    }

  , "ValidityInterval":
    { "type": "object"
    , "additionalProperties": false
    , "properties":
      { "invalidBefore": { "$ref": "ogmios.json#/definitions/Slot" }
      , "invalidHereafter": { "$ref": "ogmios.json#/definitions/Slot" }
      }
    }

  , "Value":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "coins" ]
    , "properties":
      { "coins": { "$ref": "ogmios.json#/definitions/Lovelace" }
      , "assets":
        { "type": "object"
        , "propertyNames":
          { "pattern": "^[0-9a-z]{56}(.[0-9a-z]{1,64})?$"
          , "description": "A policy id with an (optional) asset name, dot-separated. Another way to visualize the regular expression given as pattern is through the following diagram:\n\n<pre>   ┏━━━━━━━━━━━┓ ╭───╮ ┏━━━━━━━━━━━━┓     \n╾┬─┫ POLICY_ID ┣─┤ . ├─┫ ASSET_NAME ┣─────┬╼\n │ ┗━━━━━━━━━━━┛ ╰───╯ ┗━━━━━━━━━━━━┛     │\n │ ┏━━━━━━━━━━━┓                          │\n └─┫ POLICY_ID ┣──────────────────────────┘\n   ┗━━━━━━━━━━━┛\n</pre>\nThe `POLICY_ID` and `ASSET_NAME` are both encoded in **base16** and are exactly 56 characters and at most 64 characters respectively."
          , "examples":
            [ "3542acb3a64d80c29302260d62c3b87a742ad14abf855ebc6733081e"
            , "b5ae663aaea8e500157bdf4baafd6f5ba0ce5759f7cd4101fc132f54.706174617465"
            ]
          }
        , "additionalProperties": { "$ref": "ogmios.json#/definitions/AssetQuantity" }
        }
      }
    }

  , "Vote":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "voterVk", "proposalId", "signature" ]
    , "properties":
      { "voterVk": { "$ref": "ogmios.json#/definitions/VerificationKey" }
      , "proposalId": { "$ref": "ogmios.json#/definitions/Digest[Blake2b]::VerificationKey" }
      , "signature": { "$ref": "ogmios.json#/definitions/Signature" }
      }
    }

  , "VotingPeriod":
    { "type": "string"
    , "enum": [ "voteForThisEpoch", "voteForNextEpoch" ]
    }

  , "VrfProof":
    { "type": "string"
    , "contentEncoding": "base16"
    }

  , "VrfOutput":
    { "type": "string"
    , "contentEncoding": "base16"
    }

  , "Withdrawals":
    { "type": "object"
    , "additionalProperties": { "$ref": "ogmios.json#/definitions/Lovelace" }
    , "propertyNames": { "pattern": "^stake(_test)?1[0-9a-z]+$" }
    }

  , "VerificationKey":
    { "type": "string"
    , "description": "An Ed25519 verification key."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    }
  }
}
