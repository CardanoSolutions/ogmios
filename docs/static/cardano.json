{ "$schema": "https://json-schema.org/draft-07/schema"
, "$id": "cardano.json"
, "title": "Cardano"
, "definitions":
  { "Address":
    { "title": "Address"
    , "type": "string"
    , "description": "A Cardano address (either legacy format or new format)."
    , "contentEncoding": "bech32|base58"
    , "pattern": "[1-9A-HJ-NP-Za-km-z]*"
    , "examples":
      [ "addr1q9d34spgg2kdy47n82e7x9pdd6vql6d2engxmpj20jmhuc2047yqd4xnh7u6u5jp4t0q3fkxzckph4tgnzvamlu7k5psuahzcp"
      , "DdzFFzCqrht8mbSTZHqpM2u4HeND2mdspsaBhdQ1BowPJBMzbDeBMeKgqdoKqo1D4sdPusEdZJVrFJRBBxX1jUEofNDYCJSZLg8MkyCE"
      ]
    }

  , "AddressAttributes":
    { "title": "AddressAttributes"
    , "type": "string"
    , "description": "Extra attributes carried by Byron addresses (network magic and/or HD payload)."
    , "contentEncoding": "base16"
    }

  , "AssetQuantity":
    { "title": "AssetQuantity"
    , "type": "integer"
    , "description": "A number of asset, can be negative went burning assets."
    }

  , "Assets":
    { "title": "Assets"
    , "type": "object"
    , "propertyNames": { "pattern": "^[0-9a-z]{56}$" }
    , "additionalProperties":
      { "type": "object"
      , "propertyNames": { "pattern": "^[0-9a-z]{0,64}$" }
      , "additionalProperties": { "$ref": "cardano.json#/definitions/AssetQuantity" }
      }
    }

  , "Block":
    { "title": "Block"
    , "oneOf":
      [ { "$ref": "cardano.json#/definitions/Block<EBB>" }
      , { "$ref": "cardano.json#/definitions/Block<BFT>" }
      , { "$ref": "cardano.json#/definitions/Block<Praos>" }
      ]
    }

  , "Block<EBB>":
    { "title": "Block<EBB>"
    , "type": "object"
    , "additionalProperties": false
    , "required":
      [ "era", "header", "ancestor", "height"
      ]
    , "properties":
      { "era":
        { "type": "string"
        , "enum": [ "byron" ]
        }
      , "header":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "hash" ]
        , "properties":
          { "hash": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
          }
        }
      , "ancestor": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
      , "height": { "$ref": "cardano.json#/definitions/BlockHeight" }
      }
    }

  , "Block<BFT>":
    { "title": "Block<BFT>"
    , "type": "object"
    , "additionalProperties": false
    , "required":
      [ "era", "header", "ancestor", "height", "size", "slot"
      , "protocol", "issuer", "delegate"
      ]
    , "properties":
      { "era":
        { "type": "string"
        , "enum": [ "byron" ]
        }
      , "header":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "hash" ]
        , "properties":
          { "hash": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
          }
        }
      , "ancestor": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
      , "height": { "$ref": "cardano.json#/definitions/BlockHeight" }
      , "slot": { "$ref": "cardano.json#/definitions/Slot" }
      , "size": { "$ref": "cardano.json#/definitions/BlockSize" }
      , "transactions":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/Transaction" }
        }
      , "operationalCertificates":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/BootstrapOperationalCertificate"}
        }
      , "governanceAction":
        { "$ref": "cardano.json#/definitions/BootstrapGovernanceAction"
        }
      , "protocol":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "magic", "version", "software" ]
        , "properties":
          { "magic": { "$ref": "cardano.json#/definitions/ProtocolMagicId" }
          , "version": { "$ref": "cardano.json#/definitions/ProtocolVersion" }
          , "software": { "$ref": "cardano.json#/definitions/SoftwareVersion" }
          }
        }
      , "issuer":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "verificationKey" ]
        , "properties":
          { "verificationKey": { "$ref": "cardano.json#/definitions/ExtendedVerificationKey" }
          }
        }
      , "delegate":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "verificationKey" ]
        , "properties":
          { "verificationKey": { "$ref": "cardano.json#/definitions/ExtendedVerificationKey" }
          }
        }
      }
    }

  , "Block<Praos>":
    { "title": "Block<Praos>"
    , "type": "object"
    , "additionalProperties": false
    , "required":
      [ "era", "header", "ancestor", "height", "size", "slot"
      , "protocol", "issuer"
      ]
    , "properties":
      { "era":
        { "type": "string"
        , "enum": [ "shelley", "allegra", "mary", "alonzo", "babbage" ]
        }
      , "header":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "hash" ]
        , "properties":
          { "hash": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
          }
        }
      , "ancestor":
        { "oneOf":
          [ { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
          , { "title": "GenesisHash", "type": "string", "enum": [ "genesis" ] }
          ]
        }
      , "nonce": { "$ref": "cardano.json#/definitions/CertifiedVrf" }
      , "height": { "$ref": "cardano.json#/definitions/BlockHeight" }
      , "size": { "$ref": "cardano.json#/definitions/BlockSize" }
      , "slot": { "$ref": "cardano.json#/definitions/Slot" }
      , "transactions":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/Transaction" }
        }
      , "protocol":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "version" ]
        , "properties":
          { "version": { "$ref": "cardano.json#/definitions/ProtocolVersion" }
          }
        }
      , "issuer":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "verificationKey", "vrfVerificationKey", "operationalCertificate", "leaderValue" ]
        , "properties":
          { "verificationKey": { "$ref": "cardano.json#/definitions/VerificationKey" }
          , "vrfVerificationKey": { "$ref": "cardano.json#/definitions/VerificationKey" }
          , "operationalCertificate": { "$ref": "cardano.json#/definitions/OperationalCertificate" }
          , "leaderValue": { "$ref": "cardano.json#/definitions/CertifiedVrf" }
          }
        }
      }
    }

  , "BlockHeight":
    { "title": "BlockHeight"
    , "type": "integer"
    , "description": "A block number, the i-th block to be minted is number i."
    , "minimum": 0
    , "maximum": 18446744073709552999
    }

  , "BlockSize":
    { "title": "BlockSize"
    , "type": "integer"
    , "description": "The size of the block in bytes."
    , "minimum": 0
    , "maximum": 18446744073709552999
    }

  , "BootstrapGovernanceAction":
    { "title": "BootstrapGovernanceAction"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "votes" ]
    , "properties":
      { "proposal":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "protocol", "metadata", "parameters", "issuer" ]
        , "properties":
          { "protocol":
            { "type": "object"
            , "additionalProperties": false
            , "required": [ "version", "software" ]
            , "properties":
              { "version": { "$ref": "cardano.json#/definitions/ProtocolVersion" }
              , "software": { "$ref": "cardano.json#/definitions/SoftwareVersion" }
              }
            }
          , "metadata":
            { "type": "object"
            , "additionalProperties": { "type": "string" }
            }
          , "parameters":
            { "$ref": "cardano.json#/definitions/ProtocolParameters<Byron>"
            }
          , "issuer":
            { "type": "object"
            , "additionalProperties": false
            , "required": [ "verificationKey" ]
            , "properties":
              { "verificationKey": { "$ref": "cardano.json#/definitions/ExtendedVerificationKey" }
              }
            }
          }
        }
      , "votes":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/BootstrapVote" }
        }
      }
    }

  , "BootstrapOperationalCertificate":
    { "title": "BootstrapOperationalCertificate"
    , "type": "object"
    , "description": "A (Byron) delegation certificate."
    , "additionalProperties": false
    , "required": [ "issuer", "delegate" ]
    , "properties":
      { "issuer":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "verificationKey" ]
        , "properties":
          { "verificationKey": { "$ref": "cardano.json#/definitions/VerificationKey" }
          }
        }
      , "delegate":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "verificationKey" ]
        , "properties":
          { "verificationKey": { "$ref": "cardano.json#/definitions/VerificationKey" }
          }
        }
      }
    }

  , "BootstrapVote":
    { "title": "BootstrapVote"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "voter", "proposal" ]
    , "properties":
      { "voter":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "verificationKey" ]
        , "properties":
          { "verificationKey": { "$ref": "cardano.json#/definitions/VerificationKey" }
          }
        }
      , "proposal":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "hash" ]
        , "properties":
          { "hash": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
          }
        }
      }
    }

  , "Bound":
    { "title": "Bound"
    , "type": "object"
    , "description": "An era bound which captures the time, slot and epoch at which the era start. The time is relative to the start time of the network."
    , "additionalProperties": false
    , "required": ["time", "slot", "epoch"]
    , "properties":
      { "time": { "$ref": "cardano.json#/definitions/RelativeTime" }
      , "slot": { "$ref": "cardano.json#/definitions/Slot" }
      , "epoch": { "$ref": "cardano.json#/definitions/Epoch" }
      }
    }

  , "Certificate":
    { "title": "Certificate"
    , "oneOf":
      [ { "type": "object"
        , "description": "A stake delegation certificate, from a delegator to a stake pool."
        , "title": "stakeDelegation"
        , "additionalProperties": false
        , "required": ["stakeDelegation"]
        , "properties":
          { "stakeDelegation":
            { "type": "object"
            , "additionalProperties": false
            , "required": ["delegator", "delegatee"]
            , "properties":
              { "delegator": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
              , "delegatee": { "$ref": "cardano.json#/definitions/StakePoolId" }
              }
            }
          }
        , "examples":
          [ { "stakeDelegation":
              { "delegator": "6d06fe0a5a8cb6d2bcc352581dea626bb5b2f66edf85678b2f2fa7b5"
              , "delegatee": "pool1pshqcksxywy68lt04lw6uf35f4yssekh5dx2mxqmyrukke2z5y3"
              }
            }
          ]
        }
      , { "type": "object"
        , "description": "A stake key registration certificate."
        , "title": "stakeKeyRegistration"
        , "additionalProperties": false
        , "required": ["stakeKeyRegistration"]
        , "properties":
          { "stakeKeyRegistration": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
          }
        , "examples":
          [ { "stakeKeyRegistration": "6d06fe0a5a8cb6d2bcc352581dea626bb5b2f66edf85678b2f2fa7b5"
            }
          ]
        }
      , { "type": "object"
        , "description": "A stake key de-registration certificate."
        , "title": "stakeKeyDeregistration"
        , "additionalProperties": false
        , "required": ["stakeKeyDeregistration"]
        , "properties":
          { "stakeKeyDeregistration": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
          }
        , "examples":
          [ { "stakeKeyDeregistration": "6d06fe0a5a8cb6d2bcc352581dea626bb5b2f66edf85678b2f2fa7b5"
            }
          ]
        }
      , { "type": "object"
        , "description": "A pool registration certificate."
        , "title": "poolRegistration"
        , "additionalProperties": false
        , "required": ["poolRegistration"]
        , "properties":
          { "poolRegistration": { "$ref": "cardano.json#/definitions/StakePoolParameters" }
          }
        , "examples":
          [ { "poolRegistration":
              { "id": "pool1agk62kg0s9606v78exurl53mqsdu44d6qeuzypur5e7ku6gpgzp"
              , "vrf": "c91697932cef010ced94eae6854436f8f30a18dbcd16e9176514f9612816023e"
              , "pledge": 458907757199
              , "cost": 340000000
              , "margin": "499/10000"
              , "rewardAccount": "stake1uy3kcacyk50twxlzluarxwy0wv0nzyt42ecruehek9k5m8g08gvjy"
              , "owners":
                [ "236c7704b51eb71be2ff3a33388f731f31117556703e66f9b16d4d9d"
                ]
              , "relays":
                [ { "port": 3001
                  , "ipv4": "54.163.147.116"
                  , "ipv6": null
                  }
                ]
              , "metadata":
                { "url": "https://www.sophias-pool.com/poolInfo"
                , "hash": "abb6c63334b2c5d107802f932479fc146454a632e886f2b4276d6d00c1d023a2"
                }
              }
            }
          ]
        }
      , { "type": "object"
        , "description": "A pool retirement certificate."
        , "additionalProperties": false
        , "title": "poolRetirement"
        , "required": ["poolRetirement"]
        , "properties":
          { "poolRetirement":
            { "type": "object"
            , "additionalProperties": false
            , "required": ["poolId", "retirementEpoch"]
            , "properties":
              { "retirementEpoch": { "$ref": "cardano.json#/definitions/Epoch" }
              , "poolId": { "$ref": "cardano.json#/definitions/StakePoolId" }
              }
            }
          }
        , "examples":
          [ { "poolRetirement":
              { "poolId": "pool14cq225dlh7qy7tcc35fgrkr9yyprlk4cppytjmdv7e0gwm4w9q6"
              , "retirementEpoch": 237
              }
            }
          ]
        }
      , { "type": "object"
        , "title": "genesisDelegation"
        , "additionalProperties": false
        , "required": ["genesisDelegation"]
        , "properties":
          { "genesisDelegation":
            { "type": "object"
            , "additionalProperties": false
            , "required": ["delegateKeyHash","verificationKeyHash","vrfVerificationKeyHash"]
            , "properties":
              { "delegateKeyHash": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
              , "verificationKeyHash": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
              , "vrfVerificationKeyHash": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
              }
            }
          }
        }
      , { "type": "object"
        , "title": "moveInstantaneousRewards"
        , "description": "Either `value` or `rewards` will be present, but never both."
        , "additionalProperties": false
        , "required": ["moveInstantaneousRewards"]
        , "properties":
          { "moveInstantaneousRewards":
            { "type": "object"
            , "additionalProperties": false
            , "required": ["pot"]
            , "properties":
              { "rewards": { "$ref": "cardano.json#/definitions/RewardTransfer" }
              , "value":  { "$ref": "cardano.json#/definitions/Lovelace" }
              , "pot": { "$ref": "cardano.json#/definitions/RewardPot" }
              }
            }
          }
        }
      ]
    }

  , "CertifiedVrf":
    { "title": "CertifiedVrf"
    , "type": "object"
    , "additionalProperties": false
    , "properties":
      { "proof": { "$ref": "cardano.json#/definitions/VrfProof" }
      , "output": { "$ref": "cardano.json#/definitions/VrfOutput" }
      }
    }

  , "ChainCode":
    { "title": "ChainCode"
    , "type": "string"
    , "description": "An Ed25519-BIP32 chain-code for key deriviation."
    , "contentEncoding": "base16"
    }

  , "CostModels":
    { "title": "CostModels"
    , "type": "object"
    , "additionalProperties": { "$ref": "cardano.json#/definitions/CostModel" }
    , "propertyNames": { "$ref": "cardano.json#/definitions/Language" }
    , "examples":
      [ { "plutus:v1":
          { "k": 14
          , "a": 123
          }
        }
      ]
    }

  , "CostModel":
    { "title": "CostModel"
    , "type": "array"
    , "items": { "$ref": "cardano.json#/definitions/Int64" }
    }

  , "Datum":
    { "title": "Datum"
    , "type": "string"
    , "contentEncoding": "base16"
    }

  , "Digest<Any>":
    { "title": "Digest<Any>"
    , "type": "string"
    , "description": "A hash digest from an unspecified algorithm and length."
    , "contentEncoding": "base16"
    , "examples":
      [ "90181c517a5beadc9c3fe64bf8"
      ]
    }

  , "Digest<Blake2b, 224>":
    { "title": "Digest<Blake2b, 224>"
    , "type": "string"
    , "description": "A Blake2b 28-byte hash digest, encoded in base16."
    , "contentEncoding": "base16"
    , "minLength": 56
    , "maxLength": 56
    , "examples":
      [ "90181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d3"
      ]
    }

  , "Digest<Blake2b, 256>":
    { "title": "Digest<Blake2b, 256>"
    , "type": "string"
    , "description": "A Blake2b 32-byte hash digest, encoded in base16."
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    , "examples":
      [ "c248757d390181c517a5beadc9c3fe64bf821d3e889a963fc717003ec248757d"
      ]
    }

  , "Epoch":
    { "title": "Epoch"
    , "type": "integer"
    , "description": "An epoch number or length."
    , "minimum": 0
    , "maximum": 18446744073709552000
    }

  , "Era":
    { "title": "Era"
    , "type": "string"
    , "enum": ["byron", "shelley", "allegra", "mary", "alonzo", "babbage"]
    }

  , "EraWithGenesis":
    { "title": "EraWithGenesis"
    , "type": "string"
    , "enum": ["byron", "shelley", "alonzo"]
    }

  , "EraParameters":
    { "title": "EraParameters"
    , "type": "object"
    , "description": "Parameters that can vary across hard forks."
    , "additionalProperties": false
    , "required": [ "epochLength", "slotLength", "safeZone" ]
    , "properties":
      { "epochLength": { "$ref": "cardano.json#/definitions/Epoch" }
      , "slotLength": { "$ref": "cardano.json#/definitions/SlotLength" }
      , "safeZone":
        { "oneOf":
          [ { "$ref": "cardano.json#/definitions/SafeZone" }
          , { "type": "null" }
          ]
        }
      }
    }

  , "EraSummary":
    { "title": "EraSummary"
    , "type": "object"
    , "description": "Summary of the confirmed parts of the ledger."
    , "additionalProperties": false
    , "required": [ "start", "end", "parameters" ]
    , "properties":
      { "start": { "$ref": "cardano.json#/definitions/Bound" }
      , "end":
        { "oneOf":
          [ { "$ref": "cardano.json#/definitions/Bound" }
          , { "type": "null" }
          ]
        }
      , "parameters": { "$ref": "cardano.json#/definitions/EraParameters" }
      }
    }

  , "ExecutionUnits":
    { "title": "ExecutionUnits"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "memory", "steps" ]
    , "properties":
      { "memory": { "$ref": "cardano.json#/definitions/UInt64" }
      , "steps": { "$ref": "cardano.json#/definitions/UInt64" }
      }
    }

  , "Genesis<Byron>":
    { "title": "Genesis<Byron>"
    , "type": "object"
    , "description": "A Byron genesis configuration, with information used to bootstrap the era. Some parameters are also updatable across the era."
    , "additionalProperties": false
    , "required":
      [ "genesisKeyHashes"
      , "genesisDelegations"
      , "systemStart"
      , "initialFunds"
      , "initialCoinOffering"
      , "securityParameter"
      , "networkMagic"
      , "protocolParameters"
      ]
    , "properties":
      { "genesisKeyHashes":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
        }
      , "genesisDelegations":
        { "type": "object"
        , "propertyNames": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
        , "additionalProperties": { "$ref": "cardano.json#/definitions/BootstrapOperationalCertificate" }
        }
      , "systemStart": { "$ref": "cardano.json#/definitions/UtcTime" }
      , "initialFunds":
        { "type": "object"
        , "propertyNames": { "$ref": "cardano.json#/definitions/Address" }
        , "additionalProperties": { "$ref": "cardano.json#/definitions/Lovelace" }
        }
      , "initialCoinOffering":
        { "type": "object"
        , "propertyNames": { "$ref": "cardano.json#/definitions/VerificationKey" }
        , "additionalProperties": { "$ref": "cardano.json#/definitions/Lovelace" }
        }
      , "securityParameter": { "$ref": "cardano.json#/definitions/UInt64" }
      , "networkMagic": { "$ref": "cardano.json#/definitions/NetworkMagic" }
      , "protocolParameters": { "$ref": "cardano.json#/definitions/ProtocolParameters<Byron>" }
      }
    }

  , "Genesis<Shelley>":
    { "title": "Genesis<Shelley>"
    , "type": "object"
    , "description": "A Shelley genesis configuration, with information used to bootstrap the era. Some parameters are also updatable across the era."
    , "additionalProperties": false
    , "required":
      [ "systemStart"
      , "networkMagic"
      , "network"
      , "activeSlotsCoefficient"
      , "securityParameter"
      , "epochLength"
      , "slotsPerKesPeriod"
      , "maxKesEvolutions"
      , "slotLength"
      , "updateQuorum"
      , "maxLovelaceSupply"
      , "protocolParameters"
      , "initialDelegates"
      , "initialFunds"
      , "initialPools"
      ]
    , "properties":
      { "systemStart": { "$ref": "cardano.json#/definitions/UtcTime" }
      , "networkMagic": { "$ref": "cardano.json#/definitions/NetworkMagic" }
      , "network": { "$ref": "cardano.json#/definitions/Network" }
      , "activeSlotsCoefficient": { "$ref": "cardano.json#/definitions/Ratio" }
      , "securityParameter": { "$ref": "cardano.json#/definitions/UInt64" }
      , "epochLength": { "$ref": "cardano.json#/definitions/Epoch" }
      , "slotsPerKesPeriod": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxKesEvolutions": { "$ref": "cardano.json#/definitions/UInt64" }
      , "slotLength": { "$ref": "cardano.json#/definitions/SlotLength" }
      , "updateQuorum": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxLovelaceSupply": { "$ref": "cardano.json#/definitions/UInt64" }
      , "protocolParameters": { "$ref": "cardano.json#/definitions/ProtocolParameters<Shelley>" }
      , "initialDelegates":
        { "type": "object"
        , "title": "InitialDelegates"
        , "propertyNames": { "ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
        , "additionalProperties": { "$ref": "cardano.json#/definitions/GenesisDelegate" }
        }
      , "initialFunds":
        { "type": "object"
        , "title": "InitialFunds"
        , "propertyNames": { "$ref": "cardano.json#/definitions/Address" }
        , "additionalProperties": { "$ref": "cardano.json#/definitions/Lovelace" }
        }
      , "initialPools": { "$ref": "cardano.json#/definitions/GenesisPools" }
      }
    }

  , "Genesis<Alonzo>":
    { "title": "Genesis<Alonzo>"
    , "type": "object"
    , "description": "An Alonzo genesis configuration, with information used to bootstrap the era. Some parameters are also updatable across the era."
    , "additionalProperties": false
    , "required":
      [ "coinsPerUtxoWord"
      , "collateralPercentage"
      , "costModels"
      , "maxCollateralInputs"
      , "maxExecutionUnitsPerBlock"
      , "maxExecutionUnitsPerTransaction"
      , "maxValueSize"
      , "prices"
      ]
    , "properties":
      { "coinsPerUtxoWord": { "$ref": "cardano.json#/definitions/UInt64" }
      , "collateralPercentage": { "$ref": "cardano.json#/definitions/UInt64" }
      , "costModels": { "$ref": "cardano.json#/definitions/CostModels" }
      , "maxCollateralInputs": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxExecutionUnitsPerBlock": { "$ref": "cardano.json#/definitions/ExecutionUnits" }
      , "maxExecutionUnitsPerTransaction": { "$ref": "cardano.json#/definitions/ExecutionUnits" }
      , "maxValueSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "prices": { "$ref": "cardano.json#/definitions/Prices" }
      }
    }

  , "GenesisDelegate":
    { "title": "GenesisDelegate"
    , "type": "object"
    , "description": "A Genesis delegate, in charge of Cardano's governance."
    , "additionalProperties": false
    , "required":
      [ "delegate"
      , "vrf"
      ]
    , "properties":
      { "delegate": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
      , "vrf": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
      }
    }

  , "GenesisPools":
    { "title": "GenesisPools"
    , "type": "object"
    , "description": "A Genesis stake pools configuration; primarily used for bootstrapping test networks."
    , "additionalProperties": false
    , "required":
      [ "pools"
      , "delegators"
      ]
    , "properties":
      { "pools":
        { "type": "object"
        , "propertyNames": { "$ref": "cardano.json#/definitions/StakePoolId" }
        , "additionalProperties": { "$ref": "cardano.json#/definitions/StakePoolParameters" }
        }
      , "delegators":
        { "type": "object"
        , "propertyNames": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
        , "additionalProperties": { "$ref": "cardano.json#/definitions/StakePoolId" }
        }
      }
    }

  , "GovernanceActionId":
    { "title": "GovernanceActionId"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "transaction", "action" ]
    , "properties":
      { "transaction": { "$ref": "cardano.json#/definitions/TransactionId" }
      , "governanceAction": { "$ref": "cardano.json#/definitions/Index" }
      }
    }

  , "ExtendedVerificationKey":
    { "title": "ExtendedVerificationKey"
    , "type": "string"
    , "description": "An Ed25519-BIP32 Byron genesis delegate verification key with chain-code."
    , "contentEncoding": "base16"
    , "minLength": 128
    , "maxLength": 128
    }

  , "Index":
    { "type": "object"
    , "additionalProperties": false
    , "required": [ "index" ]
    , "properties":
      { "index": { "$ref": "cardano.json#/definitions/UInt32" }
      }
    }

  , "Int64":
    { "title": "Int64"
    , "type": "integer"
    , "minimum": -9223372036854775808
    , "maximum": 9223372036854775807
    }

  , "InputSource":
    { "type": "string"
    , "enum":
      [ "inputs"
      , "collaterals"
      ]
    }

  , "Language":
    { "title": "Language"
    , "type": "string"
    , "enum": [ "plutus:v1", "plutus:v2", "plutus:v3" ]
    }

  , "Lovelace":
    { "title": "Lovelace"
    , "additionalProperties": false
    , "required": [ "lovelace" ]
    , "properties":
      { "lovelace":
        { "type": "integer"
        , "description": "A number of lovelace, possibly large when summed up."
        }
      }
    }

  , "LovelaceDelta":
    { "title": "LovelaceDelta"
    , "type": "integer"
    , "description": "An amount, possibly negative, in Lovelace (1e6 Lovelace = 1 Ada)."
    , "minimum": -9223372036854775808
    , "maximum": 9223372036854775807
    }

  , "KesVerificationKey":
    { "title": "KesVerificationKey"
    , "type": "string"
    , "contentEncoding": "base16"
    }

  , "Metadata":
    { "title": "Metadata"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "hash", "labels" ]
    , "properties":
      { "hash": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
      , "labels": { "$ref": "cardano.json#/definitions/MetadataLabels" }
      }
    }

  , "MetadataLabels":
    { "title": "MetadataLabels"
    , "type": "object"
    , "propertyNames": { "pattern": "^-?[0-9]+$" }
    , "examples":
      [ { "42":
          { "int": 14
          }
        }
      , { "42":
          { "string": "Some Text"
          }
        }
      , { "1337":
          { "list":
            [ { "string": "foo" }
            , { "map": [ { "k": { "string": "bar" }, "v": { "int": 3 } } ] }
            ]
          }
        }
      ]
    , "additionalProperties": { "$ref": "cardano.json#/definitions/Metadatum" }
    }

  , "Metadatum":
    { "title": "Metadatum"
    , "oneOf":
      [ { "type": "object"
        , "title": "int"
        , "additionalProperties": false
        , "required": ["int"]
        , "properties":
          { "int":
              { "type": "integer"
              }
          }
        }
      , { "type": "object"
        , "title": "string"
        , "additionalProperties": false
        , "required": ["string"]
        , "properties":
          { "string":
              { "type": "string"
              }
          }
        }
      , { "type": "object"
        , "title": "bytes"
        , "additionalProperties": false
        , "required": ["bytes"]
        , "properties":
          { "bytes":
            { "type": "string"
            , "contentEncoding": "base16"
            , "pattern": "^[0-9a-f]*$"
            }
          }
        }
      , { "type": "object"
        , "title": "list"
        , "additionalProperties": false
        , "required": ["list"]
        , "properties":
          { "list":
            { "type": "array"
            , "items": { "$ref": "cardano.json#/definitions/Metadatum" }
            }
          }
        }
      , { "type": "object"
        , "title": "map"
        , "additionalProperties": false
        , "required": ["map"]
        , "properties":
          { "map":
            { "type": "array"
            , "items": { "$ref": "cardano.json#/definitions/MetadatumMap" }
            }
          }
        }
      ]
    }

  , "MetadatumMap":
    { "title": "MetadatumMap"
    , "type": "object"
    , "additionalProperties": false
    , "required": ["k", "v"]
    , "properties":
      { "k": { "$ref": "cardano.json#/definitions/Metadatum" }
      , "v": { "$ref": "cardano.json#/definitions/Metadatum" }
      }
    }

  , "Network":
    { "title": "Network"
    , "type": "string"
    , "description": "A network target, as defined since the Shelley era."
    , "enum": [ "mainnet", "testnet" ]
    }

  , "NetworkMagic":
    { "title": "NetworkMagic"
    , "type": "integer"
    , "description": "A magic number for telling networks apart. (e.g. 764824073)"
    , "minimum": 0
    , "maximum": 4294967296
    , "examples":
      [ 764824073
      ]
    }

  , "Nonce":
    { "title": "Nonce"
    , "oneOf":
      [ { "type": "string"
        , "enum": ["neutral"]
        , "title": "neutral"
        }
      , { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
      ]
    }

  , "Null":
    { "type": "null"
    }

  , "OperationalCertificate":
    { "title": "OperationalCertificate"
    , "type": "object"
    , "description": "Certificate identifying a stake pool operator."
    , "additionalProperties": false
    , "required": [ "count", "kes" ]
    , "properties":
      { "count": { "$ref": "cardano.json#/definitions/UInt64" }
      , "kes":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "period", "verificationKey" ]
        , "properties":
          { "period": { "$ref": "cardano.json#/definitions/UInt64" }
          , "verificationKey": { "$ref": "cardano.json#/definitions/KesVerificationKey" }
          }
        }
      }
    }

  , "Origin":
    { "title": "Origin"
    , "type": "string"
    , "description": "The origin of the blockchain. This point is special in the sense that it doesn't point to any existing slots, but is preceding any existing other point."
    , "enum": [ "origin" ]
    }

  , "PolicyId":
    { "title": "PolicyId"
    , "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>"
    }

  , "StakePoolId":
    { "title": "StakePoolId"
    , "type": "string"
    , "description": "A Blake2b 32-byte hash digest of a pool's verification key."
    , "contentEncoding": "bech32"
    , "pattern": "^pool1[0-9a-z]*$"
    , "examples":
      [ "pool1qqqqpanw9zc0rzh0yp247nzf2s35uvnsm7aaesfl2nnejaev0uc"
      , "pool1qqqqqdk4zhsjuxxd8jyvwncf5eucfskz0xjjj64fdmlgj735lr9"
      ]
    }

  , "StakePoolParameters":
    { "title": "StakePoolParameters"
    , "type": "object"
    , "additionalProperties": false
    , "required": ["owners", "cost", "margin", "pledge", "vrf", "id", "relays", "rewardAccount"]
    , "properties":
      { "id": { "$ref": "cardano.json#/definitions/StakePoolId" }
      , "owners":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
        }
      , "cost": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "margin": { "$ref": "cardano.json#/definitions/Ratio" }
      , "pledge": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "vrf": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
      , "metadata":
        { "type": "object"
        , "title": "poolMetadata"
        , "additionalProperties": false
        , "required": ["hash","url"]
        , "properties":
          { "hash": { "$ref": "cardano.json#/definitions/Digest<Any>" }
          , "url":
            { "type": "string"
            , "format": "uri"
            }
          }
        }
      , "relays":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/Relay" }
        }
      , "rewardAccount": { "$ref": "cardano.json#/definitions/RewardAccount" }
      }
    }

  , "Prices":
    { "title": "Prices"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "memory", "steps" ]
    , "properties":
      { "memory": { "$ref": "cardano.json#/definitions/Ratio" }
      , "steps": { "$ref": "cardano.json#/definitions/Ratio" }
      }
    }

  , "ProtocolMagicId":
    { "title": "ProtocolMagicId"
    , "type": "integer"
    , "minimum": 0
    , "maximum": 4294967295
    , "examples":
      [ 764824073
      ]
    }

  , "ProtocolParameters<Byron>":
    { "title": "ProtocolParameters<Byron>"
    , "type": "object"
    , "additionalProperties": false
    , "properties":
      { "heavyDlgThreshold": { "$ref": "cardano.json#/definitions/Ratio" }
      , "maxBlockSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxHeaderSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxProposalSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxTxSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "mpcThreshold": { "$ref": "cardano.json#/definitions/Ratio" }
      , "scriptVersion": { "$ref": "cardano.json#/definitions/UInt64" }
      , "slotDuration": { "$ref": "cardano.json#/definitions/UInt64" }
      , "unlockStakeEpoch": { "$ref": "cardano.json#/definitions/UInt64" }
      , "updateProposalThreshold": { "$ref": "cardano.json#/definitions/Ratio" }
      , "updateProposalTimeToLive": { "$ref": "cardano.json#/definitions/UInt64" }
      , "updateVoteThreshold": { "$ref": "cardano.json#/definitions/Ratio" }
      , "txFeePolicy": { "$ref": "cardano.json#/definitions/TxFeePolicy" }
      , "softforkRule": { "$ref": "cardano.json#/definitions/SoftForkRule" }
      }
    }

  , "ProtocolParameters<Shelley>":
    { "title": "ProtocolParameters<Shelley>"
    , "type": "object"
    , "additionalProperties": false
    , "properties":
      { "minFeeCoefficient": { "$ref": "cardano.json#/definitions/UInt64" }
      , "minFeeConstant": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "maxBlockBodySize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxBlockHeaderSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxTxSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "stakeKeyDeposit": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "poolDeposit": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "poolRetirementEpochBound": { "$ref": "cardano.json#/definitions/UInt64" }
      , "desiredNumberOfPools": { "$ref": "cardano.json#/definitions/UInt64" }
      , "poolInfluence": { "$ref": "cardano.json#/definitions/Ratio" }
      , "monetaryExpansion": { "$ref": "cardano.json#/definitions/Ratio" }
      , "treasuryExpansion": { "$ref": "cardano.json#/definitions/Ratio" }
      , "decentralizationParameter": { "$ref": "cardano.json#/definitions/Ratio" }
      , "minUtxoValue": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "minPoolCost": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "extraEntropy": { "$ref": "cardano.json#/definitions/Nonce" }
      , "protocolVersion": { "$ref": "cardano.json#/definitions/ProtocolVersion" }
      }
    }

  , "ProtocolParameters<Alonzo>":
    { "title": "ProtocolParameters<Alonzo>"
    , "type": "object"
    , "additionalProperties": false
    , "properties":
      { "minFeeCoefficient": { "$ref": "cardano.json#/definitions/UInt64" }
      , "minFeeConstant": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "maxBlockBodySize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxBlockHeaderSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxTxSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "stakeKeyDeposit": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "poolDeposit": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "poolRetirementEpochBound": { "$ref": "cardano.json#/definitions/UInt64" }
      , "desiredNumberOfPools": { "$ref": "cardano.json#/definitions/UInt64" }
      , "poolInfluence": { "$ref": "cardano.json#/definitions/Ratio" }
      , "monetaryExpansion": { "$ref": "cardano.json#/definitions/Ratio" }
      , "treasuryExpansion": { "$ref": "cardano.json#/definitions/Ratio" }
      , "decentralizationParameter": { "$ref": "cardano.json#/definitions/Ratio" }
      , "minPoolCost": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "coinsPerUtxoWord": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxValueSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "collateralPercentage": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxCollateralInputs": { "$ref": "cardano.json#/definitions/UInt64" }
      , "extraEntropy": { "$ref": "cardano.json#/definitions/Nonce" }
      , "protocolVersion": { "$ref": "cardano.json#/definitions/ProtocolVersion" }
      , "costModels": { "$ref": "cardano.json#/definitions/CostModels" }
      , "prices": { "$ref": "cardano.json#/definitions/Prices" }
      , "maxExecutionUnitsPerTransaction": { "$ref": "cardano.json#/definitions/ExecutionUnits" }
      , "maxExecutionUnitsPerBlock": { "$ref": "cardano.json#/definitions/ExecutionUnits" }
      }
    }

  , "ProtocolParameters<Babbage>":
    { "title": "ProtocolParameters<Babbage>"
    , "type": "object"
    , "additionalProperties": false
    , "properties":
      { "minFeeCoefficient": { "$ref": "cardano.json#/definitions/UInt64" }
      , "minFeeConstant": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "maxBlockBodySize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxBlockHeaderSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxTxSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "stakeKeyDeposit": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "poolDeposit": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "poolRetirementEpochBound": { "$ref": "cardano.json#/definitions/UInt64" }
      , "desiredNumberOfPools": { "$ref": "cardano.json#/definitions/UInt64" }
      , "poolInfluence": { "$ref": "cardano.json#/definitions/Ratio" }
      , "monetaryExpansion": { "$ref": "cardano.json#/definitions/Ratio" }
      , "treasuryExpansion": { "$ref": "cardano.json#/definitions/Ratio" }
      , "minPoolCost": { "$ref": "cardano.json#/definitions/Lovelace" }
      , "coinsPerUtxoByte": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxValueSize": { "$ref": "cardano.json#/definitions/UInt64" }
      , "collateralPercentage": { "$ref": "cardano.json#/definitions/UInt64" }
      , "maxCollateralInputs": { "$ref": "cardano.json#/definitions/UInt64" }
      , "protocolVersion": { "$ref": "cardano.json#/definitions/ProtocolVersion" }
      , "costModels": { "$ref": "cardano.json#/definitions/CostModels" }
      , "prices": { "$ref": "cardano.json#/definitions/Prices" }
      , "maxExecutionUnitsPerTransaction": { "$ref": "cardano.json#/definitions/ExecutionUnits" }
      , "maxExecutionUnitsPerBlock": { "$ref": "cardano.json#/definitions/ExecutionUnits" }
      }
    }

  , "ProtocolVersion":
    { "title": "ProtocolVersion"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "major", "minor" ]
    , "properties":
      { "major": { "$ref": "cardano.json#/definitions/UInt32" }
      , "minor": { "$ref": "cardano.json#/definitions/UInt32" }
      , "patch": { "$ref": "cardano.json#/definitions/UInt32" }
      }
    }

  , "Ratio":
    { "title": "Ratio"
    , "type": "string"
    , "description": "A ratio of two integers, to express exact fractions."
    , "pattern": "^-?[0-9]+/[0-9]+$"
    , "examples":
      [ "2/3"
      , "7/8"
      ]
    }

  , "Redeemer":
    { "title": "Redeemer"
    , "type": "object"
    , "examples":
      [ { "executionUnits":
          { "memory": 2
          , "steps": 2
          }
        , "redeemer": "ggRCqSQ="
        }
      ]
    , "additionalProperties": false
    , "required": [ "redeemer", "executionUnits" ]
    , "properties":
      { "redeemer": { "$ref": "cardano.json#/definitions/RedeemerData" }
      , "executionUnits": { "$ref": "cardano.json#/definitions/ExecutionUnits" }
      }
    }

  , "RedeemerData":
    { "title": "RedeemerData"
    , "type": "string"
    , "contentEncoding": "base16"
    , "description": "Plutus data, CBOR-serialised."
    }

  , "RedeemerPointer":
    { "title": "RedeemerPointer"
    , "type": "string"
    , "pattern": "^(spend|mint|certificate|withdrawal):[0-9]+$"
    }

  , "RelativeTime":
    { "title": "RelativeTime"
    , "type": "number"
    , "description": "A time in seconds relative to another one (typically, system start or era start)."
    }

  , "Relay":
    { "title": "Relay"
    , "oneOf":
      [ { "type": "object"
        , "title": "by address"
        , "additionalProperties": false
        , "properties":
          { "ipv4":
            { "type": "string"
            }
          , "ipv6":
            { "type": "string"
            }
          , "port":
            { "type": "integer"
            , "minimum": 0
            , "maximum": 65535
            }
          }
        }
      , { "type": "object"
        , "title": "by name"
        , "additionalProperties": false
        , "required": ["hostname"]
        , "properties":
          { "hostname": { "type": "string" }
          , "port":
            { "type": "integer"
            , "minimum": 0
            , "maximum": 65535
            }
          }
        }
      ]
    }

  , "RewardAccount":
    { "title": "RewardAccount"
    , "type": "string"
    , "description": "A reward account, also known as 'stake address'."
    , "contentEncoding": "bech32"
    , "pattern": "^stake(_test)?1[0-9a-z]+$"
    , "examples":
      [ "stake1ux7pt9adw8z46tgqn2f8fvurrhk325gcm4mf75mkmmxpx6gae9mzv"
      ]
    }

  , "RewardPot":
    { "title": "RewardPot"
    , "type": "string"
    , "description": "Source of rewards as defined by the protocol parameters."
    , "enum": ["reserves", "treasury"]
    }

  , "RewardTransfer":
    { "title": "RewardTransfer"
    , "type": "object"
    , "additionalProperties": { "$ref": "cardano.json#/definitions/LovelaceDelta" }
    , "propertyNames": { "pattern": "[0-9a-f]{56}$" }
    , "examples":
      [ { "6d06fe0a5a8cb6d2bcc352581dea626bb5b2f66edf85678b2f2fa7b5": 123456789
        }
      ]
    }

  , "SafeZone":
    { "title": "SafeZone"
    , "type": "integer"
    , "description": "Number of slots from the tip of the ledger in which it is guaranteed that no hard fork can take place. This should be (at least) the number of slots in which we are guaranteed to have k blocks."
    , "minimum": 0
    , "maximum": 18446744073709552999
    }

  , "Script":
    { "title": "Script"
    , "oneOf":
      [ { "type": "object"
        , "title": "Native"
        , "additionalProperties": false
        , "required": [ "native" ]
        , "properties":
          { "native": { "$ref": "cardano.json#/definitions/Script<Native>" }
          }
        }
      , { "type": "object"
        , "title": "PlutusV1"
        , "additionalProperties": false
        , "required": [ "plutus:v1" ]
        , "properties":
          { "plutus:v1": { "$ref": "cardano.json#/definitions/Script<Plutus>" }
          }
        }
      , { "type": "object"
        , "title": "PlutusV2"
        , "additionalProperties": false
        , "required": [ "plutus:v2" ]
        , "properties":
          { "plutus:v2": { "$ref": "cardano.json#/definitions/Script<Plutus>" }
          }
        }
      , { "type": "object"
        , "title": "PlutusV3"
        , "additionalProperties": false
        , "required": [ "plutus:v3" ]
        , "properties":
          { "plutus:v3": { "$ref": "cardano.json#/definitions/Script<Plutus>" }
          }
        }
      ]
    }

  , "Script<Native>":
    { "title": "Script<Native>"
    , "description": "A phase-1 monetary script. Timelocks constraints are only supported since Allegra."
    , "examples":
        [ "3c07030e36bfff7cd2f004356ef320f3fe3c07030e7cd2f004356437"
        , { "all":
            [ "ec09e5293d384637cd2f004356ef320f3fe3c07030e36bfffe67e2e2"
            , "3c07030e36bfff7cd2f004356ef320f3fe3c07030e7cd2f004356437"
            ]
          }
        ]
    , "anyOf":
      [ { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
      , { "type": "object"
        , "title": "any"
        , "additionalProperties": false
        , "required": ["any"]
        , "properties":
          { "any":
            { "type": "array"
            , "items": { "$ref": "cardano.json#/definitions/Script<Native>" }
            }
          }
        }
      , { "type": "object"
        , "title": "all"
        , "additionalProperties": false
        , "required": ["all"]
        , "properties":
          { "all":
            { "type": "array"
            , "items": { "$ref": "cardano.json#/definitions/Script<Native>" }
            }
          }
        }
      , { "type": "object"
        , "title": "NOf"
        , "propertyNames": { "pattern": "^[0-9]+$" }
        , "additionalProperties":
          { "type": "array"
          , "items": { "$ref": "cardano.json#/definitions/Script<Native>" }
          }
        }
      , { "type": "object"
        , "title": "expiresAt"
        , "additionalProperties": false
        , "required": [ "expiresAt" ]
        , "properties":
          { "expiresAt": { "$ref": "cardano.json#/definitions/Slot" }
          }
        }
      , { "type": "object"
        , "title": "startsAt"
        , "additionalProperties": false
        , "required": [ "startsAt" ]
        , "properties":
          { "startsAt": { "$ref": "cardano.json#/definitions/Slot" }
          }
        }
      ]
    }

  , "Script<Plutus>":
    { "title": "Script<Plutus>"
    , "type": "string"
    , "description": "A phase-2 Plutus script; or said differently, a serialized Plutus-core program."
    , "contentEncoding": "base16"
    }

  , "ScriptPurpose":
    { "title": "ScriptPurpose"
    , "oneOf":
      [ { "title": "spend"
        , "type": "object"
        , "additionalProperties": false
        , "required": [ "spend" ]
        , "properties":
          { "spend": { "$ref": "cardano.json#/definitions/TransactionOutputReference" }
          }
        }
      , { "title": "mint"
        , "type": "object"
        , "additionalProperties": false
        , "required": [ "mint" ]
        , "properties":
          { "mint": { "$ref": "cardano.json#/definitions/PolicyId" }
          }
        }
      , { "title": "certificate"
        , "type": "object"
        , "additionalProperties": false
        , "required": [ "certificate" ]
        , "properties":
          { "certificate": { "$ref": "cardano.json#/definitions/Certificate" }
          }
        }
      , { "title": "withdrawal"
        , "type": "object"
        , "additionalProperties": false
        , "required": [ "withdrawal" ]
        , "properties":
          { "withdrawal": { "$ref": "cardano.json#/definitions/RewardAccount" }
          }
        }
      ]
    }

  , "Signature":
    { "title": "Signature"
    , "type": "string"
    , "description": "An EdDSA signature."
    , "contentEncoding": "base16"
    , "minLength": 128
    , "maxLength": 128
    }

  , "Signatory":
    { "title": "Signatory"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "signature", "key" ]
    , "properties":
      { "key": { "$ref": "cardano.json#/definitions/VerificationKey" }
      , "signature": { "$ref": "cardano.json#/definitions/Signature" }
      , "chainCode": { "$ref": "cardano.json#/definitions/ChainCode" }
      , "addressAttributes": { "$ref": "cardano.json#/definitions/AddressAttributes" }
      }
    , "examples":
      [ { "signature": "deeb8f82f2af5836ebbc1b450b6dbf0b03c93afe5696f10d49e8a8304ebfac01deeb8f82f2af5836ebbc1b4ffffffff"
        , "key": "deeb8f82f2af5836ebbc1b450b6dbf0b03c93afe5696f10d49e8a8304ebfac01"
        , "addressAttributes": "cA=="
        , "chainCode": "b6dbf0b03c93afe5696f10d49e8a8304ebfac01deeb8f82f2af5836ebbc1b450"
        }
      , { "signature": "deeb8f82f2af5836ebbc1b450b6dbf0b03c93afe5696f10d49e8a8304ebfac01deeb8f82f2af5836ebbc1b4ffffffff"
        , "key": "0c02af01eaacc939b3d0d817f4eb57d323ea5686cb1fecb8de821df1296b84a7"
        }
      ]
    }

  , "Slot":
    { "title": "Slot"
    , "description": "An absolute slot number."
    , "type": "integer"
    , "minimum": 0
    , "maximum": 18446744073709552000
    }

  , "SlotLength":
    { "title": "SlotLength"
    , "description": "A slot length, in seconds, possibly with decimals."
    , "type": "number"
    }

  , "SoftwareVersion":
    { "title": "SoftwareVersion"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "appName", "number" ]
    , "properties":
      { "appName": { "type": "string" }
      , "number": { "$ref": "cardano.json#/definitions/UInt32" }
      }
    }

  , "SoftForkRule":
    { "title": "SoftForkRule"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "initThreshold", "minThreshold", "decrementThreshold" ]
    , "properties":
      { "initThreshold": { "$ref": "cardano.json#/definitions/Ratio" }
      , "minThreshold": { "$ref": "cardano.json#/definitions/Ratio" }
      , "decrementThreshold": { "$ref": "cardano.json#/definitions/Ratio" }
      }
    }

  , "StakeAddress":
    { "title": "StakeAddress"
    , "type": "string"
    , "description": "A stake address (a.k.a reward account)"
    , "contentEncoding": "bech32"
    , "pattern": "^(stake|stake_test)1[0-9a-z]*$"
    , "examples":
      [ "stake179kzq4qulejydh045yzxwk4ksx780khkl4gdve9kzwd9vjcek9u8h"
      ]
    }

  , "Tip":
    { "title": "tip"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "slot", "hash", "blockNo" ]
    , "properties":
      { "slot": { "$ref": "cardano.json#/definitions/Slot" }
      , "hash": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
      , "blockNo": { "$ref": "cardano.json#/definitions/BlockHeight" }
      }
    }

  , "Transaction":
    { "title": "Transaction"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "id", "inputSource", "inputs", "outputs", "signatories", "cbor" ]
    , "properties":
      { "id":
        { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>"
        }
      , "inputSource":
        { "$ref": "cardano.json#/definitions/InputSource"
        }
      , "inputs":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/TransactionOutputReference" }
        }
      , "references":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/TransactionOutputReference" }
        }
      , "collaterals":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/TransactionOutputReference" }
        }
      , "collateral":
        { "$ref": "cardano.json#/definitions/Lovelace"
        }
      , "collateralReturn":
        { "$ref": "cardano.json#/definitions/TransactionOutput"
        }
      , "outputs":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/TransactionOutput" }
        }
      , "certificates":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/Certificate" }
        }
      , "withdrawals":
        { "$ref": "cardano.json#/definitions/Withdrawals"
        }
      , "fee":
        { "$ref": "cardano.json#/definitions/Lovelace"
        }
      , "validityInterval":
        { "$ref": "cardano.json#/definitions/ValidityInterval"
        }
      , "mint":
        { "$ref": "cardano.json#/definitions/Assets"
        }
      , "network":
        { "$ref": "cardano.json#/definitions/Network"
        }
      , "scriptIntegrityHash":
        { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>"
        }
      , "requiredExtraSignatories":
        { "type": "array"
        , "items": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 224>" }
        }
      , "governanceActions":
        { "anyOf":
          [ { "type": "array"
            , "items": { "$ref": "cardano.json#/definitions/Update<Shelley>" }
            }
          , { "type": "array"
            , "items": { "$ref": "cardano.json#/definitions/Update<Alonzo>" }
            }
          , { "type": "array"
            , "items": { "$ref": "cardano.json#/definitions/Update<Babbage>" }
            }
          ]
        }
      , "metadata":
        { "$ref": "cardano.json#/definitions/Metadata"
        }
      , "signatories":
        { "type": "array"
        , "additionalProperties": { "$ref": "cardano.json#/definitions/Signatory" }
        }
      , "scripts":
        { "type": "object"
        , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
        , "additionalProperties": { "$ref": "cardano.json#/definitions/Script" }
        }
      , "datums":
        { "type": "object"
        , "propertyNames": { "contentEncoding": "base16", "pattern": "^[0-9a-f]+$" }
        , "additionalProperties": { "$ref": "cardano.json#/definitions/Datum" }
        }
      , "redeemers":
        { "type": "object"
        , "propertyNames": { "$ref": "cardano.json#/definitions/RedeemerPointer" }
        , "additionalProperties": { "$ref": "cardano.json#/definitions/Redeemer" }
        }
      , "cbor":
        { "type": "string"
        , "contentEncoding": "base16"
        , "description": "The raw serialized (CBOR) transaction, as found on-chain."
        }
      }
    }

  , "TxFeePolicy":
    { "title": "TxFeePolicy"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "coefficient", "constant" ]
    , "properties":
      { "coefficient": { "$ref": "cardano.json#/definitions/Ratio" }
      , "constant": { "$ref": "cardano.json#/definitions/Lovelace" }
      }
    }

  , "TransactionId":
    { "title": "TransactionId"
    , "description": "A Blake2b 32-byte hash digest of a transaction body"
    , "type": "string"
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    }

  , "TransactionOutput":
    { "title": "TransactionOutput"
    , "description": "A transaction output. Since Mary, 'value' always return a multi-asset value. Since Alonzo, 'datumHash' is always present (albeit sometimes 'null'). Since Babbage, 'datum' & 'script' are always present (albeit sometimes 'null')."
    , "type": "object"
    , "examples":
      [ { "address": "addr_test1qz66ue36465w2qq40005h2hadad6pnjht8mu6sgplsfj74qdjnshguewlx4ww0eet26y2pal4xpav5prcydf28cvxtjqx46x7f"
        , "value":
          { "coins": 2
          , "assets":
            { "3542acb3a64d80c29302260d62c3b87a742ad14abf855ebc6733081e": 42
            , "b5ae663aaea8e500157bdf4baafd6f5ba0ce5759f7cd4101fc132f54.706174617465": 1337
            }
          }
        , "datumHash": null
        , "datum": null
        , "script": null
        }
      ]
    , "additionalProperties": false
    , "required": [ "address", "value" ]
    , "properties":
      { "address": { "$ref": "cardano.json#/definitions/Address" }
      , "value": { "$ref": "cardano.json#/definitions/Value" }
      , "datumHash": { "$ref": "cardano.json#/definitions/Digest<Blake2b, 256>" }
      , "datum": { "$ref": "cardano.json#/definitions/Datum" }
      , "script": { "$ref": "cardano.json#/definitions/Script" }
      }
    }

  , "TransactionOutputReference":
    { "title": "TransactionOutputReference"
    , "type": "object"
    , "additionalProperties": false
    , "required": [ "txId", "index" ]
    , "properties":
      { "txId": { "$ref": "cardano.json#/definitions/TransactionId" }
      , "index":
        { "$ref": "cardano.json#/definitions/UInt32"
        , "minimum": 0
        }
      }
    }

  , "UInt8":
    { "title": "UInt8"
    , "type": "integer"
    , "minimum": 0
    , "maximum": 255
    }

  , "UInt32":
    { "title": "UInt32"
    , "type": "integer"
    , "minimum": 0
    , "maximum": 4294967295
    }

  , "UInt64":
    { "title": "UInt64"
    , "type": "integer"
    , "minimum": 0
    , "maximum": 18446744073709552999
    }

  , "Update<Shelley>":
    { "type": "object"
    , "title": "UpdateProposal[Shelley]"
    , "additionalProperties": false
    , "required": ["proposal", "epoch"]
    , "properties":
      { "epoch": { "$ref": "cardano.json#/definitions/Epoch" }
      , "proposal":
        { "type": "object"
        , "additionalProperties": { "$ref": "cardano.json#/definitions/ProtocolParameters<Shelley>" }
        }
      }
    }

  , "Update<Alonzo>":
    { "type": "object"
    , "title": "UpdateProposal[Alonzo]"
    , "additionalProperties": false
    , "required": ["proposal", "epoch"]
    , "properties":
      { "epoch": { "$ref": "cardano.json#/definitions/Epoch" }
      , "proposal":
        { "type": "object"
        , "additionalProperties": { "$ref": "cardano.json#/definitions/ProtocolParameters<Alonzo>" }
        }
      }
    }

  , "Update<Babbage>":
    { "type": "object"
    , "title": "UpdateProposal[Babbage]"
    , "additionalProperties": false
    , "required": ["proposal", "epoch"]
    , "properties":
      { "epoch": { "$ref": "cardano.json#/definitions/Epoch" }
      , "proposal":
        { "type": "object"
        , "additionalProperties": { "$ref": "cardano.json#/definitions/ProtocolParameters<Babbage>" }
        }
      }
    }

  , "UtcTime":
    { "title": "UtcTime"
    , "type": "string"
    , "format": "date-time"
    , "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.?[0-9]*Z?"
    }

  , "Utxo":
    { "title": "Utxo"
    , "type": "array"
    , "additionalItems": false
    , "items":
      { "type": "array"
      , "additionalItems": false
      , "minItems": 2
      , "maxItems": 2
      , "items":
        [ { "$ref": "cardano.json#/definitions/TransactionOutputReference" }
        , { "$ref": "cardano.json#/definitions/TransactionOutput" }
        ]
      }
    }

  , "ValidityInterval":
    { "title": "ValidityInterval"
    , "type": "object"
    , "additionalProperties": false
    , "properties":
      { "invalidBefore": { "$ref": "cardano.json#/definitions/Slot" }
      , "invalidAfter": { "$ref": "cardano.json#/definitions/Slot" }
      }
    }

  , "Value":
    { "title": "Value"
    , "type": "object"
    , "propertyNames": { "pattern": "^[0-9a-z]{56}$" }
    , "additionalProperties":
      { "type": "object"
      , "propertyNames": { "pattern": "^[0-9a-z]{0,64}$" }
      , "additionalProperties": { "$ref": "cardano.json#/definitions/AssetQuantity" }
      }
    , "required": [ "ada" ]
    , "properties":
      { "ada":
        { "type": "object"
        , "additionalProperties": false
        , "required": [ "lovelace" ]
        , "properties":
          { "lovelace": { "type": "integer" }
          }
        }
      }
    }

  , "VoterRole":
    { "title": "VoterRole"
    , "type": "string"
    , "enum": [ "constitutionalCommittee", "delegateRepresentative", "stakePoolOperator" ]
    }

  , "VotingPeriod":
    { "title": "VotingPeriod"
    , "type": "string"
    , "enum": [ "voteForThisEpoch", "voteForNextEpoch" ]
    }

  , "VrfProof":
    { "title": "VrfProof"
    , "type": "string"
    , "contentEncoding": "base16"
    }

  , "VrfOutput":
    { "title": "VrfOutput"
    , "type": "string"
    , "contentEncoding": "base16"
    }

  , "Withdrawals":
    { "title": "Withdrawals"
    , "type": "object"
    , "additionalProperties": { "$ref": "cardano.json#/definitions/Lovelace" }
    , "propertyNames": { "pattern": "^stake(_test)?1[0-9a-z]+$" }
    }

  , "VerificationKey":
    { "title": "VerificationKey"
    , "description": "An Ed25519 verification key."
    , "type": "string"
    , "contentEncoding": "base16"
    , "minLength": 64
    , "maxLength": 64
    }
  }
}
